
Include "MapBasic.def"
include "Menu.def"
Include "P:\EDP\EDP VISION\TempFilMapp\CRBK01\tabellInsammlare.def"
include "G:\sbf\Livsmiljö\Gemensamt\mapbasic program projekt\CommonLib\commonLib1.def"

Declare Sub Main
declare sub populatePathTable 'own defenition for class, no possibility to generalize
declare sub FastighetsAvlopp
declare sub doLogics(FastighetsBetInput as String,distrikt as string)
declare sub reningsOppnare( ReningAlias as alias,FastighetsBetInput as String)
declare function countFasGenerateUtvald(FastighetB as string) as integer


Dim tablenames(3),socken,distrikt as string
Dim iProgress,iProgressRange,starttime as integer
,qm as string
	
Sub Main()
	print Chr$(12)
	dim runTime,tempInteger as integer
	runTime = timer()
	
	tablenames(1) = "ErrorTable"
	tablenames(2) = "fastighet_yta"
		
	call closeAllBut(tableNames)

		iprogressRange = 11
		iprogress = 0	
		ProgressBar "Processing...." & iProgressRange & " items"
			     Calling populatePathTable
		Range iProgressRange
	
	tablenames(3) = "sammanfogadTabell"
	
	call tableOpener(tablenames)
	socken = ""
	iprogressRange = tableInfo(tablenames(2),TAB_INFO_NROWS)
	iprogress = 0	
	ProgressBar "Processing...." & iProgressRange & " items"
		     Calling FastighetsAvlopp
	Range iProgressRange
	
	call ressultProcessor()

	call silenttidsSummering(iprogress,iprogressRange,runTime)
	
End Sub

sub populatePathTable
	dim tempstring,tablenames(3) as string
	
	do case iProgress
	case 1
		tempstring = "PathTABLE"
		if not(tableDoesntExist(tempstring)) then
			close table "pathTable"
		End If
		
		if tableDoesntExist(tempstring) then
			CREATE TABLE PathTABLE (tableName Char(40),tablePath Char(256),alternative Char(40)) File TempFileName$("")
		end if
	case 2
		Tempstring = "K:\KARTOR\GOTLANDS KOMMUN\VA\AVLOPP\Enskilt_avlopp_"
		insert into Pathtable (tablePath,TableName) values (Tempstring + "södra.tab", "Enskilt_avlopp_Södra")
		insert into Pathtable (tablePath,TableName) values (Tempstring + "norra.tab", "Enskilt_avlopp_Norra")
		insert into Pathtable (tablePath,TableName) values (Tempstring + "mellersta.tab", "Enskilt_avlopp_Mellersta")
	case 3	
		Tempstring = "K:\KARTOR\GOTLANDS KOMMUN\VA\AVLOPP\Rening_"
		insert into Pathtable (tablePath,TableName) values (Tempstring + "södra.tab", "Rening_Södra")
		insert into Pathtable (tablePath,TableName) values (Tempstring + "norra.tab", "Rening_Norra")
		insert into Pathtable (tablePath,TableName) values (Tempstring + "mellersta.tab", "Rening_Mellersta")
	case 4	
		Tempstring = "K:\KARTOR\SOLEN_PUNKTER\Adresspunkter.TAB"
		insert into Pathtable (tablePath,TableName) values (Tempstring, "Adresspunkter")
	case 5	
		Tempstring = "K:\KARTOR\LANTMÄTERIET\FASTIGHETSKARTAN\Fastighet_yta.TAB"
		insert into Pathtable (tablePath,TableName) values (Tempstring, "fastighet_ytaORg")		
	case 6
		Tempstring = ApplicationDirectory$() & "ErrorTable.TAB"
		if(not(FileExists(Tempstring))) then
			Create Table "ErrorTable" (t1 Char(20),f1 Char(100),p1 Char(254)) file Tempstring TYPE NATIVE Charset "WindowsLatin1"
		end if	
		insert into Pathtable (tablePath,TableName) values (Tempstring, "ErrorTable")		
	case 7
		Tempstring = applicationDirectory$() & "fastighet_ytaAd.tab"
		if(not(FileExists(Tempstring))) then
			redim tableNames(2)
			
			tablenames(1) = "fastighet_ytaORg"
			tablenames(2) = "Adresspunkter"
						
			call tableOpener(tablenames)
						
			Select Fastighet_ytaOrg.KIR ,Adresspunkter.ADRESS , Adresspunkter.POSTORT , Adresspunkter .POSTNR,Fastighet_ytaORg.FNR From Fastighet_ytaOrg,Adresspunkter where Adresspunkter . FNR = Fastighet_ytaORg . FNR into temp 
			commit table temp As Tempstring
			close table fastighet_ytaORg
			close table Adresspunkter		
		end if
		insert into Pathtable (tablePath,TableName) values (Tempstring, "fastighet_yta")
	case 8
		Tempstring = applicationDirectory$() & "reningIhopslagen.tab"
		if(true) then 'should always be rebuilt
			Create Table "reningIhopslagen" (
				Fastighet_rening Char(50),
				Antal_hushåll_rening Char(17),
				Reningstyp Char(15),
				Storlek_m2 Float,
				Beslut_datum Char(10),
				Utförd_datum Char(10),
				Kommentarer Char(254),
				Anslutna_fastigheter_1 Char(34),
				Anslutna_fastigheter_2 Char(50),
				Anslutna_fastigheter_3 Char(50),
				Anslutna_fastigheter_4 Char(50),
				Anslutna_fastigheter_5 Char(50),
				Anslutna_fastigheter_6 Char(50),
				Anslutna_fastigheter_7 Char(50),
				Anslutna_fastigheter_8 Char(50),
				Anslutna_fastigheter_9 Char(50),
				Anslutna_fastigheter_10 Char(50),
				
				Cor Char(30),
				kir Char(50)
			)
			file Tempstring TYPE NATIVE Charset "WindowsLatin1"
			commit table reningIhopslagen 'clears table
			call RunUnSpatialOnTableOfchoiseKir("Rening_Mellersta")
			call RunUnSpatialOnTableOfchoiseKir("Rening_Södra")
			call RunUnSpatialOnTableOfchoiseKir("Rening_Norra")
		end if	
		insert into Pathtable (tablePath,TableName) values (Tempstring, "reningIhopslagen")		
	case 9
		Tempstring = applicationDirectory$() & "todo.tab"
		if(true) then 'should always be rebuilt
			Create Table "todo" (
				Fastighet_rening Char(50),
				Antal_hushåll_rening Char(17),
				Reningstyp Char(15),
				Storlek_m2 Float,
				Beslut_datum Char(10),
				Utförd_datum Char(10),
				Kommentarer Char(254),
				Anslutna_fastigheter_1 Char(34),
				Anslutna_fastigheter_2 Char(50),
				Anslutna_fastigheter_3 Char(50),
				Anslutna_fastigheter_4 Char(50),
				Anslutna_fastigheter_5 Char(50),
				Anslutna_fastigheter_6 Char(50),
				Anslutna_fastigheter_7 Char(50),
				Anslutna_fastigheter_8 Char(50),
				Anslutna_fastigheter_9 Char(50),
				Anslutna_fastigheter_10 Char(50),
				
				Cor Char(30),
				kir Char(50)
			)
			file Tempstring TYPE NATIVE Charset "WindowsLatin1"
		end if	
		insert into Pathtable (tablePath,TableName) values (Tempstring, "todo")		
	case 10
		Tempstring = applicationDirectory$() & "EnskiljtIhopslagen.tab"
		if(true) then
			Create Table "EnskiljtIhopslagen" 
			(
				Diarienummer Char(30),
				Fastighet_tillstånd Char(40),
				Typ_byggnad Char(15),
				Antal_hushåll_tillstånd Char(17),
				Fastighet_rening Char(33),
				Typ_Slamavskiljare Char(15),
				Storlek_m3 Float,
				Typ_rening Char(15),
				Storlek_m2 Float,
				Typ_sluten_tank Char(8),
				Storlek__m3 Float,
				Beslut_datum Date,
				Utförd_datum Date,
				Avgift Char(10),
				Tillstånd_giltigt_tom Date,
				Anteckningar Char(254),
				
				Cor Char (30),
				
				KIR Char(40),
				ADRESS Char(105),
				POSTNR Char(9),
				POSTORT Char(105),
				FNR integer
			)
			file Tempstring TYPE NATIVE Charset "WindowsLatin1"
			call RunUnSpatialOnTableOfchoiseKir("Enskilt_avlopp_Mellersta")
			call RunUnSpatialOnTableOfchoiseKir("Enskilt_avlopp_Södra")
			call RunUnSpatialOnTableOfchoiseKir("Enskilt_avlopp_Norra")
			commit table EnskiljtIhopslagen
		end if	
		insert into Pathtable (tablePath,TableName) values (Tempstring, "EnskiljtIhopslagen")		
	case 11	
		Tempstring = applicationDirectory$() & "sammanfogadTabell.TAB"
		if(not(FileExists(Tempstring))) then
			call createSammanfogadTabell(tempString)
		end if
		insert into Pathtable (tablePath,TableName) values (Tempstring, "sammanfogadTabell")				
	end case
	
	call increment(iProgress,iProgressRange,starttime)
		
End Sub

sub FastighetsAvlopp
	
	Dim FastighetsBetInput,workspaceFilename,temp as string
	,indexNr as integer
	temp = "fastighet_yta"
	workspaceFilename = "KIR"
	indexNr = iprogress+1

	FastighetsBetInput = columnAtIndexAsString(temp,workspaceFilename,indexNr)
	
	'gissar vilket distrikt som fastighet hör till som skall öppnas
	if(socken <> left$(FastighetsBetInput,InStr(1,FastighetsBetInput," ",))) then
		print "change " & socken & " to " & left$(FastighetsBetInput,InStr(1,FastighetsBetInput," ",))
		
		call görTillBasTabell("utvaldFastighet")
		
		Update utvaldFastighet Set TRAKT = left$(KIR,InStr(1,KIR," ",)) DropIndex Auto 'socken från fastighetsbeteckning
		Select * from distriktsindelning, utvaldFastighet where trakt = distriktsindelning.Socken into distriktvärde 'norr,söder, mellersta
		distrikt = RowColumnAsString(distriktvärde,"distrikt")	
		'close table distriktsindelning
		if distrikt = "söder" then
			distrikt = "södra"
		end if
	end if
	
	if(FastighetsBetInput <> "") then
		call doLogics(FastighetsBetInput,distrikt)		
	else
		Error("")
	end if
		
	close table pathTable
end sub
	
sub reningsOppnare( ReningAlias as alias,FastighetsBetInput as String)
	
	onError goto ErrorOpeningRening
	
	Alter Table ReningAlias ( add rowidX Integer ) Interactive
	Update ReningAlias Set rowidX = rowid DropIndex Auto
	
	select * from ReningAlias where obj within any (select obj from utvaldFastighet) into ValtRening2
	
'öppnar rätt avloppsymbolskikt

'assosierar avlopp till fastighet * kolla hur man kan välja avlop på båda sätten samtidigt.
	
	select * from ReningAlias where 
	fastighet_rening = FastighetsBetInput 
	OR Anslutna_fastigheter_1 = FastighetsBetInput 
	OR Anslutna_fastigheter_2 = FastighetsBetInput 
	OR Anslutna_fastigheter_3 = FastighetsBetInput 
	OR Anslutna_fastigheter_4 = FastighetsBetInput 
	OR Anslutna_fastigheter_5 = FastighetsBetInput 
	OR Anslutna_fastigheter_6 = FastighetsBetInput 
	OR Anslutna_fastigheter_7 = FastighetsBetInput 
	OR Anslutna_fastigheter_8 = FastighetsBetInput 
	OR Anslutna_fastigheter_9 = FastighetsBetInput 
	OR Anslutna_fastigheter_10 = FastighetsBetInput 
	into ValtReningMedBeteckning
	
	dim rowIds1(),rowIds2(),rowIds3() as integer
	call rowIdsFromSelection(rowIds1,"ValtRening2")		
	call rowIdsFromSelection(rowIds2,"ValtReningMedBeteckning")
	
	commit table ReningAlias
	Alter Table ReningAlias ( drop rowidX ) Interactive
	commit table ReningAlias
	
	call joinTwoArraysOfIntsIntoThrid(rowIds1,rowIds2,rowIds3)
	
	call selectFromTableByArrayOfRowids(ReningAlias,rowIds3,"ValtRening")
	
	onError goto 0

'assosierar avlopp till fastighet	
	
'fyller ejfunna tabeller med dummyvärden från utvaldfastighet

exit sub
	ErrorOpeningRening:
		note "ErrorOpeningRening: " & Error$()
		resume next
	
End Sub

function countFasGenerateUtvald(FastighetB as string) as integer
	dim tempcountz as integer
	
	select * from Fastighet_yta where kir = fastighetB into utvaldFastighet
	TempCountZ = countRows(utvaldFastighet)
	
	countFasGenerateUtvald = tempCountZ
end function

sub doLogics(FastighetsBetInput as String,distrikt as string)

	Dim ärendenNrInput, tablenames(2), columnOrder as string
	
	if (countFasGenerateUtvald(FastighetsBetInput) <> 0) then 'no fastighet exsist
		columnOrder = "Beslut_datum,utförddatum,Status,Ärendenr,FASTIGHET,Fastighet_tillstånd,Utskick1_datum,Anteckning,slamhämtning,Antal_byggnader"									
		run command "Select " & columnOrder & " from Fastigheter_sweref where obj within ANY (select obj from utvaldFastighet) into SwerefFlagga"
	end if
	
	'gissar vilket avlopp som skall öppnas	
	'öppnar rätt avloppsymbolskikt	
			
	tablenames(1) = "rening" + distrikt
	tablenames(2) = "enskiljt" + distrikt

	'call tableopener(tableNames)
	
	dim ReningAlias,EnskiljtAlias as alias
	dim reningAntal,avloppAntal as integer
	ReningAlias = tablenames(1)
	EnskiljtAlias = tablenames(2)
	
	select * from EnskiljtAlias where obj within any (select obj from utvaldFastighet) into ValtEnskiljt
	
	call ReningsOppnare(reningAlias,FastighetsBetInput)
		
	reningAntal = countRows(ValtRening)
	if reningAntal = 0 then
'		close table ReningAlias
'		select * from utvaldFastighet into ValtRening
	else
'		Browse * From ValtRening
	End If
	
	avloppAntal = countRows(ValtEnskiljt)
	if avloppAntal = 0 then
'		close table EnskiljtAlias
'		select * from utvaldFastighet into ValtEnskiljt noselect
	else
'		Browse * From valtEnskiljtFormated
	End If
	
	if countRows(SwerefFlagga) = 0 then
'		close table swerefflagga
'		select * from utvaldFastighet into swerefflagga
	else
'		Browse * From SwerefFlagga
	End If

End Sub

