
Type UtskriftsObjekt
	
	trovärdighetsIndex as float

	Besöksadress_Adress as String
	Besöksadress_Postnr as String
	Besöksadress_Ort as String
	Besöksadress_Huvudfastighet as String
	FNR as integer
	 
	Verksamhetsutövare_Namn as String
	Verksamhetsutöv_Person_orgnr as integer
 
	Fakturamottagare_NAMN as String
	Fakturamottagare_Faktura_ADRESS as String
	Fakturamottagare_Faktura_POSTNR as String
	Fakturamottagare_Faktura_POSTOR as String
 
	Enhet as String
	Anteckning as String
	Aktuell_timavgift as integer
	Timdebitering as Logical
	Objektnamn as String

	flik_Avloppsänlaggni_Boendetyp as String
	flik_Avloppsanläggn_Byggnadsår as date
	flik_Avloppsa_Besiktningsdatum as date
	flik_Avloppsanläg_Beslutsdatum as date
	Vatten as String
  
	Recipient as String

	Inventering as String
	Inventeringsinformation_Datum as date
	Inventeringsinformation_Status as String
	Bedömning as String
  
	fliken_Fastigheter as String
	fliken_Fastigheter_FNR as integer

	PunkttypAB as String
	Fliken_Koordinater as String

	fliken_Ärenden as String

	Anläggningskategori as String
	besiktningdatum as date
	beslutsdatum as date
	Anläggningstyp as String
	Volym_m3 as float
	Anl_för_EftR_TöInterv_mån as integer
	AnlF_efR_Koordinater_X_o_Y as String
	PunkttypER as String
	Anläggning_för_EfterföljRText as String

	Anläggningskategori_2 as String
	Anläggning_för_S_Anläggningstyp as String
	Externt_Tjänsteid as String
	text as String
	Anläggning_för_Slamav_Volym_m3 as float
	
	Anläggningskategori_3 as String
	AnlförEfterR_Anläggningstyp as String
	besiktningdatum_2 as date
	beslutsdatum_2 as date
	Externt_Tjänsteid_2 as String
	Volym_m3_2 as float

	Objektid as integer
	Path as String
	Diarienummer as String
	Löpnummer as integer

	sql as string
	reningsindex as integer
	
end Type


Type ReningsObjekt

	Fastighet_rening as string
	Antal_hushåll_rening as integer
	Reningstyp as string
	Storlek_m2 as float
	Beslut_datum as date
	Utförd_datum as date
	Kommentarer as string
	spatialFastighet as string
	spatialShift as string
	rowIndex as integer
	kordinater as string
	Anslutna_fastigheter() as string

end Type

Type SwerefObjekt

	FASTIGHET as string
	Fastighet_tillstånd as string
	Ärendenr as string
	Beslut_datum as date
	Status as string
	Utskick1_datum as date
	Anteckning as string
	utförddatum as date
	slamhämtning as string
	Antal_byggnader as integer	
	kordinater as string
	SpatialFastighet as string
	rowIndex as integer
	
end Type

Type EnskiltObjekt

	Diarienummer as string
	Fastighet_tillstånd as string
	Typ_byggnad as string
	Antal_hushåll_tillstånd as string
	Fastighet_rening as string
	Typ_Slamavskiljare as string
	Storlek_m3 as float
	Typ_rening as string
	Storlek_m2 as float
	Typ_sluten_tank as string
	Storlek__m3 as float
	Beslut_datum as date
	Utförd_datum as date
	Avgift as integer
	Tillstånd_giltigt_tom as date
	Anteckningar as string
	spatialShift as string
	spatialFastighet as string
	kordinater as string
	rowIndex as integer
	
end Type

Type FastighetsObjekt
	
	fastighet as string
	fnr as integer
	
	HuvudSweref as integer
	HuvudRening as integer
	HuvudEnskilt as integer
	
	swerefObjekt as String
	ReningsObjekt as String
	EnskiltObjekt as String
	
	
	adress as string
	postnr as string
	ort as string
	kir as string
			
	namn as string
	personnr as integer

	adressNamn as string
	PostNrNamn as string
	PostortNamn as string
	
End Type

Type TrovärdighetsObjekt
	index as float
	ex as integer
	fx as integer
	rx as integer
End Type


Type AnläggningsObjekt

		Anläggningskategori as string '",: "Char(29)",: "Efterföljande rening\"/\"Slamavskiljare\"/\"Tank\"/\"Extra inventeringsinformation"
		Kartpunkt as string '",: "Char(20)",:PunkttypER "Efterföljande rening\"/\"Slamavskiljare\"/\"Tank\"/\"Extra inventeringsinformation"
		
		besiktningdatum as date ',: "datum(ÅÅ-MM-DD)",: "utförandedatum  (rening/beslut/tank)"
		beslutsdatum as date '",: "datum(ÅÅ-MM-DD)",: "beslutsdatum (rening/beslut/tank)"
		
		Anläggningstyp as string '",: "Char(15)",: "Typ_rening (rening)/Typ_Slamavskiljare (beslut)/Typ_av_tank (Beslut)/(om sweref) \"Klart Vatten"
		
		Volym_m3 as float '",: "float",: "Storlek_m2 (rening)/Storlek_m3  (Beslut)"
		
		Antal_hushåll_rening as integer '",: "integer",: "Anl_för_EftR_TöInterv_mån (rening)"
		
		Koordinater as string '",: "Char(19)",: " AnlF_efR_Koordinater_X_o_Y (där infiltration/markbädd är belägen)/(där ansluten)/(där EXTRA inventeringsinformation är belägen)"
				
		Kommentarer as string '",: "Char(253)(fältmaxlängd)",: "Anläggning_för_EfterföljRText (rening/sweref/beslut)"
		
		ärendenr as string '",: "integer",: " Externt Tjänsteid (beslut/tank/sweref)"
		
		Typ_byggnad as string '",: "Char(15)",: "Anläggning_för_S_Anläggningstyp (beslut)"
		
		Status as string '",: "Char(6)",: " text (sweref)"
		
		Slamdispense as date '",: "datum(ÅÅ-MM-DD)",:AnlförEfterR_Anläggningstyp ""
		
		Utskick1_datum as date '",: "datum(ÅÅ-MM-DD)",: "Anläggning_för_Slamav_Volym_m3  (sweref)"
		
		radNummer as integer

end type

declare function trovärdighetsIndexer(
	swerefobjekt as swerefobjekt,
	reningsobjekt as reningsobjekt,
	enskiltobjekt as enskiltobjekt
	) as float

declare sub createRessultTable(byVal tableName as string,byVal pathX as string)

declare sub skapaMutationer(en() as enskiltObjekt ,re() as reningsobjekt ,sw() as swerefobjekt,byVal minimumDebt as integer)

declare function InitializeSwerefObjekt(intx as integer,swerefobjekt() as swerefobjekt,swerefTokenObjekt() as swerefobjekt) as integer
declare function InitializeEnskiltObjekt(intx as integer,enskiltobjekt() as enskiltobjekt,enskiltTokenObjekt() as enskiltobjekt) as integer
declare function InitializeReningObjekt(intx as integer,reningsobjekt() as reningsobjekt,reningsTokenObjekt() as reningsobjekt) as integer

declare sub generateTokenObjekts(reningsTokenObjekt() as reningsobjekt, enskiltTokenObjekt() as enskiltObjekt, swerefTokenObjekt() as swerefobjekt)
declare function ReningÄrInteToken(x as reningsobjekt) as logical
declare function EnskiltÄrInteToken(enskiltTokenObjekt as enskiltObjekt) as logical


declare function countShiftenGenUtvald(FastighetB as string) as integer
declare function CreateTable_reningIhopslagen as string
declare function CreateTable_EnskiltIhopslagen as string
declare function expandUtskriftsobjekt(utskriftsObjekt() as utskriftsobjekt) as integer

declare function countDupes(byVal fastighetsBet as string) as integer
declare function kollaBredd(values() as string) as logical
declare function getCOrd(byVal ColumnName as string) as string
declare function countOccurences(byVal colummn as string) as integer

declare sub injectGemensamma()
declare sub insertInitialTables()


declare sub presentTime(swerefStart as float,ReningStart as float, EnskiltStart as float, objektCreationStart as float,swerefStop as float,ReningStop as float, EnskiltStop as float, objektCreationStop as float)
declare sub createRessultTableX(byval tablename as string, byval filePath as string)
declare sub UtskriftsObjToInsertStringArray(värde() as string, utskriftsobjekt as utskriftsobjekt)

declare sub doTheDateStandardisation(värde() as string,påPlatts() as string,byVal DatumSträngTagIsammanfogad as string)

declare function DiarieMixedToUnit(byVal text as string) as string

declare sub genereraFastighetsYtaMedFastighetsAdress()

declare sub getAnslutna(anslutan() as string)

declare sub StandardiseraDiarie(byval a as string,byval b as string,c() as string)

declare function enskiltAsString(enskiltTokenObjekt as EnskiltObjekt) as string
declare function ReningAsString(reningsTokenObjekt as reningsobjekt) as string
declare function swerefAsString(swerefTokenObjekt as swerefObjekt) as string

declare function swerefÄrInteToken(swerefObjekt as swerefObjekt) as logical
Declare Sub gemAnslutna(caseString as string,ressultArray() as string)

declare sub messageEveryString(StringArray() as String)
declare function DebuggStringEveryInt(IntArray() as integer) as string


declare sub PrepareGemensamma()

declare sub do6_1_assosieraFnr
declare sub do6_2_MHK
declare sub do6_3_Anteckningar
declare sub do6_4_MultiplaFastigheter
declare sub do6_5_MånsBilder
declare sub do6_6_Gem
declare sub do6_7_CorW3Fas
declare sub do6_8_SlamDisp 
declare sub do6_9_byggnadsÅrTillFyraTecken

declare sub enskiltCopyConstruktor(inputX as enskiltObjekt, outputXTable() as enskiltObjekt,byVal outPutItterator as integer)
declare sub reningObjCopyConstr(inputX as ReningsObjekt,OutputTable() as ReningsObjekt,byVal outPutItterator as integer)
declare sub swerefObjektCopyConstr(inputX as swerefObjekt, outputTable() as swerefObjekt,byVal outPutItterator as integer)

declare sub TabToObjEnskilt(byVal nSocken as string,output() as EnskiltObjekt)
declare sub TabToObjRening(byVal nSocken as string,output() as ReningsObjekt)
declare Sub TabToObSweref(byVal SockenFastigheter as string,output() as swerefObjekt)

declare function EnskiltSubset(inputTable() as EnskiltObjekt,FastighetsBetInput as String,OutputTable() as EnskiltObjekt) as integer
declare function swerefSubset(inputTable() as swerefObjekt,FastighetsBetInput as String,OutputTable() as swerefObjekt) as integer
declare function reningsSubset(inputTable() as ReningsObjekt,FastighetsBetInput as String,OutputTable() as ReningsObjekt) as integer

declare sub createFastighetsTable(byval tablename as string, byval filePath as string)
declare sub saveFastighetsObjektToTable(tableName as string,inputX as fastighetsObjekt,ReningsObjekt() as ReningsObjekt,SwerefObjekt() as SwerefObjekt,EnskiltObjekt() as EnskiltObjekt)
declare sub FastighetsObjCreation(tableName as string,fastighetsBetInput as string,fastighetensReningsobjekt() as reningsobjekt,fastighetensSwerefObjekt() as swerefObjekt,fastighetensEnskiltObjekt() as enskiltObjekt)
declare sub FastighetsObjToInsertStringArray(output() as string, inputx as fastighetsObjekt,ReningsObjekt() as ReningsObjekt,SwerefObjekt() as SwerefObjekt,EnskiltObjekt() as EnskiltObjekt)

declare sub fetchReningByIndex(stringArray() as string,output() as reningsObjekt)
declare sub fetchEnskiltByIndex(stringArray() as string,output() as enskiltObjekt)
declare sub fetchSwerefByIndex(stringArray() as string,output() as swerefObjekt)

declare function EnskiltSubsetByFasgtighet(inputTable() as EnskiltObjekt,FastighetsBetInput as String,OutputTable() as EnskiltObjekt) as integer
declare function swerefSubsetByFasgtighet(inputTable() as swerefObjekt,FastighetsBetInput as String,OutputTable() as swerefObjekt) as integer
declare function reningsSubsetByFasgtighet(inputTable() as ReningsObjekt,FastighetsBetInput as String,OutputTable() as ReningsObjekt) as integer

declare sub ReningSubsetByIndex(supersetTable() as reningsObjekt, indexArray() as string,OutputTable() as reningsObjekt)
declare sub EnskiltSubsetByIndex(supersetTable() as EnskiltObjekt,indexArray() as String,OutputTable() as EnskiltObjekt)
declare sub SwerefSubsetByIndex(supersetTable() as swerefObjekt, indexArray() as string,OutputTable() as swerefObjekt)


declare function getMain(inputString as string, output() as string) as integer

declare function findWhereInStringArray(byVal värde as string, array() as string) as integer 

declare sub putAtIndex(arrayTobePutIn() as string,inputString as string,positionX as integer)

declare sub saveSockenProgress(socken as string)

declare sub saveUtskriftsProgress(G_utskriftsObjekt() as utskriftsObjekt)

Declare Sub insertAt(
				trodvädighet as trovärdighetsobjekt, 'which rows in each table that should be moved
				enskiltTokenObjekt() as enskiltObjekt,
				reningsTokenObjekt() as reningsObjekt,
				swerefTokenObjekt() as swerefObjekt,
				toInsertAt as integer) ' to which place in the table

Declare Sub genTrovärdighet(trodvädighet() as trovärdighetsobjekt,enskiltTokenObjekt() as enskiltObjekt,reningsTokenObjekt() as reningsObjekt,swerefTokenObjekt() as swerefObjekt)
Declare sub initializer(reningsTokenObjekt() as reningsobjekt,enskiltsTokenObjekt() as enskiltObjekt,swerefsTokenObjekt() as swerefobjekt)

Declare Sub subTablesafter( outPutEn() as enskiltObjekt,inputEn() as enskiltObjekt, outPutre() as reningsObjekt,inputre() as reningsObjekt, outPutsw() as swerefObjekt,inputsw() as swerefObjekt, byVal minimumDebt as integer)

Declare sub Avloppsanläggning(uObj() as UtskriftsObjekt,ittr as integer,eO as enskiltobjekt)
Declare sub huvudObjekt(uObj() as UtskriftsObjekt, it as integer)
Declare sub samlingsobjekt(uObj() as UtskriftsObjekt,ittr as integer)
Declare sub inventeringsinformation(uObj() as UtskriftsObjekt,ittr as integer,so as swerefobjekt)

Declare sub ärenden(uObj() as UtskriftsObjekt,ittr as integer)
Declare sub koordinater(uObj() as UtskriftsObjekt,ittr as integer)
Declare sub Recipient(uObj() as UtskriftsObjekt,eO as enskiltobjekt, rO as reningsobjekt,ittr as integer) 
Declare sub Anläggning(uObj() as anläggningsobjekt,eO() as enskiltobjekt,rO() as reningsobjekt,sO() as swerefobjekt)

declare sub utskrivningsobjektsKonstruktor(
		sO() as swerefobjekt,
		rO() as reningsObjekt,
		eO() as enskiltobjekt
	)
	
Declare function reningsfastigheterAsString(reningsObjekt as reningsObjekt) as string
 
Declare function anläggningsobjektToUtskifts(anl() as AnläggningsObjekt,uObj() as UtskriftsObjekt,ittr as integer) as integer

declare function diarienummerForUtskriftsObjekt(
	utskriftsObjekt() as utskriftsobjekt,
	itterator as integer,
	enskiltObjekt() as enskiltobjekt,
	swerefObjekt() as swerefobjekt, 
	objektid as integer
	) as integer


declare sub fastighetForUtskriftsobjekt(utskriftsObjekt() as utskriftsobjekt,itterator as integer,swerefObjekt() as swerefobjekt,reningsobjekt() as reningsobjekt,enskiltObjekt() as enskiltobjekt, objektid as integer)

declare sub anteckningKordinat(sweref as swerefobjekt,ensk as enskiltobjekt,rening as reningsobjekt ,uObj() as utskriftsobjekt, ittr as integer)
Declare function resTabPos(byVal colName as string) as integer

declare function enforceFormat(byVal inputx as string,byVal format as string,byVal lenght as integer) as string
declare function enforceFormTa(byVal inputx as string,byVal col as string) as string

declare function textAppend(byVal initial as string,byVal prefix as string,byVal  appendant as string) as string

