Include "MapBasic.def"
include "Menu.def"
include "C:\Users\crbk01\Desktop\WhenOffline\MapInfoTabToCsv\CommonLib\commonLib1.def"
include "MainLoop.def"

global 
G_workDir,
G_tillstnd,G_husll,G_utfrd,G_rndenr
,G_socken as string,
G_rebuild,G_debugg as logical,
G_ProgressRange,G_Progress,G_senastObjectID, 
G_senastTid,G_anvndaReningar(),G_starttime,G_TempRaknare as integer

,G_reningsObjekt() as reningsObjekt , G_swerefObjekt() as swerefObjekt, G_EnskiltObjekt() as EnskiltObjekt

Sub Main()
	'Todo: Kom och till skall bli egna arcgis skikt med future synkning men hur får prata med oscar
	'Todo: kordinatfliken behöver vara 2 tecken längre
	'Todo: 900+ rows of badly formated fastighetsbeteckningar
	'Todo: Anläggningsanteckningar syns inte när man har en sweref som sätter anteckningar, vi behöver slåihop dessa
	'Todo: we need to remove anläggningar we already used, most likely best to do after the socken has bin recreated
	'Todo: Gammelgarn trosings 2:1 status prioritet, typ grön > ejvtn
	'Todo: genereraSQLVärdeArray är även denna farligt frånskilld, borde vara del av utskirvsobject objektet
	'Todo: method that produces logg file, for each socken
	'Todo: Mettoder som dumpar alla globala Arrays
	'Todo: add aditional failsafe to copy consgructors to make sure fastigheters Array is correct etc


	G_debugg = true G_rebuild = true
	G_senastTid = 0 
	G_socken = "" 
	G_TempRaknare = 0
	
	G_husll = "hush�ll"
	G_utfrd = "Utf�rd"
	G_tillstnd = "tillst�nd"
	G_rndenr = "�rendenr"

	if G_rebuild then
		drop table sockentabell
		select * from socknarOfiltrerade into sockentabell
	End If
	
	fetch first from sockentabell DO Until EOT(sockentabell)
		dim tableName,filePath,fastighetsObjektsTabell as string 

		onError goto genSortFa G_socken = sockenTabell.sockenX call opensingletable("fastighet_yta") dim tempQuery as string
		tempQuery = "Select * from fastighet_yta where left$(KIR,InStr(1,KIR,"" "",)-1) = " & Chr$(34) & G_socken & Chr$(34) &
		" AND kir <> """" group by kir into SorteradFastighet" run command tempQuery onError goto 0
		
        onError goto LoadSocken call loadSocken() onError goto 0
		if G_debugg then print "LoadSocken" end if
		onError goto createFastighetsTable fastighetsObjektsTabell = G_socken & "fastighetsObjekt" 		filePath = ApplicationDirectory$() + fastighetsObjektsTabell & ".tab"  		call createFastighetsTable(fastighetsObjektsTabell,filePath) onError goto 0
		if G_debugg then print "createFastighetsTable" end if
		G_TempRaknare = 0 ' how many fastigheter has no anläggning
		onError goto processor_3PrepMutate G_ProgressRange = tableInfo(SorteradFastighet,TAB_INFO_NROWS) if G_ProgressRange <> 0 then	G_starttime = timer() G_Progress = 0 fetch first from SorteradFastighet ProgressBar "processor_3PrepMutate...." & G_ProgressRange & " items" Calling processor_3PrepMutate Range G_ProgressRange	call SilenttidsSummering(G_Progress,G_ProgressRange,G_starttime,"processor_3PrepMutate") end if onError goto 0	
		if G_debugg then print "processor_3PrepMutate" end if
		onError goto processor_4Mutate  tableName = "sockenRessultat" filePath = ApplicationDirectory$() + tableName & ".tab" call createRessultTableX(tablename,filePath)	 		G_ProgressRange = tableInfo(fastighetsObjektsTabell,TAB_INFO_NROWS) if G_ProgressRange <> 0 then	G_starttime = timer() G_Progress = 1 fetch first from fastighetsObjektsTabell 		ProgressBar "processor_4Mutate...." & G_ProgressRange & " items" Calling processor_4Mutate Range G_ProgressRange	call SilenttidsSummering(G_Progress,G_ProgressRange,G_starttime,"processor_4Mutate") end if onError goto 0 		
		if G_debugg then print "processor_4Mutate" end if
		onError goto saveSockenProgress	if tableInfo("sockenRessultat",TAB_INFO_NROWS) <> 0 then	call saveSockenProgress(G_socken) else	goto saveSockenProgress	end if	onError goto 0 'Runns = Runns+1 if(runns = 2) then '	end program	
		if G_debugg then print "saveSockenProgress" end if
	fetch next from sockentabell loop
	
end program
	LoadSocken:	print "LoadSockenError"	print error$()	    end program
	createFastighetsTable: print "processor_1PreError" print error$()	    end program
	processor_3PrepMutate:	print "processor_3PrepMutateError"	print error$()	    end program
	processor_4Mutate:	print "processor_4MutateError"	print error$()	    end program
	saveSockenProgress: print "[ERROR_saveSockenProgressError] 0 objekts " & G_socken print error$()	    end program
	genSortFa:	print "selectionError " & tempQuery	print error$()	end program
end sub

sub loadSocken()
'Todo:rewrite so that progressbar can be visualized in this method, 'was thinking that maybe a case division, 'DOes case work with variables	it seems like it DOes in fact work ' but maybe not neccessary		
	dim CurrentSocken as string
		
	if G_socken <> "" then
		print "change to " & G_socken dim tableNames(4) as string CurrentSocken = G_socken & "Fastigheter" tablenames(1) = CurrentSocken tablenames(2) = "EnskiltIhopslagen" tablenames(3) = "reningIhopslagen" tablenames(4) = "Fastigheter_sweref" call tableOpener(tablenames) G_starttime = timer() 
		
		Call TabToObjRening(CurrentSocken,G_ReningsObjekt) 'tempinterger = UBound(G_reningsObjekt()) call SilenttidsSummering(tempinterger,tempinterger,G_starttime,"TabToObjRening") G_starttime = timer() 
		Call TabToObjEnskilt(CurrentSocken,G_EnskiltObjekt) 'tempinterger = ubound(G_EnskiltObjekt) call SilenttidsSummering(tempinterger,tempinterger,G_starttime,"TabToObjEnskilt") G_starttime = timer()
		Call TabToObSweref(CurrentSocken,G_SwerefObjekt) 'tempinterger = ubound(G_swerefObjekt) call SilenttidsSummering(tempinterger,tempinterger,G_starttime,"TabToObSweref")
	end if
	
end sub

function diarienummerForUtskriftsObjekt( utskriftsObjekt() as utskriftsobjekt, itterator as integer, enskiltObjekt() as enskiltobjekt, swerefObjekt() as swerefobjekt, objektid as integer ) as integer dim rendennr(),tempDirty() as string ,x,returnInteger as integer
		
	for x=1 to ubound(enskiltObjekt) call addStringToArrayAsifSet(tempDirty(),enskiltObjekt(x).Diarienummer) next
	
	for x=1 to ubound(swerefObjekt) call addStringToArrayAsifSet(tempDirty(),swerefObjekt(x).rendenr) next	
		
	for x=1 to ubound(tempDirty) call addStringToArrayAsifSet(rendennr,DiarieMixedToUnit(tempDirty(x))) next
		
	for x = 1 to ubound(rendennr)
		if (rendennr(x) <> "MHN") then
			itterator = itterator + 1
			redim utskriftsobjekt(itterator)
			utskriftsobjekt(itterator).fliken_renden = rendennr(x)
			utskriftsobjekt(itterator).Objektid = objektid
			
			returnInteger = returnInteger + 1 
		end if
	next		

	diarienummerForUtskriftsObjekt = returnInteger
end function

function anlggningsobjektToUtskifts(anl() as AnlggningsObjekt,uObj() as UtskriftsObjekt,ittr as integer) as integer
dim x,q as integer

	for x=1 to ubound(anl)
		ittr = ittr + 1 
		redim uObj(ittr)
		uObj(ittr).Anlggningskategori = anl(x).Anlggningskategori 
		uObj(ittr).PunkttypER = anl(x).Kartpunkt
		uObj(ittr).besiktningdatum = anl(x).besiktningdatum
		uObj(ittr).beslutsdatum = anl(x).beslutsdatum 
		uObj(ittr).Anlggningstyp = anl(x).Anlggningstyp 
		uObj(ittr).Volym_m3 = anl(x).Volym_m3 		
		uObj(ittr).Anl_fr_EftR_TInterv_mn = anl(x).Antal_hushll_rening 		
		uObj(ittr).AnlF_efR_Koordinater_X_o_Y = anl(x).Koordinater 				
		uObj(ittr).Anlggning_fr_EfterfljRText = anl(x).Kommentarer 		
		uObj(ittr).Externt_Tjnsteid  = anl(x).rendenr 		
		uObj(ittr).Anlggning_fr_S_Anlggningstyp = anl(x).Typ_byggnad 		
		uObj(ittr).text = anl(x).Status 		
		uObj(ittr).AnlfrEfterR_Anlggningstyp = anl(x).Slamdispense 		
		uObj(ittr).Anlggning_fr_Slamav_Volym_m3 = anl(x).Utskick1_datum 	
		uObj(ittr).reningsindex = anl(x).radnummer
		uObj(ittr).objektid = G_senastObjectID
	next
	
	anlggningsobjektToUtskifts = ubound(anl)
end function

sub Recipient(uObj() as UtskriftsObjekt,eO as enskiltobjekt, rO as reningsobjekt,ittr as integer) 

	uObj(ittr).Recipient = iif(rO.spatialshift <> "", rO.spatialshift, iif(rO.Fastighet_rening <> "",rO.Fastighet_rening,rO.rowIndex))

end sub

sub createFastighetsTable(byval tablename as string, byval filePath as string)

	onError goto noTable close table tablename onError goto 0
	print "{Creating " & tablename
	
	onError goto creationError
		dim query as string
		query = "Create Table " & tableName & " (adress	Char(253),postnr	Char(253),ort Char(253),fastighet	Char(34),fnr integer,HuvudSweref integer,HuvudRening integer,HuvudEnskilt integer,swerefobjekt	Char(253),reningsobjekt	Char(253),enskiltObjekt	Char(253)) file "& chr$(34) & filePath & chr$(34)
		run command query 
		Create Map For tablename CoordSys Earth Projection 1, 104
	onError goto 0
	
exit sub
	creationError: Note "createFastighetsTableError" & error$() print query end program
	noTable: resume next 
end sub

sub inventeringsinformation(uObj() as UtskriftsObjekt,ittr as integer,so as swerefobjekt)
	'	 "Inventeringsinformation","Inventering",: "Char(12)",: "(om sweref) \"Klart Vatten"
	'	 "Inventeringsinformation","Inventeringsinformation_Datum",: "datum(-MM-DD)",: "Utskick1_datum (sweref)" 
	'	 "Inventeringsinformation","Inventeringsinformation_Status",: "Char(6)",: "Status (sweref)" 
	'	 "Inventeringsinformation","Bedmning",: "Char(15)",: "rendenr (sweref)"': "Alla fastigheter som nmns p alla anlggningar som ligger huvudfastigheten (objektet)", 
    '     har sweref
	if(swerefrInteToken(sO)) then
		uObj(ittr).Inventering = "klart Vatten"
	end if
	
	uObj(ittr).Inventeringsinformation_Datum = sO.Utskick1_datum
	uObj(ittr).Inventeringsinformation_Status = sO.Status
	uObj(ittr).Bedmning = sO.rendenr

End Sub

sub UobjInitizializer()
	'Resolvedtodo: Om fler än en lägg anteckning som är relevant flagga på huvudsida Och irrelvant flagga som object anteckning,.
	'resolvedtodo: Med prefix Kommentar anläggning:Kommentar inventering:Kommentar rening:
	'todo: Högst prio flagga röd, bkom, lila, ejvtn, grön,Annars mest info.
	'todo: Bara extra inventerings (fler än 1 flagga) info spara koord, annars ignorera koord.
	'todo: check that the ammount of utskrivningsobjekt is correct to intput.
	dim ensk() as enskiltobjekt,ren() as reningsobjekt,sweref() as swerefobjekt,inputString,RenObjIndex(),EnObjIndex(),SweObjIndex() as string,fAlias as alias,ignore as integer

	'skapa muttationer organiserar om rrayna om s behvs
	dim before as integer
	
	fAlias = G_socken & "fastighetsObjekt.reningsobjekt" inputString = fAlias 
	ignore = SplitStringAtCharacter(inputString,",", RenObjIndex())
	fAlias = G_socken & "FastighetsObjekt.enskiltObjekt" inputString = fAlias 
	ignore = SplitStringAtCharacter(inputString,",", EnObjIndex())
	fAlias = G_socken & "FastighetsObjekt.swerefobjekt" inputString = fAlias 
	ignore = SplitStringAtCharacter(inputString,",", SweObjIndex())

'getFirstSplitByCom

	call ReningSubsetByIndex(G_reningsobjekt,RenObjIndex,ren)
	call EnskiltSubsetByIndex(G_enskiltobjekt,EnObjIndex,ensk)
	call SwerefSubsetByIndex(G_swerefObjekt,SweObjIndex,sweref)

	before = ubound(ren) + ubound(ensk) + ubound(sweref)
	if (ubound(ren) > 1 OR ubound(ensk) > 1 OR ubound(sweref) > 1) then
		call skapaMutationer(ensk,ren,sweref,1) 
	end if

	if (before <> ubound(ren) + ubound(ensk) + ubound(sweref)) then print "WARNING before:" & before & " after_ " & ubound(ren) + ubound(ensk) + ubound(sweref) end if
		
	'utskriftskonstruktor frvntar sig att ingen av objekten har 0 som rowindex, alts, d blir det tomt.
	if (ubound(ren) < 1 OR ubound(ensk) < 1 OR ubound(sweref) < 1) then
		call initializer(ren,ensk,sweref)
	end if
	call utskrivningsobjektsKonstruktor(sweref,ren,ensk)
		
end sub

sub processor_4Mutate()
	onError goto UobjInitizializer 
		dim tempALias as alias 
		
		call UobjInitizializer()
	
		tempAlias = G_socken & "fastighetsObjekt"
		call increment(G_Progress,G_ProgressRange,G_starttime)	
	fetch next from tempAlias	onError goto 0
exit sub
	UobjInitizializer: print error$() end program
end sub

sub processor_3PrepMutate()
 'initializing global vars senasteFastighet = "" currentObjectid = 0 socken = "" runns = 0	x=1'	end program 'insert into Pathtable (tablePath,TableName) values (Tempstring, "SorteradFastighet") '	G_debugg = (fastighetJustNu = "ALA OLLAJVS 1:17")'dim G_debugg as logical G_debugg = false if(G_debugg) then end program end if'reads selected row from sorteradFastighet 
	dim fastighetJustNu as string
	fastighetJustNu = SorteradFastighet.kir 
	if fastighetJustNu <> "" then 
		call OmObjektSkapaFastighet(fastighetJustNu) 
	else
		print "noFastighet"
	end if
	fetch Next from SorteradFastighet call increment(G_Progress,G_ProgressRange,G_starttime)
end sub

sub saveSockenProgress(socken as string)

	dim query	,filePath,vrde(),tablename as string,x as integer
	,tablenameA as alias
	
	tableName = Socken & "ressultat" 
	filePath = ApplicationDirectory$() + tableName & ".tab"

	call createRessultTableX(tablename,filePath)

	tableNameA = tableName
	Insert Into tableNameA select * From SockenRessultat DropIndex Auto

	commit table tableName
	drop table SockenRessultat
	methodEnd:
exit sub
queryError:
	print "[saveSockenProgress_error] queryError|" & query & "dropping table" print error$() drop table tableName resume methodEnd
end sub

function getFirstSplitByCom(inputString as string, output() as string) as integer
		
	dim ant as integer
	ant = SplitStringAtCharacter(inputString, ",",output()) 
	
	if (ant = 1) then
		getFirstSplitByCom = val(output(1))
	else
		getFirstSplitByCom = 0
	end if

end function

sub createRessultTableX(byval tablename as string, byval filePath as string)
	'Todo: move into own MBX
	'Todo: should not hardType the fieldSpecifications, should be a global object some how
	'for example a defenition class, where you call it's paramteres to get the defenition, 
	onError goto noTable close table tablename onError goto 0
	
	onError goto creationError

	Create Table tableName (
				Besksadress_Adress	Char(253),								'Fastighetens adress	->	Adress	Char(253)(ltmaxngd)	Besksadress_Adress
				Besksadress_Postnr	Char(253),								'Postnr	->	Postnr	Char(253)(ltmaxngd)	Besksadress_Postnr
				Besksadress_Ort Char(253),									'Ort	->	Ort	Char(253)(ltmaxngd)	Besksadress_Ort
				Besksadress_Huvudfastighet	Char(34),						'Fastighet_tillstnd	->	Huvudfastighet	Char(34)	Besksadress_Huvudfastighet
				FNR integer,												'Fastighet_tillstnd	->	Huvudfastighet(FNR)	integer	FNR
				ignore	Char(253),											'Lagfaren gare	->	Namn	Char(253)(ltmaxngd)	Verksamhetsutvare_Namn
				ignore integer,												'Person- /Orgnr	->	Person- /Orgnr	integer	Verksamhetsutv_Person_orgnr
				ignore Char(253),											'Namn (kund)	->	Namn (kund)	Char(253)(ltmaxngd)	Fakturamottagare_NAMN
				ignore	Char(253),											'Adress (kund)	->	Adress (kund)	Char(253)(ltmaxngd)	Fakturamottagare_Faktura_ADRESS
				ignore	Char(253),											'Postnr (kund)	->	Postnr (kund)	Char(253)(ltmaxngd)	Fakturamottagare_Faktura_POSTNR
				ignore	Char(253),											'Ort (kund)	->	Ort (kund)	Char(253)(ltmaxngd)	Fakturamottagare_Faktura_POSTOR
				Enhet Char(6),												'"VATTEN"	->	Enhet	Char(6)	Enhet
				Anteckning	Char(253),										'Anteckning (sweref/anlggning/rening)	->	Anteckning	Char(253)	Anteckning
				Aktuell_timavgift integer,									'925	->	Aktuell timavgift	integer	Aktuell timavgift
				Timdebitering Logical,										'TRUE	->	Timdebitering	Boolean	Timdebitering
				Objektnamn	Char(36),										'Huvudfastighet	->	Objektnamn	Char(36)	Objektnamn
				flik_Avloppsnlaggni_Boendetyp	Char(15),					'Typ_byggnad (beslut)	->	Boendetyp	Char(15)	flik_Avloppsnlaggni_Boendetyp
				flik_Avloppsanlggn_Byggnadsr Char(4),						'Tillstnd_giltigt_tom (beslut)	->	Byggnadr	Char(4)	flik_Avloppsanlggn_Byggnadsr
				flik_Avloppsa_Besiktningsdatum Date,						'utfrandedatum  (beslut)	->	Besiktningsdatum	datum-MM-DD)	flik_Avloppsa_Besiktningsdatum
				flik_Avloppsanlg_Beslutsdatum Date,						'beslutsdatum (beslut)	->	Beslutsdatum	datum-MM-DD)	flik_Avloppsanlg_Beslutsdatum
				Vatten	Char(17),											'Antal_hushll_tillstnd (beslut)	->	Vatten	Char(17)	Vatten
				Recipient Char(49),											'Fastighet Rening (rening)	->	Recipient	Char(49)	Recipient
				Inventering	Char(12),										'(om sweref) "Klart Vatten"	->	Inventering	Char(12)	Inventering
				Inventeringsinformation_Datum Date,							'Utskick1_datum (sweref)	->	Datum 	datum-MM-DD)	Inventeringsinformation_Datum
				Inventeringsinformation_Status	Char(6),					'Status (sweref)	->	Status	Char(6)	Inventeringsinformation_Status
				Bedmning Char(15),											'rendenr (sweref)	->	Bedmning	Char(15)	Bedmning
				fliken_Fastigheter	Char(34),								'Anslutna_fastigheter	->	fliken Fastigheter	Char(34)	fliken_Fastigheter
				fliken_FastigheterFNR integer,								'Anslutna_fastigheter	->	fliken Fastigheter(FNR)	integer	fliken Fastigheter(FNR)
				PunkttypAB Char(16),										'Punkttyp	->	Ansluten byggnad	Char(16)	PunkttypAB
				Fliken_Koordinater	Char(19),								'Koordinater (beslut/rening/sweref)	->	X o Y	Char(19)	Fliken_Koordinater
				fliken_renden	char(13),									'Diarienummer(Flagg,Beslut)	->	fliken renden	char(13)	fliken renden
				Anlggningskategori	Char(29),								'"Efterfljande rening"/"Slamavskiljare"/"Tank"/"Extra inventeringsinformation"	->	Anlggningskategori	Char(29)	Anlggningskategori
				besiktningdatum Date,										'utfrandedatum  (rening/beslut/tank)	->	besiktningdatum	datum-MM-DD)	besiktningdatum
				beslutsdatum Date,											'beslutsdatum (rening/beslut/tank)	->	beslutsdatum	datum-MM-DD)	beslutsdatum
				Anlggningstyp	Char(15),									'Typ_rening (rening)/Typ_Slamavskiljare (beslut)/Typ_av_tank (Beslut)/(om sweref) "Klart Vatten"	->	Anlggningstyp	Char(15)	Anlggningstyp
				Volym_m3 float,												'Storlek_m2 (rening)/Storlek_m3  (Beslut)	->	Volym m3	float	Volym m3
				Anl_fr_EftR_TInterv_mn integer,							'Antal_hushll_rening (rening)	->	mningssintervall	integer	Anl_fr_EftR_TInterv_mn
				AnlF_efR_Koordinater_X_o_Y	Char(19),						'Koordinater  (r infiltration/markdd r begen)/(r ansluten)/(r EXTRA inventeringsinformation r begen)	->	Koordinater X och Y	Char(19)	AnlF_efR_Koordinater_X_o_Y
				PunkttypER	Char(20),										'"Efterfljande rening"/"Slamavskiljare"/"Tank"/"Extra inventeringsinformation"	->	Punkttyp Koordinater	Char(20)	PunkttypER
				Anlggning_fr_EfterfljRText Char(253),					'Kommentarer (rening/sweref/beslut)	->	Text	Char(253)(ltmaxngd)	Anlggning_fr_EfterfljRText
				ignore	Char(19),											''
				Anlggning_fr_S_Anlggningstyp	Char(15),					'Typ_byggnad (beslut)	->	Certifieringstyp (Typ av boende)	Char(15)	Anlggning_fr_S_Anlggningstyp
				Externt_Tjnsteid integer,									'rendenr  (beslut/tank/sweref)	->	Externt Tjnsteid	integer	Externt Tjnsteid
				text Char(6),												'Status  (sweref)	->	Status	Char(6)	text
				Anlggning_fr_Slamav_Volym_m3 date,						'Utskick1_datum (sweref)	->	Datum	datum-MM-DD)	Anlggning_fr_Slamav_Volym_m3
				ignore	Char(19),											''
				AnlfrEfterR_Anlggningstyp	date,							'Slamdispense	->	mningsdispens fr.o.m	datum-MM-DD)	AnlfrEfterR_Anlggningstyp
				ignore	 Date,												''
				ignore	Date,												''
				ignorex	integer,											''objektIndex
				ignore	char(1),												''
				ObjektID integer,											'ObjektItterator	->	ObjektID	integer	ObjektID
				Path Char(253),												'Path (r filer som skall ras in, kopplas till objekt)	->	Path	Char(253)	Path
				Diarienummer char(13),										'Diarienummer (r renden som skall knytas)	->	Diarienummer	char(13)	Diarienummer
				Lpnummer integer											'Lpnummer (r renden som skall knytas)	->	Lpnummer	integer	Lpnummer


			) file filePath TYPE NATIVE Charset "WindowsLatin1"
			Create Map For tablename CoordSys Earth Projection 1, 104
	onError goto 0
	
exit sub creationError: print "creationError" & error$() end program noTable: resume next end sub

sub getAnslutna(anslutan() as string)'hmtar ocks gemensamhetsanlggningar
	dim P as integer
	,tempString as string
	,anslutningsAlias as alias
	,temptext as string
	
	if(not(valtRening.anslutna_fastigheter_10 = "gem,gem")) then
		for p=1 to 10		
			anslutningsAlias = "valtRening.Anslutna_fastigheter_" & p
			temptext = anslutningsAlias
			if(temptext <> "") then
				call addStringToArrayAsifSet(anslutan(),searchReplace(temptext,"""","'"))
			end if
		next
	else
		tempString = valtRening.kommentarer 'kommentarfltet har identifieringen 'call gemAnslutna(tempstring,anslutan())
		call addStringToArrayAsifSet(anslutan(),"gem,gem")
	end if

end sub

sub huvuDObjekt(uObj() as UtskriftsObjekt, it as integer)
	
	dim fastighetsObjekt as alias
	
	fastighetsObjekt = G_socken & "fastighetsObjekt.adress" 
 	uObj(it).Besksadress_Adress = fastighetsObjekt
 	fastighetsObjekt = G_socken & "fastighetsObjekt.postnr" 
	uObj(it).Besksadress_Postnr = fastighetsObjekt
	fastighetsObjekt = G_socken & "fastighetsObjekt.ort" 
	uObj(it).Besksadress_Ort = fastighetsObjekt
	fastighetsObjekt = G_socken & "fastighetsObjekt.fastighet" 
	uObj(it).Besksadress_Huvudfastighet = FindCharTurncStringByPos(">",fastighetsObjekt)

	uObj(it).Objektnamn = uObj(it).Besksadress_Huvudfastighet

	fastighetsObjekt = G_socken & "fastighetsObjekt.fnr"
	uObj(it).FNR = fastighetsObjekt
	
 	uObj(it).Enhet = "VATTEN"
	uObj(it).Timdebitering = TRUE
	uObj(it).Aktuell_timavgift = 925
	
end sub


Sub subTablesafter( outPutEn() as enskiltObjekt,inputEn() as enskiltObjekt, outPutre() as reningsObjekt,inputre() as reningsObjekt, outPutsw() as swerefObjekt,inputsw() as swerefObjekt,ByVal minimumDebt as integer)
	dim x as integer

	for x=minimumDebt to ubound(inputEn)
		if x > ubound(inputEn) then
			redim inputEn(x)
		end if
'		onError goto Xerror '		print "-----------------------------" & x ' '		print ubound(outPutEn) '		print ubound(inputEn) '		print ubound(outPutre) '		print ubound(inputre) '		print ubound(outPutsw) '		print ubound(inputsw) '		print minimumDebt '		print x '		print "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz" '		onError goto 0
			call enskiltCopyConstruktor(inputEn(x), outPutEn,x)
	next
	
	for x=minimumDebt to ubound(inputre)
		if x > ubound(inputre) then
			redim inputre(x)
		end if
		
		call reningObjCopyConstr(inputre(x),outPutre,x)
	next
	
	for x=minimumDebt to ubound(inputsw)
		if x > ubound(inputsw) then
			redim inputsw(x)
		end if
		
		call swerefObjektCopyConstr(inputsw(x), outPutsw,x)
	next
exit sub

	Xerror:
	print "subTablesafter|" &  error$()
	end program
end sub


sub skapaMutationer(en() as enskiltObjekt ,re() as reningsobjekt ,sw() as swerefobjekt,byVal minimumDebt as integer)

		dim enskiltTokenObjekt() as enskiltObjekt ,reningsTokenObjekt() as reningsobjekt ,swerefTokenObjekt() as swerefobjekt ,trodvdighet() as trovrdighetsobjekt
		
			call subTablesafter(enskiltTokenObjekt,en,reningsTokenObjekt,re,swerefTokenObjekt,sw,minimumDebt)
				call initializer(reningsTokenObjekt,enskiltTokenObjekt,swerefTokenObjekt)
					call genTrovrdighet(trodvdighet,enskiltTokenObjekt,reningsTokenObjekt,swerefTokenObjekt)
						call insertAt(trodvdighet(1),enskiltTokenObjekt,reningsTokenObjekt,swerefTokenObjekt,minimumDebt)
		
		minimumDebt = minimumDebt + 1
		if ((ubound(enskiltTokenObjekt) > minimumDebt) OR (ubound(reningsTokenObjekt) > minimumDebt) or (ubound(swerefTokenObjekt) > minimumDebt)) then
			call skapaMutationer(enskiltTokenObjekt,reningsTokenObjekt,swerefTokenObjekt,minimumDebt)
		end if

exit sub k: print error$() end program kx: print error$() end program 
end sub

'the method should replace the objects, whichever was on the original position should be placed last in the table.
Sub insertAt(
				trodvdighet as trovrdighetsobjekt, 'which rows in each table that should be moved
				enskiltTokenObjekt() as enskiltObjekt,
				reningsTokenObjekt() as reningsObjekt,
				swerefTokenObjekt() as swerefObjekt,
				toInsertAt as integer) ' to which place in the table
				
	'for each positin provided in trovrdighetsobjekt,
	dim originalPositionE,originalPositionS,originalPositionR as integer
	,pOrgPlatts as string

	originalPositionS = trodvdighet.fx
	dim swerefIn(1) as swerefobjekt
	dim swerefOut(1) as swerefobjekt

	if toInsertAt <> originalPositionS then
		'hmta vad som r p platts
		call swerefObjektCopyConstr(swereftokenObjekt(originalPositionS),swerefIn(),1)
		if toInsertAt > ubound(swereftokenObjekt) then
			redim swereftokenObjekt(toInsertAt)
		end if
		call swerefObjektCopyConstr(swereftokenObjekt(toInsertAt),swerefOut(),1)
			
		', och skriv ver med input
		call swerefObjektCopyConstr(swerefIn(1),swereftokenObjekt(),toInsertAt)
		call swerefObjektCopyConstr(swerefOut(1),swereftokenObjekt(),originalPositionS)
	end if

	originalPositionE = trodvdighet.ex

	dim EnskiltIn(1) as enskiltObjekt
	dim EnskiltUt(1) as enskiltObjekt

	if toInsertAt <> originalPositionE then
		'hmta vad som r p platts, och skriv ver med input
		call enskiltCopyConstruktor(enskiltTokenObjekt(originalPositionE),EnskiltIn(),1)
		if toInsertAt > ubound(enskiltTokenObjekt) then
			redim enskiltTokenObjekt(toInsertAt)
		end if
		
		call enskiltCopyConstruktor(enskiltTokenObjekt(toInsertAt),EnskiltUt(),1)
		
		call enskiltCopyConstruktor(EnskiltIn(1),enskiltTokenObjekt(),toInsertAt)
		call enskiltCopyConstruktor(EnskiltUt(1),enskiltTokenObjekt(),originalPositionE)
	end if

	originalPositionR = trodvdighet.rx
	dim ReningIn(1) as reningsobjekt
	dim ReningOut(1) as reningsobjekt
	
	if toInsertAt <> originalPositionR then
		'hmta vad som r p platts, och skriv ver med input
		call reningObjCopyConstr(reningsTokenObjekt(originalPositionR),ReningIn(),1)
		if toInsertAt > ubound(reningsTokenObjekt) then
			redim reningsTokenObjekt(toInsertAt)
		end if
		call reningObjCopyConstr(reningsTokenObjekt(toInsertAt),ReningOut(),1)
		
		call reningObjCopyConstr(ReningIn(1),reningsTokenObjekt(),toInsertAt)
		call reningObjCopyConstr(ReningOut(1),reningsTokenObjekt(),originalPositionR)
	end if
					
end sub

function InitializeReningObjekt(intx as integer,reningsobjekt() as reningsobjekt,reningsTokenObjekt() as reningsobjekt) as integer
	dim storlek as integer
	storlek = ubound(reningsobjekt)
	
	if(storlek = 0 OR intx = 0) then
		redim reningsTokenObjekt(1)
		reningsTokenObjekt(1).spatialFastighet = ""
		reningsTokenObjekt(1).spatialShift = ""
		reningsTokenObjekt(1).Fastighet_rening = ""
		reningsTokenObjekt(1).Antal_hushll_rening = 0
		reningsTokenObjekt(1).Reningstyp = ""
		reningsTokenObjekt(1).Storlek_m2 = 0
		reningsTokenObjekt(1).kordinater = ""
		reningsTokenObjekt(1).Beslut_datum = ""
		reningsTokenObjekt(1).Utfrd_datum = ""
		reningsTokenObjekt(1).Kommentarer = ""
		reningsTokenObjekt(1).rowIndex = 0
		InitializeReningObjekt = 0
	else
		storlek = 1
		call reningObjCopyConstr(reningsobjekt(intx),reningsTokenObjekt(),storlek)	

		InitializeReningObjekt = intx
	end if
end function

sub initializer(reningsTokenObjekt() as reningsobjekt,enskiltTokenObjekt() as enskiltObjekt,swerefTokenObjekt() as swerefobjekt)

	dim ignoreR() as reningsobjekt
	,ignoreE() as enskiltObjekt
	,ignoreS() as swerefobjekt
	,ignore as integer
	ignore = 0
	'om ingen rening alls, stoppa dit en token
	if ubound(reningsTokenObjekt) < 1 then
		ignore = InitializeReningObjekt(ignore,ignoreR(),reningsTokenObjekt())
	end if
	
	'om ingen enskilt alls, stoppa dit en token
	if ubound(enskiltTokenObjekt) < 1 then
		ignore = InitializeEnskiltObjekt(ignore,ignoreE(),enskiltTokenObjekt())
	end if
	
	'om ingen sweref alls, stoppa dit en token
	if ubound(swerefTokenObjekt) < 1 then
		ignore = InitializeSwerefObjekt(ignore,ignoreS(),swerefTokenObjekt())
	end if
	
end sub

function expandUtskriftsobjekt(utskriftsObjekt() as utskriftsobjekt) as integer

	dim itterator as integer
	
	itterator = ubound(utskriftsObjekt()) +1
	redim UtskriftsObjekt(itterator)
	
	expandUtskriftsObjekt = itterator

end function

sub utskrivningsobjektsKonstruktor(
		sOx() as swerefobjekt,
		rOx() as reningsObjekt,
		eOx() as enskiltobjekt
	)
	
		dim ittr, objektid as integer	,reningsTokenObjekt() as reningsObjekt	,enskiltTokenObjekt() as enskiltobjekt	,swerefTokenObjekt() as swerefobjekt	,tableName as string	
		,sO(1) as swerefobjekt,	rO(1) as reningsObjekt,	eO(1) as enskiltobjekt
		,uObj() as utskriftsObjekt

		ittr = expandutskriftsobjekt(uObj) tableName = "LatestObjectID"	if IsTableOpen(tableName) then select col1 from LatestObjectID	fetch first from latestObjectID 
		G_senastObjectID = iif(G_senastObjectID < latestObjectID.col1,latestObjectID.col1,G_senastObjectID) end if objektid = iif(G_senastObjectID <> 0,G_senastObjectID + 1,1)

		G_senastObjectID = objektid
		uObj(ittr).Objektid = objektid '"Huvud","ObjektID",: "integer",: "ObjektItterator" 

		call huvuDObjekt(uObj(),ittr)
		call anteckningKordinat(sOx(1),eOx(1),rOx(1),uObj(),ittr)					
		call inventeringsinformation(uObj,ittr,sOx(1))
		call Recipient(uObj,eOx(1),rOx(1),ittr)
		call Avloppsanlggning(uObj(),ittr,eOx(1))				
			
		call subTablesafter(eO,eOx,rO,rOx,sO,sOx,2)
		
		'print ubound(eO) + ubound(rO) + ubound(sO) 
		
		if ubound(eO) + ubound(rOx) + ubound(sO) > 0 then
			dim anl() as anlggningsobjekt
			call Anlggning(anl,eOx,rOx,sO)
			'dessa skapar nya rader, men ndrar inte objektId
			ittr = ittr + anlggningsobjektToUtskifts(anl,uObj,ittr)
		end if
		
		ittr = ittr + diarienummerForutskriftsobjekt(uObj,ittr,eOx,sOx,objektid)
		call fastighetForUtskriftsobjekt(uObj,ittr,sOx,rOx,eOx,objektid)
		call saveUtskriftsProgress(uObj)	
			
End Sub

sub saveFastighetsObjektToTable(tableName as string,inputX as fastighetsObjekt,ReningsObjekt() as ReningsObjekt,SwerefObjekt() as SwerefObjekt,EnskiltObjekt() as EnskiltObjekt)

	dim query,filePath,vrde() as string
	
	call FastighetsObjToInsertStringArray(vrde,inputx,ReningsObjekt(),SwerefObjekt(),EnskiltObjekt())
		if(StringArrayAsString(vrde) <> "0,0,0,0,F,0,0,0,0,0,0,0,0" ) then 
			query = generateInsertStringWithArray(tableName, vrde)
	
			onerror goto queryError
				run command query onerror goto 0 
		else goto queryError end if

	
	commit table tableName
	'call SaveAnvndaReningar
			
	methodEnd:
exit sub
queryError:
	print "[saveFastighetsObjektToTable_error] queryError|" & query & "dropping table" print error$() drop table tableName resume methodEnd

end sub

function countShiftenGenUtvald(FastighetB as string) as integer
	dim tempcountz as integer
	
	select * from Fastighet_yta where kir = fastighetB into utvaldFastighet
	
	countShiftenGenUtvald = countRows(utvaldFastighet)
end function

sub FastighetsObjCreation(tableName as string,fastighetsBetInput as string,fastighetensReningsobjekt() as reningsobjekt,fastighetensSwerefObjekt() as swerefObjekt,fastighetensEnskiltObjekt() as enskiltObjekt)
		dim x,q,i as integer ,fastighetsObjekt as fastighetsObjekt
'		,fastighetensReningsobjekt() as fastighetensReningsobjekt'		,fastighetensSwerefObjekt() as fastighetensSwerefObjekt'		,fastighetensEnskiltObjekt() as fastighetensEnskiltObjekt
		
		fastighetsObjekt.kir = fastighetsBetInput	
		onError goto fasSelectError run command "select adress,postnr,postort,fnr,fastighet from sorteradFastighet where kir = " & chr$(34) & fastighetsBetInput & chr$(34) & " into fas" onerror goto 0 fetch first from fas			
		fastighetsObjekt.adress = fas.adress
		fastighetsObjekt.postnr = fas.postnr 
		fastighetsObjekt.ort = fas.postort 
		fastighetsObjekt.fastighet = fas.fastighet 
		fastighetsObjekt.fnr = fas.fnr 
		close table fas
		
		call saveFastighetsObjektToTable(tableName,fastighetsObjekt,fastighetensReningsobjekt(),fastighetensSwerefObjekt(),fastighetensEnskiltObjekt())
exit sub

fasSelectError:
	print "FastighetsObjCreationSelectError" & error$()
	
End Sub

sub OmObjektSkapaFastighet(FastighetsBetInput as string)
	dim antalObjekt,before,after as integer,fastighetsObjektsTabell as string,
	EnskiltObjektfastighets() as EnskiltObjekt,
	reningsObjektfastighets() as reningsObjekt,
	swerefObjektfastighets() as swerefObjekt
	
	antalObjekt = 0
	
	if(countShiftenGenUtvald(FastighetsBetInput) <> 0) then 
		antalObjekt = SwerefSubsetByFasgtighet(G_swerefObjekt,FastighetsBetInput,swerefObjektfastighets) + ReningsSubsetByFasgtighet(G_reningsObjekt,FastighetsBetInput,reningsObjektfastighets) + EnskiltSubsetByFasgtighet(G_EnskiltObjekt,FastighetsBetInput,EnskiltObjektfastighets)
		fastighetsObjektsTabell = G_socken & "fastighetsObjekt" before = tableInfo("" & fastighetsObjektsTabell,TAB_INFO_NROWS)
		if(antalObjekt > 0 ) then 
		
			call FastighetsObjCreation(fastighetsObjektsTabell, fastighetsBetInput, reningsObjektfastighets, swerefObjektfastighets, EnskiltObjektfastighets)
			
			after = tableInfo("" & fastighetsObjektsTabell,TAB_INFO_NROWS) if (after = before) then goto creationError end if
		else 
			if(G_debugg) then	
				
				dim tempI as integer
				G_TempRaknare = G_TempRaknare + 1
				tempi = G_TempRaknare / (G_TempRaknare+before)* 100
				if( G_TempRaknare mod 10 = 0 ) then
					
					print "ant.Obj = 0 @" &	FastighetsBetInput ' & " Gs| " & ubound(G_swerefObjekt) & "S | R" & ubound(G_reningsObjekt) & " | E" & ubound(G_EnskiltObjekt)
					print "FailRatio " & tempi & "% of " & (G_TempRaknare+before)
				end if
		  	end if
		end if
		
	else print "Objekt p fastighet("& FastighetsBetInput & ") = 0" 
	end if
	
exit sub creationerror:
 'else if ((ubound(fastighetsObjektTabell(after).swerefobjekt()) + ubound(fastighetsObjektTabell(after).Enskiltobjekt()) + ubound(fastighetsObjektTabell(after).reningsobjekt())) <> antalObjekt)  'then' & ubound(fastighetsObjektTabell(after).swerefobjekt()) & " " & ubound(fastighetsObjektTabell(after).Enskiltobjekt()) & " " & ubound(fastighetsObjektTabell(after).reningsobjekt()) & "<>" & antalObjekt' end if			
 print "inga objekt p " & FastighetsBetInput print "[ERROR @ OmObjektSkapaFastighet]" & error$() end program End sub


function InitializeEnskiltObjekt(intx as integer,enskiltobjekt() as enskiltobjekt,enskiltTokenObjekt() as enskiltobjekt) as integer
	dim storlek as integer
	storlek = ubound(enskiltobjekt)

	if(storlek = 0 OR intx = 0) then
		redim enskiltTokenObjekt(1)
		enskiltTokenObjekt(1).Diarienummer = ""	
		enskiltTokenObjekt(1).Fastighet_tillstnd = ""
		enskiltTokenObjekt(1).spatialShift = ""
		enskiltTokenObjekt(1).Typ_byggnad = ""
		enskiltTokenObjekt(1).Antal_hushll_tillstnd = 0
		enskiltTokenObjekt(1).Fastighet_rening = ""
		enskiltTokenObjekt(1).Typ_Slamavskiljare = ""
		enskiltTokenObjekt(1).Storlek_m3 = 0
		enskiltTokenObjekt(1).Typ_rening = ""
		enskiltTokenObjekt(1).Storlek_m2 = 0
		enskiltTokenObjekt(1).Typ_sluten_tank = ""
		enskiltTokenObjekt(1).Storlek__m3 = 0
		enskiltTokenObjekt(1).Beslut_datum = ""
		enskiltTokenObjekt(1).Utfrd_datum = ""
		enskiltTokenObjekt(1).Avgift = ""
		enskiltTokenObjekt(1).Tillstnd_giltigt_tom = ""
		enskiltTokenObjekt(1).Anteckningar = ""
		enskiltTokenObjekt(1).kordinater = ""	
		InitializeEnskiltObjekt = 0
	else
		storlek = 1
		call enskiltCopyConstruktor(enskiltobjekt(intx), enskiltTokenObjekt(),storlek)
		InitializeEnskiltObjekt = intx
	end if
end function

function InitializeSwerefObjekt(InitializeOrCopy as integer,swerefobjekt() as swerefobjekt,swerefTokenObjekt() as swerefobjekt) as integer
	
	dim storlek as integer
	storlek = ubound(swerefobjekt)
	
	if(storlek*InitializeOrCopy = 0) then
		redim swerefTokenObjekt(1)
		swerefTokenObjekt(1).FASTIGHET = ""
		swerefTokenObjekt(1).Fastighet_tillstnd = ""
		swerefTokenObjekt(1).rendenr = ""
		swerefTokenObjekt(1).Beslut_datum = ""
		swerefTokenObjekt(1).Status = ""
		swerefTokenObjekt(1).Utskick1_datum = ""
		swerefTokenObjekt(1).Anteckning = ""
		swerefTokenObjekt(1).utfrddatum = ""
		swerefTokenObjekt(1).slamhmtning = ""
		swerefTokenObjekt(1).Antal_byggnader = 0
		InitializeSwerefObjekt = 0
	else
		storlek = 1
		call swerefObjektCopyConstr(swerefobjekt(InitializeOrCopy),swerefTokenObjekt(),storlek)
		
		InitializeSwerefObjekt = InitializeOrCopy
	end if
end function

function DiarieUtanBokstver(ByVal diarienummer as string) as string
	dim sPartsArray() As String
	,tempInteger as integer
		
	tempInteger = SplitStringAtCharacter(diarienummer,"-",sPartsArray())
	
	if(tempInteger = 3) then
		if (val(spartsArray(1)) = 0) then
			DiarieUtanBokstver = val(sPartsArray(2) & sPartsArray(3))
		end if
	else
		DiarieUtanBokstver = 0
	end if
	
End Function

function DiarieMixedToUnit(byVal text as string) as string
	'skall bli, mhn-xxxx-xxxx
	'kan vara mhn xxxx/xxxx
	'eller xx/xxxx
	'eller xxxx/xxxx
	'eller xx-xxxx
	'eller mhn-xx-xxxx
	'eller mhn-xxxx-xxxx
	If text <> "" Then
			
		dim sPartsArray(),sPartsArray2(),dPartsArray(),ressultString,paddedDiarieNummer,PaddedDay,tempstring as string
		,tempInteger,nrOfSpaces,i,theYear,theMonth,theDay,nrOfslashes,nrOfdashes,firstPart,secondPart,cleanVar as integer
		
		nrOfslashes = SplitStringAtCharacter(text & "", "/", sPartsArray())
		nrOfdashes = SplitStringAtCharacter(text & "", "-", dPartsArray())
		nrOfSpaces = SplitStringAtCharacter(text & "", " ", sPartsArray2())
		if nrOfslashes = 2 then	
			'it has a / (spartArray()
			'mste d ha ett numeriskt vde i 2 och text eller numeriskt i 1
			firstPart = firstLeftMostNumber(sPartsArray(1))'endast numeric vnstra del av 1
			secondPart = firstLeftMostNumber(sPartsArray(2))'endast numeric vnstra p sida 2
		elseif(nrOfdashes > 1) then
			do case nrOfdashes		
				case 2
					firstPart = firstLeftMostNumber(dPartsArray(1))'endast numeric p sida 1
					secondPart = firstLeftMostNumber(dPartsArray(2))'endast numeric p sida 2
				case 3
						if(firstLeftMostNumber(dPartsArray(1))>0) then
							cleanVar = 1
							goto cleanedNumber
						else
							firstPart = firstLeftMostNumber(dPartsArray(2))'endast numeric p sida 1
							secondPart = firstLeftMostNumber(dPartsArray(3))'endast numeric p sida 2
						end if
				case else
			end case
		elseif(nrOfSpaces = 2) then
			firstPart = firstLeftMostNumber(sPartsArray2(1))'endast numeric p sida 1		
			secondPart = firstLeftMostNumber(sPartsArray2(2))'endast numeric p sida 2
		else
			cleanVar = 2
			goto cleanedNumber
		end if
		
		if(firstPart = 0 OR secondPart = 0) then
			cleanVar = 3
			goto cleanedNumber
		else
			
			tempInteger = len(firstPart & "") 'if it's fournumbered it's hard to estimate how large or small it might be
			if(tempInteger <> 4)	then 'if yearpart is not 4 letters			
				if(firstPart > 20) then
						firstPart = 1900 + firstPart
				else
						firstPart = 2000 + firstPart
				end if
			end if
		
			DiarieMixedToUnit = "MHN-" & firstPart & "-" & secondPart
					
		end if
		
	else
		DiarieMixedToUnit = text
	end if
exit function
	cleanedNumber:
		DiarieMixedToUnit = (cleanVar) & text 'kan inte tolka nummret
End Function

sub fastighetForUtskriftsobjekt(utskriftsObjekt() as utskriftsobjekt,itterator as integer,swerefObjekt() as swerefobjekt,reningsobjekt() as reningsobjekt,enskiltObjekt() as enskiltobjekt, objektid as integer)
	onError goto underskriptsFel	
	dim antal,x,nt,y as integer,allaFastigheter(),tempDirty() as string,fastighetsobjekt as fastighetsobjekt
	
	call addStringToArrayAsifSet(tempDirty(),fastighetsobjekt.kir)

	for x=1 to 	ubound(enskiltObjekt)
		call addStringToArrayAsifSet(tempDirty(),enskiltObjekt(x).Fastighet_rening)
		call addStringToArrayAsifSet(tempDirty(),enskiltObjekt(x).spatialFastighet)
		call addStringToArrayAsifSet(tempDirty(),enskiltObjekt(x).Fastighet_tillstnd)
	next
	
	for x=1 to 	ubound(SwerefObjekt)
		call addStringToArrayAsifSet(tempDirty(),SwerefObjekt(x).FASTIGHET)
	next
	
	for y=1 to 	ubound(reningsobjekt)
		call addStringToArrayAsifSet(tempDirty(),reningsobjekt(y).spatialFastighet)
		call addStringToArrayAsifSet(tempDirty(),reningsobjekt(y).Fastighet_rening)
			
		for x=1 to ubound(reningsobjekt(y).Anslutna_fastigheter)
			call addStringToArrayAsifSet(tempDirty(),reningsobjekt(y).Anslutna_fastigheter(x))
		next
	next
	
	for x=1 to ubound(tempDirty)
		call addStringToArrayAsifSet(allaFastigheter(),FindCharTurncStringByPos(">",FindCharTurncStringByPos("<",tempDirty(x))))
	next
		
	antal = ubound(allaFastigheter)
	
	if antal <> 0 then
		for x=1 to antal
			nt = itterator+x-1
			If allaFastigheter(x) <> "" Then
				redim utskriftsobjekt(nt) utskriftsobjekt(nt).objektId = objektid
				utskriftsobjekt(nt).fliken_Fastigheter = allaFastigheter(x) 
			End If
		next
	end if

	onError goto 0
exit sub underskriptsFel: note error$() 
end program
end sub
	
function reningsfastigheterAsString(reningsObjekt as reningsObjekt) as string

	dim tempString,TempArray() as string
	,loopvar as integer
			
	for loopvar=1 to ubound(reningsObjekt.Anslutna_fastigheter)
		call addStringToArrayAsifSet(TempArray,reningsObjekt.Anslutna_fastigheter(loopVar))' reference index
	next
		
	reningsfastigheterAsString = iif(ubound(TempArray) = 0, "",StringArrayAsString(TempArray))

end function

sub Anlggning(anlObj() as anlggningsobjekt,eO() as enskiltobjekt,rO() as reningsobjekt,sO() as swerefobjekt)
		
	 'Todo:metoden skall lgga till anlggningar, s som tank, etc utefter om det finns fler n ett av varje av dessa, ifall av 0 r det inte mer n att de blir toma ytor.
	 dim x,enskilt,sweref,rening as integer
	 ,antal as integer
	 enskilt = ubound(eO)
	 sweref = ubound(sO)
	 rening = ubound(rO)
	 antal = 0
	 
	 if enskilt >= 1 then
	 	for x=1 to enskilt
	 		if eO(x).rowindex <> 0 then
		 		'anlObj(antal).Objektnamn = iif(sO.fastighet_tillstnd <> "",sO.fastighet_tillstnd,fastighetsObjekt.fastighet) & " " & sO.Status
				antal = antal + 1
				redim anlObj(antal)
				anlObj(antal).Kartpunkt = "Ansluten byggnad"
				anlObj(antal).Anlggningskategori = x & " Slamavskiljare"
				anlObj(antal).Anlggningstyp = eO(x).Typ_Slamavskiljare
				anlObj(antal).besiktningdatum = eO(x).Utfrd_datum
				anlObj(antal).beslutsdatum = eO(x).Beslut_datum
				anlObj(antal).Kommentarer = textAppend(eO(x).Anteckningar,"rening p:", eO(x).fastighet_rening)
				anlObj(antal).Volym_m3 = eO(x).Storlek_m3
				anlObj(antal).Koordinater = eO(x).kordinater
				anlObj(antal).radnummer = eO(x).rowindex
				anlObj(antal).rendenr =  DiarieUtanBokstver(DiarieMixedToUnit(eO(x).Diarienummer))
				anlObj(antal).Typ_byggnad = eO(x).Typ_byggnad

				if((eO(x).Typ_sluten_tank <> "0" and eO(x).Typ_sluten_tank <> "" and eO(x).Typ_sluten_tank <> "-")) then
			 		antal = antal + 1
					redim anlObj(antal)
					anlObj(antal).Kartpunkt = "Tank"
					anlObj(antal).Anlggningskategori = x & " Tank"
					anlObj(antal).Anlggningstyp = eO(x).Typ_sluten_tank
					anlObj(antal).besiktningdatum = eO(x).Utfrd_datum
					anlObj(antal).beslutsdatum = eO(x).Beslut_datum
					anlObj(antal).Volym_m3 = eO(x).Storlek__m3
					anlObj(antal).radnummer = eO(x).rowindex
					anlObj(antal).rendenr =  DiarieUtanBokstver(DiarieMixedToUnit(eO(x).Diarienummer))
				end if
			end if
	 	next
	 end if
		
	 if rening >= 1 then
		for x=1 to rening
			if rO(x).rowindex <> 0 then
			 	'if rening is located here, or otherwise
			 	'have to make sure we distinguish unique and non unique references
				antal = antal + 1
				redim anlObj(antal)
			 	anlObj(antal).Kartpunkt = "Efterfljande rening"
				anlObj(antal).Anlggningskategori = x & " Efterfljande rening"		 
	
				anlObj(antal).Antal_hushll_rening = rO(x).Antal_hushll_rening
				anlObj(antal).Anlggningstyp = rO(x).Reningstyp
				anlObj(antal).besiktningdatum = rO(x).Utfrd_datum
				anlObj(antal).beslutsdatum = rO(x).Beslut_datum
				anlObj(antal).Kommentarer = textAppend(rO(x).Kommentarer,"ansl|",reningsfastigheterAsString(rO(x)))
				anlObj(antal).Volym_m3 = rO(x).Storlek_m2
				anlObj(antal).Koordinater = rO(x).kordinater
				anlObj(antal).radnummer = rO(x).rowindex
				
			end if
		next
	end if
	
	if sweref >= 1 then
		for x=1 to sweref
			if sO(x).rowindex <> 0 then
				antal = antal + 1
				redim anlObj(antal)
				anlObj(antal).Kartpunkt = "Extra inventeringsinformation"
				anlObj(antal).Anlggningskategori = x & " Extra inventeringsinformation"
				anlObj(antal).Utskick1_datum  = sO(x).Utskick1_datum
				anlObj(antal).Status = sO(x).Status
				anlObj(antal).rendenr = sO(x).rendenr
				anlObj(antal).Koordinater = sO(x).kordinater
				anlObj(antal).radnummer = sO(x).rowindex
				anlObj(antal).rendenr =  DiarieUtanBokstver(DiarieMixedToUnit(sO(x).rendenr))
			end if
		next
	end if
	 
	 
   end sub
   

function textAppend(byVal initial as string,byVal prefix as string,byVal  appendant as string) as string
'Todo: move to Common Methods
	initial = rtrim$(ltrim$(initial))
	appendant = rtrim$(ltrim$(appendant))
	prefix = rtrim$(ltrim$(prefix))
	
	if appendant = "0" then
		prefix = " " & prefix & "" & " "
	else if len(appendant) < 2 then
		prefix = " "
		else
		prefix = " " & prefix & " "
		end if
		
	end if
	
	textAppend = rtrim$(ltrim$(initial & prefix & appendant))

end function

sub anteckningKordinat(sweref as swerefobjekt,ensk as enskiltobjekt,rening as reningsobjekt ,uObj() as utskriftsobjekt, ittr as integer)
   
   		if (sweref.rowindex <> 0) then		
		 	if (ensk.rowindex <> 0) then
				uObj(ittr).Anteckning = textAppend(textAppend(uObj(ittr).Anteckning,"inv|",sweref.Anteckning),"Bes|",ensk.Anteckningar)
				uObj(ittr).Fliken_Koordinater = ensk.kordinater
			else
		 		uObj(ittr).Anteckning = textAppend(uObj(ittr).Anteckning,"inv|",sweref.Anteckning)
		 		uObj(ittr).Fliken_Koordinater = sweref.kordinater
		 	end if
		 	uObj(ittr).PunkttypAB = "inventeringsinformation"
		else  
			if (ensk.rowindex <> 0) then
				uObj(ittr).Anteckning = textAppend(uObj(ittr).Anteckning,"Bes|",ensk.Anteckningar)
				uObj(ittr).Fliken_Koordinater = ensk.kordinater
				uObj(ittr).PunkttypAB = "Ansluten byggnad"
			else
				if (rening.rowindex <> 0) then
					uObj(ittr).Anteckning = textAppend(uObj(ittr).Anteckning,"Ren|",rening.Kommentarer)
					uObj(ittr).Fliken_Koordinater = rening.kordinater
					uObj(ittr).PunkttypAB = "Efterfljande rening"
				end if
			end if
		end if
   
end sub

function resTabPos(byVal colName as string) as integer
	
	onError goto killProgram resTabPos = Columninfo("sockenRessultat",colName,Col_info_num) onError goto 0
	
exit function killProgram: note "[CRITICAL resTabPos]" & error$() End Function

function enforceFormTa(byVal inputx as string,byVal col as string) as string
'Todo: move to Common Methods
	dim return as string
	
	do case ColumnInfo(sockenRessultat,col,COL_INFO_TYPE)
		case 1 '"Char"
			return = left$(inputx,ColumnInfo( sockenRessultat,col,COL_INFO_WIDTH))
		case 5,38 '"Date"
			return = "" & NumberToDate(val(DeformatNumber$(inputx)))
		case 8 '"float"
			return = "" & DeformatNumber$(inputx)		
		case 3,4,39 '"integer"
			return = "" & val(DeformatNumber$(inputx))
		case 6 '"Logical"
			do case inputx
			case "1","0","F","T"
				return = inputx
			case else
				return = "" & val(inputx)	
			end case
		case else
			goto unrecognized		
	End Case
	
		if( len(return) >= len(inputx)+2) then
			print "Warning overflow, " & inputx & " <> " & return
		end if
			
		enforceFormTa = return
	
exit function unrecognized: print "unrecognized format " & ColumnInfo( sockenRessultat,col,COL_INFO_TYPE) end program 
overflow: resume next end function

sub Avloppsanlggning(uObj() as UtskriftsObjekt,ittr as integer,eO as enskiltobjekt)

	uObj(ittr).flik_Avloppsanlggn_Byggnadsr = eO.Tillstnd_giltigt_tom
	uObj(ittr).flik_Avloppsa_Besiktningsdatum = eO.Utfrd_datum
	uObj(ittr).flik_Avloppsanlg_Beslutsdatum = eO.Beslut_datum
	uObj(ittr).Vatten = eO.Antal_hushll_tillstnd
	
end sub

sub UtskriftsObjToInsertStringArray(vrde() as string, utskriftsobjekt as utskriftsobjekt)
	redim vrde(tableInfo(sockenRessultat,TAB_INFO_NCOLS))

	vrde(resTabPos("Besksadress_Adress")) = enforceFormTa(utskriftsObjekt.Besksadress_Adress & " ","Besksadress_Adress")
	vrde(resTabPos("Besksadress_Postnr")) = enforceFormTa(utskriftsObjekt.Besksadress_Postnr & " ","Besksadress_Postnr")
	vrde(resTabPos("Besksadress_Ort")) = enforceFormTa(utskriftsObjekt.Besksadress_Ort & " ","Besksadress_Ort")
	vrde(resTabPos("Besksadress_Huvudfastighet")) = enforceFormTa(utskriftsObjekt.Besksadress_Huvudfastighet & " ","Besksadress_Huvudfastighet")
	vrde(resTabPos("FNR")) = enforceFormTa("" & utskriftsObjekt.FNR, "FNR")

	vrde(resTabPos("Enhet")) = enforceFormTa(utskriftsObjekt.Enhet & " ","Enhet")
	vrde(resTabPos("Anteckning")) = enforceFormTa(utskriftsObjekt.Anteckning & " ","Anteckning")
	vrde(resTabPos("Aktuell_timavgift")) = enforceFormTa("" & utskriftsObjekt.Aktuell_timavgift, "Aktuell_timavgift")
	vrde(resTabPos("Timdebitering")) = enforceFormTa(utskriftsObjekt.Timdebitering, "Timdebitering")
	vrde(resTabPos("Objektnamn")) = enforceFormTa(utskriftsObjekt.Objektnamn & " ","Objektnamn")
	vrde(resTabPos("flik_Avloppsnlaggni_Boendetyp")) = enforceFormTa(utskriftsObjekt.flik_Avloppsnlaggni_Boendetyp & " ","flik_Avloppsnlaggni_Boendetyp")
	vrde(resTabPos("flik_Avloppsanlggn_Byggnadsr")) = enforceFormTa("" & utskriftsObjekt.flik_Avloppsanlggn_Byggnadsr,"flik_Avloppsanlggn_Byggnadsr")
	vrde(resTabPos("flik_Avloppsa_Besiktningsdatum")) = enforceFormTa("" & utskriftsObjekt.flik_Avloppsa_Besiktningsdatum, "flik_Avloppsa_Besiktningsdatum")
	vrde(resTabPos("flik_Avloppsanlg_Beslutsdatum")) = enforceFormTa("" & utskriftsObjekt.flik_Avloppsanlg_Beslutsdatum, "flik_Avloppsanlg_Beslutsdatum")
	vrde(resTabPos("Vatten")) = enforceFormTa(utskriftsObjekt.Vatten & " ","Vatten")
	vrde(resTabPos("Recipient")) = enforceFormTa(utskriftsObjekt.Recipient & " ","Recipient")
	vrde(resTabPos("Inventering")) = enforceFormTa(utskriftsObjekt.Inventering & " ","Inventering")
	vrde(resTabPos("Inventeringsinformation_Datum")) = enforceFormTa("" & utskriftsObjekt.Inventeringsinformation_Datum, "Inventeringsinformation_Datum")
	vrde(resTabPos("Inventeringsinformation_Status")) = enforceFormTa(utskriftsObjekt.Inventeringsinformation_Status & " ","Inventeringsinformation_Status")
	vrde(resTabPos("Bedmning")) = enforceFormTa(utskriftsObjekt.Bedmning & " ","Bedmning")
	vrde(resTabPos("fliken_Fastigheter")) = enforceFormTa(utskriftsObjekt.fliken_Fastigheter & " ","fliken_Fastigheter")
	vrde(resTabPos("fliken_FastigheterFNR")) = enforceFormTa("" & utskriftsObjekt.fliken_Fastigheter_FNR, "fliken_FastigheterFNR")
	vrde(resTabPos("PunkttypAB")) = enforceFormTa(utskriftsObjekt.PunkttypAB & " ","PunkttypAB")
	vrde(resTabPos("Fliken_Koordinater")) = enforceFormTa(utskriftsObjekt.Fliken_Koordinater & " ","Fliken_Koordinater")
	vrde(resTabPos("fliken_renden")) = enforceFormTa(utskriftsObjekt.fliken_renden & " ","fliken_renden")
	vrde(resTabPos("Anlggningskategori")) = enforceFormTa(utskriftsObjekt.Anlggningskategori & " ","Anlggningskategori")
	vrde(resTabPos("besiktningdatum")) = enforceFormTa("" & utskriftsObjekt.besiktningdatum, "besiktningdatum")
	vrde(resTabPos("beslutsdatum")) = enforceFormTa("" & utskriftsObjekt.beslutsdatum, "beslutsdatum")
	vrde(resTabPos("Anlggningstyp")) = enforceFormTa(utskriftsObjekt.Anlggningstyp & " ","Anlggningstyp")
	vrde(resTabPos("Volym_m3")) = enforceFormTa("" & utskriftsObjekt.Volym_m3, "Volym_m3")
	vrde(resTabPos("Anl_fr_EftR_TInterv_mn")) = enforceFormTa("" & utskriftsObjekt.Anl_fr_EftR_TInterv_mn, "Anl_fr_EftR_TInterv_mn")
	vrde(resTabPos("AnlF_efR_Koordinater_X_o_Y")) = enforceFormTa(utskriftsObjekt.AnlF_efR_Koordinater_X_o_Y & " ","AnlF_efR_Koordinater_X_o_Y")
	vrde(resTabPos("PunkttypER")) = enforceFormTa(utskriftsObjekt.PunkttypER & " ","PunkttypER")
	vrde(resTabPos("Anlggning_fr_EfterfljRText")) = enforceFormTa(utskriftsObjekt.Anlggning_fr_EfterfljRText & " ","Anlggning_fr_EfterfljRText")

	vrde(resTabPos("Anlggning_fr_S_Anlggningstyp")) = enforceFormTa(utskriftsObjekt.Anlggning_fr_S_Anlggningstyp & " ","Anlggning_fr_S_Anlggningstyp")
	vrde(resTabPos("Externt_Tjnsteid")) = enforceFormTa(utskriftsObjekt.Externt_Tjnsteid & " ", "Externt_Tjnsteid")
	vrde(resTabPos("text")) = enforceFormTa(utskriftsObjekt.text & " ","text")
	vrde(resTabPos("Anlggning_fr_Slamav_Volym_m3")) = enforceFormTa("" & utskriftsObjekt.Anlggning_fr_Slamav_Volym_m3, "Anlggning_fr_Slamav_Volym_m3")

	vrde(resTabPos("AnlfrEfterR_Anlggningstyp")) = enforceFormTa(utskriftsObjekt.AnlfrEfterR_Anlggningstyp & " ", "AnlfrEfterR_Anlggningstyp")
	
	'vrde(resTabPos("Externt_Tjnsteid2")) = enforceFormTa(utskriftsObjekt.Externt_Tjnsteid_2 & " ", "Externt_Tjnsteid2")

	vrde(resTabPos("ObjektID")) = enforceFormTa("" & utskriftsObjekt.Objektid, "ObjektID")
	vrde(resTabPos("Path")) = enforceFormTa(utskriftsObjekt.Path & " ","Path")
	vrde(resTabPos("Diarienummer")) = enforceFormTa(utskriftsObjekt.Diarienummer & " ","Diarienummer")
	vrde(resTabPos("Lpnummer")) = enforceFormTa("" & utskriftsObjekt.Lpnummer, "Lpnummer")
	vrde(resTabPos("ignorex")) = "" & utskriftsObjekt.reningsindex
	
end sub

sub FastighetsObjToInsertStringArray(
									output() as string,
									inputx as fastighetsObjekt,
									rObj() as ReningsObjekt,
									swerefobj() as SwerefObjekt,
									enObj() as EnskiltObjekt)
 	dim x as integer
	,rening, sweref,enskilt as string
	,dedupedrening(),dedupedenskilt(),dedupedsweref() as integer

	redim output(11)

	for x=1 to ubound(rObj)
		if rObj(x).rowindex <> 0 then
			call addIntToArrayAsifSet(dedupedrening, rObj(x).rowindex)
		end if
	next
	
	for x=1 to ubound(enObj)
		if enObj(x).rowindex <> 0 then
			call addIntToArrayAsifSet(dedupedenskilt, enObj(x).rowindex)
		end if	
	next
	
	for x=1 to ubound(swerefobj)
		if swerefobj(x).rowindex <> 0 then
			call addIntToArrayAsifSet(dedupedsweref, swerefobj(x).rowindex)
		end if	
	next
		
	rening = intArrayAsPrintString(dedupedrening)
	sweref = intArrayAsPrintString(dedupedsweref)
	enskilt = intArrayAsPrintString(dedupedenskilt)
	
	output(1) =inputx.adress & " "
	output(2) =inputx.postnr & " "
	output(3) =inputx.ort & " "
	output(4) =inputx.fastighet & " "
	output(5) ="" & val("" & inputx.fnr )
	output(6) ="" & val("" & inputx.HuvudSweref )
	output(7) ="" & val("" & inputx.HuvudRening )
	output(8) ="" & val("" & inputx.HuvudEnskilt )
	output(9) = sweref & " "
	output(10) = rening & " "
	output(11) = enskilt & " "

end sub

sub saveUtskriftsProgress(utskriftsObjekt() as utskriftsObjekt)

	dim query,tablename,filePath,vrde() as string,x as integer 
	
	tableName = "SockenRessultat"
	
	for x=1 to ubound(utskriftsObjekt)
		call UtskriftsObjToInsertStringArray(vrde, utskriftsObjekt(x)) 'queryError on eather "0,0,0,0,F,0,0,0,0,0,0,0,0" "Insert Into ressultat () Values ()" 
		if(StringArrayAsString(vrde) <> "0,0,0,0,F,0,0,0,0,0,0,0,0" ) then 
		query = generateInsertStringWithArray(tableName, vrde) 
		
		onerror goto queryError 
		run command query 
		onerror goto 0 
		else goto queryError end if
	next
	
	
	'call SaveAnvndaReningar
			

exit sub
queryError:
	print "[saveUtskriftsProgress_error] queryError|" & query & "Commiting table" print error$() commit table tableName resume methodEnd
	methodEnd:
end sub

function trovrdighetsIndexer(
	swerefobjekt as swerefobjekt,
	reningsobjekt as reningsobjekt,
	enskiltobjekt as enskiltobjekt
	) as float


	dim trovrdighetsIndex,tempFloat,xplan,yplan,hypoten,distans as float
	,swerefKord(),enskiltKord() as string
	,Et,St,Rt as logical
	,p as integer
	,anvndaReningar() as integer
	
	Et = EnskiltrInteToken(enskiltObjekt)
	St = swerefrInteToken(swerefObjekt)
	Rt = ReningrInteToken(reningsobjekt)
	
	if(Et AND St) then			
		if(SplitStringAtCharacter(swerefobjekt.kordinater,",",swerefKord)+SplitStringAtCharacter(enskiltobjekt.kordinater,",",enskiltKord) = 4) then
			xplan = val(swerefKord(1)) - val(enskiltKord(1))
			yplan = val(swerefKord(2)) - val(enskiltKord(2))
			
			hypoten = sqr(xplan*xplan+yplan*yplan)'hypotenusan mellan enskilt och sweref
			distans = sqr(hypoten*hypoten)
			
			trovrdighetsIndex = 1/iif(distans<>0,distans,0.1)
		else
			print "errorX:" & enskiltAsString(enskiltObjekt)
			print "errorY:" & SwerefAsString(swerefObjekt)
		end if
		
		trovrdighetsindex = trovrdighetsindex 
		+ IFSAMEoneDIFFRENTzeroONEBLANKhalf(swerefobjekt.rendenr,EnskiltObjekt.Diarienummer)'om diarie nummer stmmer mellan flagga och enskilt 1
		+ iif(len(swerefobjekt.rendenr)>13 OR len(EnskiltObjekt.Diarienummer)>13,-0.3,0)'om diarie r lngre n 13 bokstver -1
	end if
	
	if(Rt) then
		tempFloat = 0
		
		if(Et) then			
			if XOR(ubound(ReningsObjekt.Anslutna_fastigheter()) = 0,enskiltobjekt.Fastighet_rening = "") then  'tempFloat om fastighet inte fanns i listan p anslutna, men kan aldrig bli mer n 1
				tempFloat = 0.5
			else
				for p=1 to ubound(ReningsObjekt.Anslutna_fastigheter())
					if(enskiltobjekt.Fastighet_rening = ReningsObjekt.Anslutna_fastigheter(p)) then 'om ngon av anslutna fastigheter = fastighet rening
						tempFloat = 1
					end if
				next
				
				dim a,b,c as logical
				
				a = tempFloat=0
				b = findInINTArray(reningsobjekt.rowIndex,anvndaReningar)
				c = ubound(ReningsObjekt.Anslutna_fastigheter)>1
				
				if(a) then
					tempFloat = tempFloat + iif(b,-9.4,iif(c,1,0))'om rening redan r uptagen.. och gemensamt != true = -1
				end if
			end if
			
			trovrdighetsIndex = trovrdighetsIndex
			+ tempFloat			
			+ IFSAMEoneDIFFRENTzeroONEBLANKhalf(enskiltobjekt.Fastighet_rening,ReningsObjekt.SpatialFastighet)' om det finns en rening p fastighet_rening
			+ IFSAMEoneDIFFRENTzeroONEBLANKhalf(enskiltobjekt.Typ_rening,ReningsObjekt.Reningstyp)'om rening p fastighet med rening har typ rening = fastighet 1
			+ IFSAMEoneDIFFRENTzeroONEBLANKhalf(enskiltobjekt.Storlek_m2,ReningsObjekt.storlek_m2)'om rening p fastighet med rening har typ storlekrening = fastighet 1
			+ IFSAMEoneDIFFRENTzeroONEBLANKhalf(enskiltobjekt.Utfrd_datum,ReningsObjekt.Utfrd_datum)'om rening p fastighet med rening har typ Utfrandedatum	 
		end if
		
		if(St) then
			trovrdighetsIndex = trovrdighetsIndex
			 + IFSAMEoneDIFFRENTzeroONEBLANKhalf(swerefobjekt.Beslut_datum,ReningsObjekt.Beslut_datum)	'1 extra pong om sweref ocks matchar
			 + IFSAMEoneDIFFRENTzeroONEBLANKhalf(enskiltobjekt.Beslut_datum,ReningsObjekt.Beslut_datum)'om rening p fastighet med rening har typ beslutdatum
		end if
	end if
	
	trovrdighetsIndexer = (trovrdighetsIndex)/9 'tempFloat om fastighet inte fanns i listan p anslutna, men kan aldrig bli mer n 1
end function

Sub genTrovrdighet(tovrdighetsObjektArray() as trovrdighetsobjekt,enskiltTokenObjekt() as enskiltObjekt,reningsTokenObjekt() as reningsObjekt,swerefTokenObjekt() as swerefObjekt)
'return is only interested in tovrdighetsObjektArray(1), where our return objekt will be
	dim q,x,z,y as integer
	
	q = 1
	for x=1 TO ubound(reningsTokenObjekt)
	 	For y=1 to ubound(swerefTokenObjekt) 
			for z=1 to ubound(enskiltTokenObjekt)
				redim tovrdighetsObjektArray(q)
					tovrdighetsObjektArray(q).index = trovrdighetsIndexer(swerefTokenObjekt(y),reningsTokenObjekt(x),enskiltTokenObjekt(z))
					tovrdighetsObjektArray(q).rx = x
					tovrdighetsObjektArray(q).fx = y
					tovrdighetsObjektArray(q).ex = z
			next next next
			
		dim tMax as integer
		tMax = 0
		
		for x=1 to q
			if ((x=1) or (tMax < tovrdighetsObjektArray(x).index)) then
				tMax = tovrdighetsObjektArray(x).index
				
				tovrdighetsObjektArray(1).rx = tovrdighetsObjektArray(x).rx
				tovrdighetsObjektArray(1).fx = tovrdighetsObjektArray(x).fx
				tovrdighetsObjektArray(1).ex = tovrdighetsObjektArray(x).ex
				tovrdighetsObjektArray(1).index = tMax
			end if
		next
end sub

function ReningrInteToken(reningsTokenObjekt as reningsobjekt) as logical
	
'	dim tempboolean as logical
'		
'	tempBoolean = (",,,0,,0,,,,,0" <> ReningAsString(reningsTokenObjekt)) AND 
'		= tempBoolean
	ReningrInteToken = reningsTokenObjekt.rowIndex <> 0

	
end function

function EnskiltrInteToken(enskiltTokenObjekt as enskiltObjekt) as logical
	
'	dim tempbolean as logical
'	,tempstring as string
'	tempstring = enskiltAsString(enskiltTokenObjekt)
'	tempbolean = tempstring <> ",,,0,,,0,,0,,0,,,0,,,,,0" AND tempstring <> ",,,,,,,,,0,0" AND 
'		 = tempbolean
	EnskiltrInteToken = enskiltTokenObjekt.rowIndex <> 0

end function

function swerefrInteToken(swerefTokenObjekt as swerefObjekt) as logical
		
	dim tempboolean as logical
	'(",,,0,,0,,,,,0,0" <> swerefAsString(swerefTokenObjekt) AND ",,,,,,,,,0,0" <> swerefAsString(swerefTokenObjekt)) AND 
	
	swerefrInteToken = swerefTokenObjekt.rowindex <> 0
end function


Sub TabToObjRening(byVal nSocken as string, OutputreningsObjekt() as reningsobjekt)
	'resolved: no longer resoloves to zero always'seems like it always fails and send this date to the anteckningslt'resolved: no longer resoloves to zero always'seems like it always fails and send this date to the anteckningslt'assume this line removes double entries in 
	dim query,tempstring as string ,x,size as integer
	
	onError goto queryError 
		query = "select " & getColumnsOfTable_asString("reningIhopslagen") & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from reningIhopslagen," & nSocken & " where spatialFastighet = kir  group by rowindex into ValtRening NoSelect" run command query
	onError goto 0
	
	size = tableInfo(valtRening,tab_info_nrows) 

	OnError goto queryError if size <> 0 then fetch first from ValtRening print nSocken & " " & size & "reningsObjekt" else print "noTrigger" goto queryError end if onError goto 0
	dim antalh,utfrdatum as alias
		
		antalh =	"valtRening.Antal_" & G_husll & "_rening"
		utfrdatum = "valtRening." & G_utfrd & "_datum"

	for x=1 to size
		Redim OutputreningsObjekt(x)
		OutputreningsObjekt(x).spatialFastighet = valtRening.spatialFastighet
		OutputreningsObjekt(x).spatialShift = valtRening.spatialShift
		OutputreningsObjekt(x).Fastighet_rening = searchReplace(valtRening.Fastighet_rening,"""","'")	
		OutputreningsObjekt(x).Antal_hushll_rening = iif(val(antalh & "") <> 0,val(antalh & ""),1)
		OutputreningsObjekt(x).Reningstyp = searchReplace(valtRening.Reningstyp,"""","'")
		OutputreningsObjekt(x).Storlek_m2 = valtRening.Storlek_m2
		OutputreningsObjekt(x).kordinater = valtRening.koor 
		OutputreningsObjekt(x).Kommentarer = searchReplace(valtRening.Kommentarer & " " & OutputreningsObjekt(x).Kommentarer,"""","'")
		OutputreningsObjekt(x).rowIndex = valtRening.rowIndex
		
		tempstring = "" & mixedDateToUnion("" & valtRening.Beslut_datum) if tempstring <> "0" then OutputreningsObjekt(x).Beslut_datum = tempstring else OutputreningsObjekt(x).Kommentarer = searchReplace(tempString & " " & OutputreningsObjekt(x).Kommentarer,"""","'") end if
		tempstring = "" & mixedDateToUnion("" & utfrdatum) if tempstring <> "0" then OutputreningsObjekt(x).utfrd_datum = tempstring else OutputreningsObjekt(x).Kommentarer = searchReplace(tempString & " " & OutputreningsObjekt(x).Kommentarer,"""","'") end if
		
		call getAnslutna(OutputreningsObjekt(x).Anslutna_fastigheter)
		
		fetch next from ValtRening
	next

exit sub queryError: Note "[ERROR @ TabToObjRening] no reningobj created" print query print nsocken print error$() end program end sub


Sub TabToObSweref(byVal SockenFastigheter as string,OutputswerefObjekt() as swerefObjekt)
dim query as string
,x,size as integer	
,Alias1,Alias2,Alias3 as alias
	query = "select " & getColumnsOfTable_asString("Fastigheter_sweref") & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from  Fastigheter_sweref," & SockenFastigheter & " where spatialFastighet = kir  group by rowindex into Valtsweref NoSelect" run command query size = tableInfo(Valtsweref,tab_info_nrows)
	
Alias1 = "Valtsweref.Fastighet_" & G_tillstnd
Alias2 = "Valtsweref." & G_utfrd &"datum"
Alias3 = "Valtsweref." & G_rndenr

	if size > 0 then fetch first from Valtsweref
		print SockenFastigheter & " " & size & "Valtsweref"
		for x=1 to size
			Redim OutputswerefObjekt(x) 
			OutputswerefObjekt(x).FASTIGHET = searchReplace(Valtsweref.FASTIGHET,"""","'")
			OutputswerefObjekt(x).Fastighet_tillstnd = searchReplace(Alias1,"""","'")
			if (alias3<>"MHN") then OutputswerefObjekt(x).rendenr = DiarieMixedToUnit(alias3) end if
			OutputswerefObjekt(x).Beslut_datum = Valtsweref.Beslut_datum
			OutputswerefObjekt(x).Status = searchReplace(Valtsweref.Status,"""","'")
			OutputswerefObjekt(x).Utskick1_datum = Valtsweref.Utskick1_datum
			OutputswerefObjekt(x).Anteckning = searchReplace(Valtsweref.Anteckning,"""","'")
			OutputswerefObjekt(x).utfrddatum = Alias2
			'OutputswerefObjekt(x).slamhmtning = searchReplace(Valtsweref.slamhmtning,"""","'")
			OutputswerefObjekt(x).Antal_byggnader = Valtsweref.Antal_byggnader
			OutputswerefObjekt(x).kordinater = Valtsweref.koor
			OutputswerefObjekt(x).SpatialFastighet = Valtsweref.SpatialFastighet
		'	onError goto rowindexError
		'	print  Valtsweref.rowindex
			OutputswerefObjekt(x).rowindex = Valtsweref.rowindex
		'	print OutputswerefObjekt(x).rowindex
		'	onError goto 0
			fetch next from Valtsweref
		next
	end if
exit sub
rowindexError:
	print "TabToObSweref|" & error$()
	end program
	
end sub

Sub TabToObjEnskilt(byVal SockenFastigheter as string,OutputEnskiltObjekt() as enskiltObjekt)
	dim query as string
	,Alias1, Alias2, Alias3, Alias4 as alias
	,x,size as integer	
	query = 	"select " & getColumnsOfTable_asString("enskiltIhopslagen") & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from enskiltIhopslagen," & SockenFastigheter & " where spatialFastighet = kir  group by rowindex into Valtenskilt NoSelect" run command query size = tableInfo(valtenskilt,tab_info_nrows)


	Alias1 =	"Valtenskilt.Fastighet_" & G_tillstnd
	Alias2 =	"Valtenskilt.Antal_" & G_husll & "_" & G_tillstnd
	Alias3 =	"Valtenskilt." & G_utfrd &"_datum"
	Alias4 =	"Valtenskilt." & G_tillstnd &"_giltigt_tom"

	fetch first from Valtenskilt
	print SockenFastigheter & " " & size & "valtEnskilt"
		for x=1 to size Redim OutputEnskiltObjekt(x)		
			if (Valtenskilt.Diarienummer<>"MHN") then OutputEnskiltObjekt(x).Diarienummer = DiarieMixedToUnit(Valtenskilt.Diarienummer) end if					
			OutputEnskiltObjekt(x).Fastighet_tillstnd = searchReplace(Alias1,"""","'")
			OutputEnskiltObjekt(x).spatialShift = searchReplace(Valtenskilt.spatialshift,"""","'")
			OutputEnskiltObjekt(x).spatialFastighet = searchReplace(Valtenskilt.spatialFastighet,"""","'")
			OutputEnskiltObjekt(x).Typ_byggnad = searchReplace(Valtenskilt.Typ_byggnad,"""","'")
			OutputEnskiltObjekt(x).Antal_hushll_tillstnd = searchReplace(Alias2,"""","'")
			OutputEnskiltObjekt(x).Fastighet_rening = searchReplace(Valtenskilt.Fastighet_rening,"""","'")
			OutputEnskiltObjekt(x).Typ_Slamavskiljare = searchReplace(Valtenskilt.Typ_Slamavskiljare,"""","'")
			OutputEnskiltObjekt(x).Storlek_m3 = Valtenskilt.Storlek_m3
			OutputEnskiltObjekt(x).Typ_rening = searchReplace(Valtenskilt.Typ_rening,"""","'")
			OutputEnskiltObjekt(x).Storlek_m2 = Valtenskilt.Storlek_m2
			OutputEnskiltObjekt(x).Typ_sluten_tank = searchReplace(Valtenskilt.Typ_sluten_tank,"""","'")
			OutputEnskiltObjekt(x).Storlek__m3 = Valtenskilt.Storlek__m3
			OutputEnskiltObjekt(x).Beslut_datum = Valtenskilt.Beslut_datum
			OutputEnskiltObjekt(x).Utfrd_datum = Alias3
			OutputEnskiltObjekt(x).Avgift = val("" & Valtenskilt.Avgift)
			OutputEnskiltObjekt(x).Tillstnd_giltigt_tom = Alias4
			OutputEnskiltObjekt(x).Anteckningar = searchReplace(Valtenskilt.Anteckningar,"""","'")
			OutputEnskiltObjekt(x).kordinater = Valtenskilt.koor
			OutputEnskiltObjekt(x).rowindex = Valtenskilt.rowindex
			
			'OutputEnskiltObjekt(x).slamDispDat = 
		fetch next from ValtEnskilt
	next
	'end program
end sub

function EnskiltSubsetByFasgtighet(inputTable() as EnskiltObjekt,FastighetsBetInput as String,OutputTable() as EnskiltObjekt) as integer
		dim x,y,size as integer
		size = ubound(inputTable)
		y = 1
		if size > 0 then
			for x=1 to size
				if((inputTable(x).spatialFastighet = FastighetsBetInput) OR (inputTable(x).Fastighet_tillstnd = FastighetsBetInput)) then
					call enskiltCopyConstruktor(inputTable(x),outputTable(),y)
					y = y + 1
				end if
			next
		end if
	EnskiltSubsetByFasgtighet = ubound(OutputTable)
exit function
	CommandError: note "[ERROR] @ EnskiltSubsetByFasgtighet _" & commandString & Error$() end program
End function

function swerefSubsetByFasgtighet(inputTable() as swerefObjekt,FastighetsBetInput as String,OutputTable() as swerefObjekt) as integer

		dim x,y,size as integer
		
		size = ubound(inputTable)
		y = 1
		if size > 0 then
			for x=1 to size
				if ((inputTable(x).SpatialFastighet = FastighetsBetInput) OR (inputTable(x).fastighet = FastighetsBetInput) OR (inputTable(x).Fastighet_tillstnd = FastighetsBetInput)) then			
						call swerefObjektCopyConstr(inputTable(x),outputTable(),y)
					y = y + 1
				end if	
			next
		end if
		
		swerefSubsetByFasgtighet = ubound(OutputTable)
exit function
	CommandError: note "[ERROR] @ swerefSubsetByFasgtighet _" & commandString & Error$() end program

End function

function reningsSubsetByFasgtighet(inputTable() as ReningsObjekt,FastighetsBetInput as String,OutputTable() as ReningsObjekt) as integer

		dim x,y,z,lenght,size as integer
		,found as logical
		
		size = ubound(inputTable)
		y = 1
		if size > 0 then
			for x=1 to ubound(inputTable)
	
			 'atempting to fasten stringcompare
				found = false
				
				for z=-1 to ubound(inputTable(x).Anslutna_fastigheter())
					do case z
						case -1 found = (inputTable(x).spatialFastighet = FastighetsBetInput)
						case 0 found = (inputTable(x).Fastighet_rening = FastighetsBetInput)
						case else if(len(FastighetsBetInput) = len(inputTable(x).Anslutna_fastigheter(z))) 
						then if ((inputTable(x).Anslutna_fastigheter(z) = FastighetsBetInput)) 
						then goto foundZ end if end if
					End Case	
					if found then goto foundZ end if
				next
							
				if found then
					foundZ:
						call reningObjCopyConstr(inputTable(x),OutputTable(),y)
				end if
					
				y = y + 1
			next
		end if
		reningsSubsetByFasgtighet = ubound(OutputTable)
exit function
	CommandError: note "[ERROR] @ reningsSubsetByFasgtighet _" & commandString & Error$() end program
End function

sub enskiltCopyConstruktor(inputX as enskiltObjekt, outputXTable() as enskiltObjekt,byVal outPutItterator as integer)
	'inserts copy of inputX at place of outputItterator
	if ubound(outputXTable) < outPutItterator then
		Redim outputXTable(outPutItterator)
	end if
	
	outputXTable(outPutItterator).Diarienummer = 		inputX.Diarienummer
	outputXTable(outPutItterator).Fastighet_tillstnd = 	inputX.Fastighet_tillstnd
	outputXTable(outPutItterator).spatialShift = 		inputX.spatialshift
	outputXTable(outPutItterator).spatialFastighet = 	inputX.spatialFastighet
	outputXTable(outPutItterator).Typ_byggnad = 			inputX.Typ_byggnad
	outputXTable(outPutItterator).Antal_hushll_tillstnd = inputX.Antal_hushll_tillstnd
	outputXTable(outPutItterator).Fastighet_rening = 	inputX.Fastighet_rening
	outputXTable(outPutItterator).Typ_Slamavskiljare = 	inputX.Typ_Slamavskiljare
	outputXTable(outPutItterator).Storlek_m3 = 			inputX.Storlek_m3
	outputXTable(outPutItterator).Typ_rening = 			inputX.Typ_rening
	outputXTable(outPutItterator).Storlek_m2 = 			inputX.Storlek_m2
	outputXTable(outPutItterator).Typ_sluten_tank = 		inputX.Typ_sluten_tank
	outputXTable(outPutItterator).Storlek__m3 = 			inputX.Storlek__m3
	outputXTable(outPutItterator).Beslut_datum = 		inputX.Beslut_datum
	outputXTable(outPutItterator).Utfrd_datum = 		inputX.Utfrd_datum
	outputXTable(outPutItterator).Avgift = 				inputX.Avgift
	outputXTable(outPutItterator).Tillstnd_giltigt_tom = inputX.Tillstnd_giltigt_tom
	outputXTable(outPutItterator).Anteckningar = 		inputX.Anteckningar
	outputXTable(outPutItterator).kordinater = 			inputX.kordinater
	outputXTable(outPutItterator).rowindex = 			inputX.rowindex
End Sub

sub swerefObjektCopyConstr(inputX as swerefObjekt, outputTable() as swerefObjekt,byVal outPutItterator as integer)
	'inserts copy of inputX at place of outputItterator
	
	if ubound(outputTable) < outPutItterator then
		Redim outputTable(outPutItterator)
	end if
		
	OutputTable(outPutItterator).FASTIGHET = inputX.FASTIGHET
	OutputTable(outPutItterator).Fastighet_tillstnd = inputX.Fastighet_tillstnd
	OutputTable(outPutItterator).rendenr = inputX.rendenr
	OutputTable(outPutItterator).Beslut_datum = inputX.Beslut_datum
	OutputTable(outPutItterator).Status = inputX.Status
	OutputTable(outPutItterator).Utskick1_datum = inputX.Utskick1_datum
	OutputTable(outPutItterator).Anteckning = inputX.Anteckning
	OutputTable(outPutItterator).utfrddatum = inputX.utfrddatum
	OutputTable(outPutItterator).slamhmtning = inputX.slamhmtning
	OutputTable(outPutItterator).Antal_byggnader = inputX.Antal_byggnader
	OutputTable(outPutItterator).kordinater = inputX.kordinater
	OutputTable(outPutItterator).SpatialFastighet = inputX.SpatialFastighet
	OutputTable(outPutItterator).rowindex = inputX.rowindex
End Sub

sub reningObjCopyConstr(inputX as ReningsObjekt,OutputTable() as ReningsObjekt,byVal outPutItterator as integer)
	dim z as integer
	if ubound(outputTable) < outPutItterator then
		Redim OutputTable(outPutItterator)
	end if

	'OutputTable(outPutItterator).spatialFastighet = inputX.spatialFastighet OutputTable(outPutItterator).spatialShift = inputX.spatialShift OutputTable(outPutItterator).Fastighet_rening = inputX.Fastighet_rening OutputTable(outPutItterator).Antal_husll_rening = inputX.Antal_husll_rening
	OutputTable(outPutItterator).Reningstyp = inputX.Reningstyp OutputTable(outPutItterator).Storlek_m2 = inputX.Storlek_m2 OutputTable(outPutItterator).kordinater = inputX.kordinater OutputTable(outPutItterator).Kommentarer = inputX.Kommentarer
	OutputTable(outPutItterator).Beslut_datum = inputX.Beslut_datum
	OutputTable(outPutItterator).Utfrd_datum = inputX.Utfrd_datum
					
	redim OutputTable(outPutItterator).Anslutna_fastigheter(ubound(inputX.Anslutna_fastigheter()))
	
	for z=1 to ubound(inputX.Anslutna_fastigheter())
		OutputTable(outPutItterator).Anslutna_fastigheter(z) = inputX.Anslutna_fastigheter(z)
	next		

	OutputTable(outPutItterator).rowIndex = inputX.rowIndex
end sub


sub generateTokenObjekts(reningsTokenObjekt() as reningsobjekt, enskiltTokenObjekt() as enskiltObjekt, swerefTokenObjekt() as swerefobjekt)

	redim swerefTokenObjekt(1)
	swerefTokenObjekt(1).FASTIGHET = ""
	swerefTokenObjekt(1).Fastighet_tillstnd = ""
	swerefTokenObjekt(1).rendenr = ""
	swerefTokenObjekt(1).Beslut_datum = ""
	swerefTokenObjekt(1).Status = ""
	swerefTokenObjekt(1).Utskick1_datum = ""
	swerefTokenObjekt(1).Anteckning = ""
	swerefTokenObjekt(1).utfrddatum = ""
	swerefTokenObjekt(1).slamhmtning = ""
	swerefTokenObjekt(1).Antal_byggnader = 0
	
	redim reningsTokenObjekt(1)		
	reningsTokenObjekt(1).spatialFastighet = ""
	reningsTokenObjekt(1).spatialShift = ""
	reningsTokenObjekt(1).Fastighet_rening = ""
	reningsTokenObjekt(1).Antal_hushll_rening = 0
	reningsTokenObjekt(1).Reningstyp = ""
	reningsTokenObjekt(1).Storlek_m2 = 0
	reningsTokenObjekt(1).kordinater = ""
	reningsTokenObjekt(1).Beslut_datum = ""
	reningsTokenObjekt(1).Utfrd_datum = ""
	reningsTokenObjekt(1).Kommentarer = ""
	reningsTokenObjekt(1).rowIndex = 0
	
	redim enskiltTokenObjekt(1)
	enskiltTokenObjekt(1).Diarienummer = ""	
	enskiltTokenObjekt(1).Fastighet_tillstnd = ""
	enskiltTokenObjekt(1).spatialShift = ""
	enskiltTokenObjekt(1).Typ_byggnad = ""
	enskiltTokenObjekt(1).Antal_hushll_tillstnd = ""
	enskiltTokenObjekt(1).Fastighet_rening = ""
	enskiltTokenObjekt(1).Typ_Slamavskiljare = ""
	enskiltTokenObjekt(1).Storlek_m3 = 0
	enskiltTokenObjekt(1).Typ_rening = ""
	enskiltTokenObjekt(1).Storlek_m2 = 0
	enskiltTokenObjekt(1).Typ_sluten_tank = ""
	enskiltTokenObjekt(1).Storlek__m3 = 0
	enskiltTokenObjekt(1).Beslut_datum = ""
	enskiltTokenObjekt(1).Utfrd_datum = ""
	enskiltTokenObjekt(1).Avgift = 0
	enskiltTokenObjekt(1).Tillstnd_giltigt_tom = ""
	enskiltTokenObjekt(1).Anteckningar = ""
	enskiltTokenObjekt(1).kordinater = ""	

end sub


sub ReningSubsetByIndex(supersetTable() as reningsObjekt, indexArray() as string,OutputTable() as reningsObjekt)

	dim z,x,y,size as integer
	size = ubound(supersetTable) y = 1 

	onError goto CommandError	
		if size > 0 then for x=1 to size
			found: for z=1 to ubound(indexArray) if (val(indexArray(z)) <> 0 AND (indexArray(z) <> "0")) then
			
			if((supersetTable(x).rowindex & "" = indexArray(z))) then
				call reningObjCopyConstr(supersetTable(x),outputTable(),y) y = y + 1 indexArray(z) = 0 goto found
			end if end if next next
		else
			goto CommandError
		end if
	onError goto 0

exit function
	CommandError: note "[ERROR] @ reningSubsetByIndex _size" & size & "_" & Error$() end program

end sub

sub EnskiltSubsetByIndex(supersetTable() as EnskiltObjekt,indexArray() as String,OutputTable() as EnskiltObjekt)
	dim z,x,y,size as integer
	size = ubound(supersetTable) y = 1 

	onError goto CommandError	
		if size > 0 then for x=1 to size
			found: for z=1 to ubound(indexArray) if (val(indexArray(z)) <> 0 AND (indexArray(z) <> "0")) then
			
			if((supersetTable(x).rowindex & "" = indexArray(z))) then
				call enskiltCopyConstruktor(supersetTable(x),outputTable(),y) y = y + 1 indexArray(z) = 0 goto found
			end if end if next next
		else
			goto CommandError
		end if
	onError goto 0

exit function
	CommandError: note "[ERROR] @ EnskiltSubsetByIndex _size" & size & "_" & Error$() end program
end sub

sub SwerefSubsetByIndex(supersetTable() as swerefObjekt, indexArray() as string,OutputTable() as swerefObjekt)

	dim z,x,y,size as integer
	size = ubound(supersetTable) y = 1 

	onError goto CommandError	
		if size > 0 then for x=1 to size
			found: for z=1 to ubound(indexArray) if (val(indexArray(z)) <> 0 AND (indexArray(z) <> "0")) then
			
			if((supersetTable(x).rowindex & "" = indexArray(z))) then
				call swerefObjektCopyConstr(supersetTable(x),outputTable(),y) y = y + 1 indexArray(z) = 0 goto found
			end if end if next next
		else
			goto CommandError
		end if
	onError goto 0

exit function
	CommandError: note "[ERROR] @ swerefSubsetByIndex _size" & size & "_" & Error$() end program
end sub


function ReningAsString(reningsObjekt as reningsobjekt) as String

dim tempString,TempArray() as string
,loopvar as integer
	
	tempString = reningsObjekt.spatialFastighet
	& "," & reningsObjekt.spatialShift
	& "," & reningsObjekt.Fastighet_rening
	& "," & reningsObjekt.Antal_hushll_rening
	& "," & reningsObjekt.Reningstyp
	& "," & reningsObjekt.Storlek_m2
	& "," & reningsObjekt.kordinater
	& "," & reningsObjekt.Beslut_datum
	& "," & reningsObjekt.Utfrd_datum
	& "," & reningsObjekt.Kommentarer
	& "," & reningsObjekt.rowIndex
	
	for loopvar=1 to ubound(reningsObjekt.Anslutna_fastigheter)
		call addStringToArrayAsifSet(TempArray,reningsObjekt.Anslutna_fastigheter(loopVar))' reference index
	next
		
	ReningAsString = tempString & iif(ubound(TempArray) = 0, "",StringArrayAsString(TempArray))

end function

function enskiltAsString(enskiltObjekt as EnskiltObjekt) as string

	dim tempstring as string
	
	tempstring = enskiltObjekt.Diarienummer
	& "," & enskiltObjekt.Fastighet_tillstnd 
	& "," & enskiltObjekt.Typ_byggnad 
	& "," & (enskiltObjekt.Antal_hushll_tillstnd )
	& "," & enskiltObjekt.Fastighet_rening 
	& "," & enskiltObjekt.Typ_Slamavskiljare 
	& "," & enskiltObjekt.Storlek_m3
	& "," & enskiltObjekt.Typ_rening 
	& "," & enskiltObjekt.Storlek_m2
	& "," & enskiltObjekt.Typ_sluten_tank 
	& "," & enskiltObjekt.Storlek__m3
	& "," & enskiltObjekt.Beslut_datum 
	& "," & enskiltObjekt.Utfrd_datum 
	& "," & enskiltObjekt.Avgift
	& "," & enskiltObjekt.Tillstnd_giltigt_tom 
	& "," & enskiltObjekt.Anteckningar 
	& "," & enskiltObjekt.spatialFastighet 
	& "," & enskiltObjekt.spatialShift 
	& "," & enskiltObjekt.kordinater
	& "," & enskiltObjekt.rowindex
enskiltAsString = tempstring

end function

function swerefAsString(swerefTokenObjekt as swerefObjekt) as string

	dim tempString as string
	
	tempString = swerefTokenObjekt.FASTIGHET
	& "," & swerefTokenObjekt.Fastighet_tillstnd
	& "," & swerefTokenObjekt.rendenr
	& "," & swerefTokenObjekt.Beslut_datum
	& "," & swerefTokenObjekt.Status
	& "," & swerefTokenObjekt.Utskick1_datum
	& "," & swerefTokenObjekt.Anteckning
	& "," & swerefTokenObjekt.utfrddatum
	& "," & swerefTokenObjekt.slamhmtning
	& "," & swerefTokenObjekt.Antal_byggnader
	& "," & swerefTokenObjekt.rowindex
	
	swerefAsString = tempstring
end function
