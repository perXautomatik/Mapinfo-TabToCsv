Include "MapBasic.def"

Declare Sub Main
declare sub increment(iProgress as integer,iProgressRange as integer,starttime as integer)
declare sub basicdump
declare Function SplitStringAtCharacter(ByVal sInput As String, ByVal sSplitChar As String, sPartsArray() As String) As Integer

Dim iProgress,iProgressRange,starttime as integer

declare sub process()

Sub Main()
	
	onError goto FSUrsprungsFastigheterMedSockenOc run command "Open Table ""C:\Users\crbk01\OneDrive - Region Gotland\To Vision, GDPR cleanup\MapInfoTables\skikt\Vanliga Tabfiler\UrsprungsFastigheterMedSockenOc2.TAB"" as korrigerandeTabell" onError goto 0 'Open Table "G:\sbf\Livsmiljï¿½\Gemensamt\mapbasic program projekt\skikt\Vanliga Tabfiler\FastigHeterMedSockenTraktSepGrouped.TAB" as korrigerandeTabell
		Select Socken from korrigerandeTabell where socken <> "" group by socken into socken
	
	Select fliken_Fastigheter "flikenFastigheter",fliken_FastigheterFNR "fnr" from HelaSolen where fliken_Fastigheter <> "" AND fliken_FastigheterFNR = 0 into UtanFnr select * from UtanFnr group by flikenFastigheter into Left fetch first from Left startTime = timer() iprogressRange = tableInfo(left,tab_info_nRows) iprogress = 0 ProgressBar "ProcessingflikenFastigheter...." & iProgressRange & " items" Calling process Range iProgressRange
	
	commit table helaSolen
	Select fliken_Fastigheter "flikenFastigheter",fliken_FastigheterFNR "fnr",ignorex "rowid" from HelaSolen where fliken_Fastigheter <> "" AND fliken_FastigheterFNR = 0 into left2Correct
	
	Select Besksadress_huvudfastighet "flikenFastigheter",FNR from HelaSolen where Besksadress_huvudfastighet <> "" AND FNR = 0 into UtanFnr select * from UtanFnr group by flikenFastigheter into Left fetch first from Left startTime = timer() iprogressRange = tableInfo(left,tab_info_nRows) iprogress = 0 ProgressBar "Processingbessfastighet...." & iProgressRange & " items" Calling process Range iProgressRange
	
	end program FSUrsprungsFastigheterMedSockenOc: print error$() resume next
End Sub

sub basicdump
	Select FNR,KIR,FNR,KIR,left$(kir,instr(1,kir," ")-1) "socken",mid$(kir,instr(1,kir," "),len(kir)-(instr(1,kir," ")-1)) "trackt_" from Fastighet_yta where not(FNR = any(select NFNR from korrigerandeTabell)) into ToInsert
	Insert Into korrigerandeTabell ( COL1, COL2, COL3, COL4, COL5, COL6) Select COL1, COL2, COL3, COL4, COL5, COL6 From ToInsert DropIndex Auto
	Select * from korrigerandeTabell where blockEnhet = "" AND FNR <> 0 into wasInserted
	Update wasInserted Set blockenhet = ltrim$(rtrim$(iif(instr(1,trakt," ")=0,trakt,right$(trakt,len(trakt)-instr(1,trakt," ")))))
	Update wasInserted Set trakt = iif(trakt = blockenhet,"",trakt)
	Update wasInserted Set trakt = ltrim$(rtrim$(iif(trakt = blockenhet,"",trakt))) 
	Update wasInserted Set trakt = ltrim$(rtrim$(iif(instr(1,blockenhet," ")=0,"",left$(blockenhet,instr(1,blockenhet," ")))))
	Update wasInserted Set blockenhet = ltrim$(rtrim$(iif(trakt="",blockenhet,right$(blockenhet,len(blockenhet)-instr(1,blockenhet," ")))))
	
	open Table "C:\Users\crbk01\OneDrive - Region Gotland\To Vision, GDPR cleanup\MapInfoTables\skikt\Vanliga Tabfiler\UrsprungsFastigheterMedSockenOc2.TAB" as korrigerandeTabell

	Select * from korrigerandeTabell where FNR = 0 into Selection

	
	Select NFNR, NBETECKNING, FNR, BETECKNING, Socken, Trakt, blockEnhet,0 "a" from korrigerandeTabell order by Socken, Trakt, blockEnhet into KorrWithA
	Select flikenFastigheter, fnr from UtanFnr group by flikenFastigheter order by flikenFastigheter into FlikenFaWithA
	Select FlikenFaWithA.fliken_Fastigheter, KorrWithA.NBETECKNING, KorrWithA.BETECKNING, KorrWithA.Socken, KorrWithA.Trakt, KorrWithA.blockEnhet from FlikenFaWithA, KorrWithA where KorrWithA.a = FlikenFaWithA.a AND instr(1,fliken_Fastigheter,left$(Socken,5))*1 <> 0 into Selection
	Commit Table FlikenFaWithA As "C:\Users\crbk01\Desktop\FlikenFaWithA.TAB" TYPE NATIVEX Charset "WindowsLatin1" Locale "sv-SE" Interactive
	Commit Table KorrWithA As "C:\Users\crbk01\Desktop\KorrWithA.TAB" TYPE NATIVEX Charset "UTF-8" Locale "sv-SE" Interactive
	

	Select FlikenFaWithA.fliken_Fastigheter, KorrWithA.NBETECKNING, KorrWithA.BETECKNING, KorrWithA.Socken, KorrWithA.Trakt, KorrWithA.blockEnhet from FlikenFaWithA, KorrWithA where KorrWithA.a = FlikenFaWithA.fliken_FastigheterFNR AND instr(1,fliken_Fastigheter,left$(Socken,5))*instr(1,fliken_Fastigheter,Trakt)*instr(1,fliken_Fastigheter,blockEnhet) <> 0 into Selection
	
	
	Select FNR "NBETECKNING", KIR "BETECKNING", Socken, Trakt, blockEnhet,a from GammalEllerNy into KorrWithA

	Select FlikenFaWithA.fliken_Fastigheter, KorrWithA.NBETECKNING, KorrWithA.BETECKNING, KorrWithA.Socken, KorrWithA.Trakt, KorrWithA.blockEnhet from FlikenFaWithA, KorrWithA where KorrWithA.a = FlikenFaWithA.fliken_FastigheterFNR AND instr(1,fliken_Fastigheter,left$(Socken,5))*instr(1,fliken_Fastigheter,Trakt)*instr(1,fliken_Fastigheter,blockEnhet)*instr(1,blockEnhet,"" & val(right$(fliken_Fastigheter,len(fliken_fastigheter)-instr(1,fliken_Fastigheter,":")))) into  ToFnrWith

	Select NBETECKNING, BETECKNING from KorrWithA where NBETECKNING<>BETECKNING group by BETECKNING into WasInserted1
	select FNR "NBETECKNING", kir "BETECKNING" from gammalEllerNy into wasInserted1
	Select NBETECKNING, BETECKNING, left$(BETECKNING,instr(1,BETECKNING," ")-1) "socken",mid$(BETECKNING,instr(1,BETECKNING," "),len(BETECKNING)-(instr(1,BETECKNING," ")-1)) "trackt_" from wasInserted1  into WasInsertedX
	Select Col1, Col2, Col3, trackt_, ltrim$(rtrim$(iif(instr(1,trackt_," ")=0,trackt_,right$(trackt_,len(trackt_)-instr(1,trackt_," "))))) "blockenhet" from WasInsertedX into WasInserted2xx
	Select Col1, Col2, Col3, ltrim$(rtrim$(trackt_)) "trakt", ltrim$(rtrim$(blockenhet)) "blockenhet" from WasInserted2xx into WasInserted3x
	Select Col1, Col2, Col3, left$(trakt,instr(1,trakt," ")-1) "trakt", right$(blockenhet,len(blockenhet)-instr(1,blockenhet," ")) "blockenhet" from WasInserted3x into WasInserted4x

	Select NFNR " Fnr" , BETECKNING from KorrWithA group by BETECKNING into utBytlista
	Open Table "C:\Users\crbk01\Desktop\WhenOffline\MapinfoSkikt\fastighetsytor\FastighetUtanSkifte\FastighetUtanSkifte.TAB" Interactive

	Select FNR, KIR from FastighetUtanSkifte group by KIR into NuvrandeFastigheter

	Open Table "C:\Users\crbk01\Desktop\NuvrandeFastigheter.TAB" Interactive
	Insert Into NuvrandeFastigheter (COL1, COL2) Select COL1, left$(COL2,42) From utbytlista DropIndex Auto
	
	
	Alter Table "NuvrandeFastigheter" ( modify KIR Char(42) ) Interactive
	
	
	Select * from NuvrandeFastigheter group by KIR into gammalEllerNy

	Open Table "C:\Users\crbk01\Desktop\WasInsertedX.TAB" Interactive
	Open Table "C:\Users\crbk01\Desktop\GammalEllerNy.TAB" Interactive
	Open Table "C:\Users\crbk01\Desktop\FlikenFaWithA.TAB" Interactive
	Alter Table "GammalEllerNy" ( add a Smallint ) Interactive



end sub

sub process()

	fetch first from socken

	do until eot(socken)
		dim sokStreng,sockenB,korrigerandeTrackt,blockb as string		sockenB = socken.col1 sokStreng = Left.flikenFastigheter
		if instr(1,sokStreng,left$(sockenB,5)) <> 0 then
			if sokStreng <> sockenB then select trakt from korrigerandeTabell where socken = SockenB AND trakt <> "" group by trakt into trakt fetch first from trakt
				do until eot(Trakt)
					dim sPartsArray() As String			
					
					if(SplitStringAtCharacter(trakt.Col1, " ", sPartsArray) = 2) then korrigerandeTrackt = spartsArray(2) else korrigerandeTrackt = trakt.Col1 end if
					
					if instr(1,sokStreng,korrigerandeTrackt) <> 0 then dim sockenOTrackt as logical sockenOTrackt = sokStreng <> SockenB & " " & korrigerandeTrackt				
						if Not(sockenOTrackt) then select blockenhet from korrigerandeTabell where socken = SockenB AND trakt = korrigerandeTrackt AND blockenhet <> ""  group by blockenhet into blockenhet fetch first from blockenhet
							do until eot(blockenhet) blockB = Blockenhet.col1
								
								if instr(1,sokStreng,blockB) <> 0 then
									select fnr from korrigerandeTabell where socken = SockenB AND trakt = korrigerandeTrackt AND blockenhet = blockB group by fnr into hittatFNR fetch first from hittatFNR dim FnrF as integer FnrF = hittatFNR.fnr
									
									update UtanFnr set fnr=FnrF where flikenFastigheter = sokStreng print "updated : " & sokStreng & " = " & SockenB & " " & korrigerandeTrackt & " " & blockB goto LoopEnd
								end if
								fetch next from blockenhet loop	
						else goto LoopEnd end if						
					end if
					fetch next from trakt loop
			else goto LoopEnd end if
		end if			
		
		fetch next from socken
	loop
	LoopEnd:
	fetch Next from Left
	call increment(iProgress,iProgressRange,starttime)		
end sub

sub increment(iProgress as integer,iProgressRange as integer,starttime as integer)

	iProgress = iProgress + 1 
	If iProgress <= iProgressRange Then
		if iProgress mod 100 = 0 then 'at each hundred incrementetations, short time summery is printed
			dim	totaltidH,totaltidM,totaltids,upskattad,upskattadH,upskattadM,upskattads as integer
			,tidperEnhet,totaltid as float
			
			totaltid = timer() - starttime	
			tidperEnhet = totaltid/iprogress		
			
			if(totaltid > 3600) then
				totaltidH = totaltid/3600
				totaltidM = (totaltid mod 3600) / 60
				totaltids = (totaltid mod 3600) mod 60
			else
				totaltidH = 0
				if(totaltid > 60) then
					totaltidM = totaltid / 60
					totaltids = totaltid mod 60
				else
					totaltidM = 0
					totaltids = totaltid
				end if
			end if
			
			
			OnError goto OverflowError
				upskattad = iProgressRange * tidPerEnhet
			onError goto 0
			if false then 
				overflowError:
				upskattad = iProgressRange
			End If
			
			upskattadH = upskattad/3600
			upskattadM = (upskattad mod 3600) / 60
			upskattads = (upskattad mod 3600) mod 60
			
			
			print iProgress & "upskattat: " & upskattadH & "h" & upskattadM & "m" & upskattads & "s totalt:" & totaltidH & "h" & totaltidM & "m" & totaltids & "s passerade"
		End If
		
		ProgressBar = iProgress
	Else
		ProgressBar = -1
	End If

end sub

Function SplitStringAtCharacter(ByVal sInput As String, ByVal sSplitChar As String, sPartsArray() As String) As Integer
'http://twiav-tt.blogspot.se/2013/05/mapbasic-bespoke-function-to-split.html*********************************************************************************************
	OnError Goto HandleError
	
	Dim iPos, iEnd, iCount As Integer
	
	If Len(sInput) = 0 Then
		SplitStringAtCharacter = 0
		Exit Function
	End If
	    
	Do While iEnd <= Len(sInput)
		iPos = iEnd + 1
		iEnd = InStr(iPos, sInput, sSplitChar)
		If iEnd = 0 Then
			iEnd = Len(sInput) + 1
		End If
	
		iCount = iCount + 1
		ReDim sPartsArray(iCount)
		sPartsArray(iCount) = Mid$(sInput, iPos, iEnd - iPos)
	Loop
	
	SplitStringAtCharacter = UBound(sPartsArray)
	
	Exit Function
	'---------------------------
	HandleError:
	Note Error$()

End Function
