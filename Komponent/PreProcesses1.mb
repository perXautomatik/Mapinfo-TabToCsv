Include "MapBasic.def"
include "Menu.def"
include "H:\mina grejer\Project Shelf\att göra\Solen till vision\MapInfoTabToCsv\CommonLib\commonLib1.def"

Declare Sub Main
Declare sub processor_1Pre

Declare sub DO1_1_genPathTab
Declare sub DO1_3_GenFasWithAdr
Declare sub DO1_4_prepRenMel
Declare sub DO1_4_prepRenNor
Declare sub DO1_4_prepRenSd
Declare sub DO1_5_reningIhopslagen
Declare sub DO1_8_prepareSweref
Declare sub DO1_9_egnEnskWSpatFas
Declare sub DO1_10_enskiltIhopslagen
Declare sub DO1_11_prepareSocken
declare sub do6_8_SlamDisp 

declare function CreateTable_reningIhopslagen as string
declare function CreateTable_EnskiltIhopslagen as string
declare sub IhopSlag(ByVal typ as string,ByVal typ2 as string, BYVal path as string)
declare sub prepSpatialy(byVal tableName as string)

global 
G_workDir,G_socken,
G_Sdra,G_hush,G_utfrd,G_tillstnd 
as string, G_rebuild,G_debugg as logical, G_anvndaReningar(),G_ProgressRange,G_Progress,G_senastObjectID, G_senastTid,G_starttime as integer

Sub Main()
	G_debugg = true G_rebuild = true G_senastTid = 0 G_socken = "" 
G_Sdra = "Södra"
	G_hush = "hushåll"
	G_tillstnd = "tillstånd"
	G_utfrd = "Utförd"



	onError goto processor_1Pre G_ProgressRange = 8 G_Progress = 0 G_starttime = timer() ProgressBar "processor_1Pre...." & G_ProgressRange & " items" Calling processor_1Pre Range G_ProgressRange onError goto 0

End program processor_1Pre: print "processor_1PreError" print error$()	    end program End Sub

 
function CreateTable_reningIhopslagen as string
	dim pathVar,temp as string temp= TempFileName$("") 
	pathVar = left$(temp,len(temp)-4) & ".tab"

	run command 
	"Create Table ""reningIhopslagen"" ( Fastighet_rening Char(50), Antal_" 
	& G_hush 
	& "_rening Char(17), Reningstyp Char(15), Storlek_m2 Float, Beslut_datum Char(10), " & 
	G_utfrd & "_datum Char(10), Kommentarer Char(254), Anslutna_fastigheter_1 Char(50), Anslutna_fastigheter_2 Char(50), Anslutna_fastigheter_3 Char(50), Anslutna_fastigheter_4 Char(50), Anslutna_fastigheter_5 Char(50), Anslutna_fastigheter_6 Char(50), Anslutna_fastigheter_7 Char(50), Anslutna_fastigheter_8 Char(50), Anslutna_fastigheter_9 Char(50), Anslutna_fastigheter_10 Char(50), SpatialFastighet Char(40), SpatialShift Char(40), koor char(17) ) file """ 
	& pathVar & """ TYPE NATIVE Charset ""WindowsLatin1"""

	Create Map For reningIhopslagen CoordSys Earth Projection 8, 33, "m", 18.75, 0, 1, 150000, 0 Bounds (0, 0) (1100000, 7800000)
	CreateTable_reningIhopslagen = pathVar
end function

function CreateTable_EnskiltIhopslagen as string
	dim pathVar as string
	dim temp as string temp= TempFileName$("") 
	pathVar = left$(temp,len(temp)-4) & ".tab"
	run command 
	" Create Table ""EnskiltIhopslagen"" ( Diarienummer Char(30), Fastighet_" &
	 G_tillstnd &
	  " Char(50), Typ_byggnad Char(15), Antal_" & G_hush & "_" &
	   G_tillstnd &
	    " Char(17), Fastighet_rening Char(50), Typ_Slamavskiljare Char(27), Storlek_m3 Float, Typ_rening Char(19), Storlek_m2 Float, Typ_sluten_tank Char(11), Storlek__m3 Float, Beslut_datum Date, " & 
		G_utfrd & "_datum Date, Avgift Char(10), " & 
		G_tillstnd & "_giltigt_tom Date, Anteckningar Char(254), SlamDispDate Date, SpatialFastighet Char(40), SpatialShift Char(40), koor char(17)  ) file """ & 
		pathVar & """ TYPE NATIVE Charset ""WindowsLatin1"""
	Create Map For EnskiltIhopslagen CoordSys Earth Projection 8, 33, "m", 18.75, 0, 1, 150000, 0 Bounds (0, 0) (1100000, 7800000)
	CreateTable_EnskiltIhopslagen = pathVar
end function

sub processor_1Pre
		
	'grundtabeller 'Fastighetskikt med adress ''egna reningstabeller med spatial fastighet 'egna EnskiltTabeller med spatial fastighet 'egen swereftabell med spatial fastighet och index '
	call DO1_1_genPathTab 
	'call insertInitialTables()
	DO case G_Progress
		case 1 
			call DO1_3_GenFasWithAdr call DO1_4_prepRenSd if G_debugg then print "DO1_4_prepRenSd: " & G_Progress end if if G_rebuild then print G_Progress end if
		case 2 
			call DO1_4_prepRenNor if G_debugg then print "DO1_4_prepRenNor: " & G_Progress end if if G_rebuild then print G_Progress end if
		case 3
			call DO1_4_prepRenMel if G_debugg then print "DO1_4_prepRenMel: " & G_Progress end if if G_rebuild then print G_Progress end if
		case 4
			call DO1_5_reningIhopslagen if G_debugg then print "DO1_5_reningIhopslagen: " & G_Progress end if if G_rebuild then print G_Progress end if
		case 5
			call DO1_8_prepareSweref if G_debugg then print "DO1_8_prepareSweref: " & G_Progress end if if G_rebuild then print G_Progress end if
		case 6
			call DO1_9_egnEnskWSpatFas if G_debugg then print "DO1_9_egnEnskWSpatFas: " & G_Progress end if if G_rebuild then print G_Progress end if
		case 7 
			call DO1_10_enskiltIhopslagen if G_debugg then print "DO1_10_enskiltIhopslagen: " & G_Progress end if call DO6_8_SlamDisp if G_rebuild then print G_Progress end if
		case 8
			call DO1_11_prepareSocken if G_debugg then print "DO1_11_prepareSocken: " & G_Progress end if if G_rebuild then print G_Progress end if
	end case
	
	call increment(G_Progress,G_ProgressRange,G_starttime)
		
End Sub

sub DO1_11_prepareSocken
		'figure out what wee need to DO whit this function 'lets say we generate a necessary table for processor_2SockenRead 'sockenTabell mste skapas, men denna skall vara tom 'varfr behver sockenX, och 'varfr behver vi nns skapa socknarOfiltrerade? 'verkar som att processor_2SockenRead behver socknarOfiltrerade, 'dper om den sï¿½ att det frhoppningsvis inte sprider sig vidare ' ' '		select * from Sockentabell where col1 <> "" group by col1 order by col1 into socknarOfiltrerade '		redim tablenames(2) tablenames(1) = "EnskiltIhopslagen" tablenames(2) = "reningIhopslagen" call tableOpener(tablenames) ' tempstring = "socknarOfiltrerade"
		dim tempstring,tablenames(3) as string	,tempAlias as alias
		
		if G_rebuild then
			print "rebuilding socknarOfiltrerade" dim tempBool as logical call openSingleTable("fastighet_yta") 

			tempstring = createTemporaryTableAnDOpen("""sockenTabelx"" (sockenX Char(254))")
			insert into sockentabelx Select Cond(left$(KIR,InStr(1,KIR," ",)-1), "allmnt","", "outrett", "", right$(left$(KIR,InStr(1,KIR," ",)-1),1) = "S" AND left$(KIR,InStr(1,KIR," ",)-1) <> "burs","", left$(KIR,InStr(1,KIR," ",)-1)) from fastighet_yta
			select * from sockenTabelx where col1 <> "" group by col1 order by col1 into socknarOfiltrerade
			commit table socknarOfiltrerade as ApplicationDirectory$() & "socknarOfiltrerade.tab" close table sockenTabelx call openSingleTable("socknarOfiltrerade")
		end if

		tempstring = createTemporaryTableAnDOpen("""sockenTabell"" (sockenX Char(254))")
end sub

sub do6_8_SlamDisp 	
		dim tableNames(1) as string redim tableNames(2) tableNames(1) = "Lokalt_omhndertagande_slam" tablenames(2) = "fastighet_yta" call tableOpener(tablenames)
		
		Select fastighet_yta.KIR, Lokalt_omhndertagande_slam.Diarienr, 
		Lokalt_omhndertagande_slam.Beslutsdatum 
		from Lokalt_omhndertagande_slam, fastighet_yta where Lokalt_omhndertagande_slam.Obj Within fastighet_yta.Obj
		into slam

		Add Column "EnskiltIhopslagen" (SlamDispDate )From slam Set To Beslutsdatum Where SpatialFastighet = COL1 
		Add Column "EnskiltIhopslagen" (Anteckningar )From slam Set To "[SlamDisp @: " & DiarieNr & "] " & Anteckningar Where SpatialFastighet = COL1 
		Commit table EnskiltIhopslagen
end sub

'Declare sub guessSpatial(tableName)  
' 
'sub guessSpatial(ByVal tableName as string)  
'
'	'the table inserted is any of the table types
'	'they all have in common that spatial fastighet is ""
'	'they all have in common that obj is null	
'	'they never come mixed, so a case could be used
'	
'	'should update as many as possible rows 
'	onError goto ErrGuessSpatial
'
'
'
'	onError goto 0
'	
'exit sub
'	ErrGuessSpatial: print " [ERROR] guessSpatial(tableName)  " & error$() resume next
' end sub
' 
' 

sub prepSpatialy(byVal tableName as string)

		dim tempstring,query,tableNames(2) as string tempstring = ApplicationDirectory$() & tableName & ".TAB"
		if G_rebuild then
			tablenames(2) = "fastighet_yta"
			tablenames(1) = tableName & "NoIndex"		
			
			call tableOpener(tablenames)

			e418select: 'if it fails again, the program halts
			select * from        tablenames(1) into  TableName
			onError goto e424commit commit table TableName As tempstring TYPE NATIVE Charset "WinDOwsLatin1" Interactive onError goto 0					
			
			onError goto e428close close table TableName	open table tempstring onError goto 0	
			
			e440Add:
			onError goto e445Add 
				onError goto e434Alter Alter Table TableName( add SpatialFastighet Char(40), SpatialShift Char(40), koor Char(19)  ) onError goto 0	
				
				Add Column TableName (SpatialFastighet )From fastighet_yta Set To kir Where contains
				Add Column TableName (SpatialShift)From fastighet_yta Set To Fastighet Where contains
				onError goto 0	

				select * from tableName where SpatialFastighet <> "" into Tempc
				Update Tempc Set koor = centroidX(obj) & "," & centroidY(obj)

			
			onError goto e450commit commit table TableName call tableCloser(tablenames()) onError goto 0	
		end if

'		select kir from tableName into failureSpatial
'
'		if tableInfo(failureSpatial,tab_info_nrows) <> 0 then
'			'call guessSpatial(tableName)
'		end if

		onError goto e414tableInsert query = "insert into Pathtable (tablePath,TableName) values (""" & Tempstring & """,""" & TableName & """)" run command query onError goto 0	

exit sub 
	e445Add: print " + preSpatialy e445Add + Error "	& query
	print error$() 
	rollback table tableName 
	resume e440Add

	e414tableInsert:	print " + preSpatialy e414tableInsert + Error"	print error$()	end program
	e424commit:	print " + preSpatialy e418select + Error"	print error$()	resume e418select
	e428close:	print " + preSpatialy e428close + Error"	print error$()	resume 0
	e434Alter:	print " + preSpatialy e434Alter + Error" & error$()	resume e445Add

	e450commit:	print " + preSpatialy e450commit + Error"	print error$()	end program
 end sub

sub DO1_3_GenFasWithAdr

		dim tempstring as string tempString = applicationDirectory$() & "fastighet_ytaAd.tab"
		if(not(FileExists(tempString))) then
			print "rebuilding fastighet_ytaAd"
			dim tableNames(1) as string redim tableNames(2) tablenames(1) = "fastighet_ytaORg" tablenames(2) = "Adresspunkter" call tableOpener(tablenames)

			Create Table "FaMedAdrPunkt" (KIR Char(40),ADRESS Char(105),POSTNR Char(9),POSTORT Char(105),FASTIGHET Char(54),FNR Integer) file tempString TYPE NATIVE Charset "WinDOwsLatin1"
			Create Map For FaMedAdrPunkt CoordSys Earth Projection 8, 33, "m", 18.75, 0, 1, 150000, 0 Bounds (-8099143.95363, -10001965.7294) (8399143.95363, 10001965.7294)
			Insert Into FaMedAdrPunkt (KIR, FASTIGHET,FNR) Select COL2, COL12, Col1  From fastighet_ytaORg DropIndex Auto
			Add Column "FaMedAdrPunkt" (POSTORT )From Adresspunkter Set To POSTORT Where within
			Add Column "FaMedAdrPunkt" (POSTnr )From Adresspunkter Set To POSTnr Where within
			Add Column "FaMedAdrPunkt" (ADRESS )From Adresspunkter Set To ADRESS Where within

			select * from FaMedAdrPunkt where adress = "" into TomtFaMedAdrPunkt

			Add Column "TomtFaMedAdrPunkt" (ADRESS )From Adresspunkter Set To ADRESS Where COL6 = COL3 
			Add Column "TomtFaMedAdrPunkt" (POSTORT )From Adresspunkter Set To POSTORT Where COL6 = COL3 
			Add Column "TomtFaMedAdrPunkt" (POSTnr )From Adresspunkter Set To POSTnr Where COL6 = COL3 

			commit table FaMedAdrPunkt
			Create Index On FaMedAdrPunkt(kir)
			commit table FaMedAdrPunkt
			
			close table fastighet_ytaORg
			close table Adresspunkter		
			close table FaMedAdrPunkt
		end if
		insert into Pathtable (tablePath,TableName) values (Tempstring, "fastighet_yta")
end sub

sub IhopSlag(ByVal typ as string,ByVal typ2 as string,BYVAL path as string)
		dim tablenames(3) as string

		tablenames(1) = typ & "Mellersta"
		tablenames(2) = typ & "Norra"
		tablenames(3) = typ & ""&G_Sdra
		call tableOpener(tablenames)	

		call insertCommonColumnsFromTableXintoY(tablenames(1),typ2)
		call insertCommonColumnsFromTableXintoY(tablenames(2),typ2)
		call insertCommonColumnsFromTableXintoY(tablenames(3),typ2)
		Commit table typ2
		
		call UpdateIndex(typ2)'already commits
		insert into Pathtable (tablePath,TableName) values (path, typ2)	
		call tableCloserAndCommiter(tableNames)
end sub

sub DO1_9_egnEnskWSpatFas
		call prepSpatialy("Enskilt_avlopp_"&G_Sdra)
		call prepSpatialy("Enskilt_avlopp_Norra")
		call prepSpatialy("Enskilt_avlopp_Mellersta")
end sub

sub DO1_4_prepRenSd
		call prepSpatialy("Rening_"&G_Sdra)
end sub

sub DO1_4_prepRenNor
	call prepSpatialy("Rening_Norra")
end sub

sub DO1_4_prepRenMel
		call prepSpatialy("Rening_Mellersta")
end sub
  
sub DO1_8_prepareSweref
		call prepSpatialy("Fastigheter_sweref")
			call UpdateIndex("Fastigheter_sweref")
end sub

sub DO1_1_genPathTab dim tempstring as string tempstring = "PathTABLE" if IsTableOpen(tempstring) then close table "pathTable" end if CREATE TABLE PathTABLE (tableName Char(40),tablePath Char(256),alternative Char(40)) File TempFileName$("") end sub
 
sub DO1_5_reningIhopslagen	
		call IhopSlag("Rening_","reningIhopslagen", CreateTable_reningIhopslagen())
end sub

sub DO1_10_enskiltIhopslagen
		call IhopSlag("Enskilt_avlopp_","EnskiltIhopslagen", CreateTable_enskiltIhopslagen())
end sub
