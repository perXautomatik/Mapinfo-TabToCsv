
Include "MapBasic.def"
include "Menu.def"
Include "tabellInsammlare.def"
include "commonLib\commonLib1.def"

declare Sub Main()

declare sub processor_PathTable
declare Sub processor_Post()
declare sub processor_socken()

declare sub do1_1_genPathTab 
declare sub do1_3_FasWithAdr
declare sub do1_4_prepTabl 
declare sub do1_5_egnRenTabWspatFas
declare sub do1_7_Socken 
declare sub do1_8_egnSwfWspatFasInd 
declare sub do1_9_egnEnskWSpatFas 

declare Sub do2_1_newSocken(byVal nSocken as string,EnskiltObjekt() as enskiltObjekt,reningsObjekt() as reningsObjekt,swerefObjekt() as swerefObjekt)
declare sub do2_2_inläsning(fastighetsobjekt() as FastighetsObjekt,tempAlias3() as enskiltObjekt,tempAlias2() as reningsobjekt,tempAlias1() as swerefObjekt)
declare sub do2_4_saveProgress(utskriftsObjekt() as utskriftsObjekt,användaReningar() as integer)

declare sub do3_4_assosieraFnr()
declare sub förberedAvslut()

declare sub do1_6_Gem
declare sub do1_10_SlamDisp 
declare sub do3_3_Anteckningar
declare sub do3_6_CorVisFas()
declare sub do3_2_MHK()
declare sub do3_1_MultiplaFastigheter
declare sub do3_5_MånsBilder

declare sub do1_7_2readCurrentState(användaReningar() as integer)


global workDir as string


	'+ tableinfo(antalKörningar,tab_info_nrows) *9
	'if sockentabell is zero, this segment is completely skipped
	'that means that the sockenprogressioncheck has laready bin done in the pathTablePopulation
	
Sub Main()
	 'to make sure the coordinationsystem is the right one
	 'empty message	
	print Chr$(12) run command("Set " + EPSGToCoordSysString$("EPSG::3022")) workdir = "C:\Users\crbk01\OneDrive - Region Gotland\Till Github\Mapinfo\MapInfoTabToCsv" dim tablenames(1) as string 
	tablenames(1) = "fastighet_yta" call closeAllBut(tableNames)
	
	iprogressRange = 8 iprogress = 0 startTime = timer() 
	ProgressBar "processor_PathTable...." & iProgressRange & " items" Calling processor_PathTable Range iProgressRange
	
	iprogressRange = tableinfo(sockenTabell,tab_info_nRows) 
	if iprogressRange <> 0 then	redim tablenames(2) tablenames(1) = "enskiltIhopslaget" tablenames(2) = "reningIhopslaget" call tableOpener(tablenames)	startTime = timer() iprogress = 0
	ProgressBar "processor_socken...." & iProgressRange & " items" Calling processor_socken Range iProgressRange	
	else
		'load ressult
	end if

	call do3_4_assosieraFnr()
	call förberedAvslut() 

	iprogressRange = 10 iprogress = 0 startTime = timer() 
	ProgressBar "processor_Post...." & iProgressRange & " items"	Calling processor_Post	Range iProgressRange		
	
end sub

sub processor_PathTable
	dim tempstring,tablenames(3) as string	,tempAlias as alias
		
	do case iProgress
	case 1
		call do1_1_genPathTab
	case 2 'grundtabeller
		call insertInitialTables()
	case 3'Fastighetskikt med adress	
		call do1_3_FasWithAdr	
	case 4
		call do1_4_prepTabl
	case 5''egna reningstabeller med spatial fastighet
		call do1_5_egnRenTabWspatFas
	case 6
		call do1_7_Socken
	case 7'egen swereftabell med spatial fastighet och index
		call do1_8_egnSwfWspatFasInd	
	case 8'egna EnskiltTabeller med spatial fastighet
		call do1_9_egnEnskWSpatFas	
	end case
	
	call increment(iProgress,iProgressRange,starttime)
		
End Sub

sub processor_socken()
	dim senasteFastighet,förraSocken,FastighetsBetInput,temp,nSocken,fastighetJustNu as string ,x,runns,användaReningar() as integer ,currentObjectid,endtime,integerX as float ,do2_1_newSocken as logical ,fastighetsObjekt() as fastighetsobjekt ,swerefObjekt() as swerefObjekt,reningsObjekt() as reningsObjekt ,EnskiltObjekt() as enskiltObjekt ,utskriftsObjekt() as utskriftsObjekt

	starttime = timer() nSocken = sockenTabell.sockenX senasteFastighet = "" currentObjectid = 0 socken = "" runns = 0	x=1'	end program
	Call do2_1_newSocken(nSocken,EnskiltObjekt(),reningsObjekt(),swerefObjekt()) runns = timer() - starttime	Select * from fastighet_yta where left$(KIR,InStr(1,KIR," ",)-1) = nSocken group by kir into SorteradFastighet fetch first from SorteradFastighet integerX = iif(tableInfo(SorteradFastighet,TAB_INFO_NROWS)=0,1,tableInfo(SorteradFastighet,TAB_INFO_NROWS))

	call increment(iProgress,iProgressRange,starttime)	starttime = timer()	do UNtil EOT(SorteradFastighet)
		fastighetJustNu = SorteradFastighet.kir
		'	debugg = (fastighetJustNu = "ALA OLLAJVS 1:17")'dim debugg as logical debugg = false if(debugg) then end program end if

		call do2_2_inläsning(FastighetsObjekt,EnskiltObjekt(),reningsObjekt(),swerefObjekt())'reads selected row from sorteradFastighet 
		fetch Next from SorteradFastighet
	loop	endtime = timer()-starttime	print "***************************************************************************************************************************" print (timer()-starttime)/integerX & " tidsenheter| " & endtime & " Totala körningens| "  & runns & " sockengenerering" print "***************************************************************************************************************************"
	
	for x = 1 to ubound(fastighetsObjekt) call tolkning(FastighetsObjekt(x),utskriftsObjekt,användaReningar) next 
	
	call do2_4_saveProgress(utskriftsObjekt,användaReningar) 'Runns = Runns+1 if(runns = 2) then '	end program end if
	redim utskriftsObjekt(1) redim fastighetsObjekt(1)

	fetch next from sockenTabell
end sub

sub förberedAvslut()
	Create table "HelaSolen" (Besöksadress_Adress Char(253),Besöksadress_Postnr Char(253),Besöksadress_Ort Char(253),Besöksadress_Huvudfastighet Char(34),FNR Integer,Verksamhetsutövare_Namn Char(253),Verksamhetsutöv_Person_orgnr Integer,Fakturamottagare_NAMN Char(253),Fakturamottagare_Faktura_ADRESS Char(253),Fakturamottagare_Faktura_POSTNR Char(253),Fakturamottagare_Faktura_POSTOR Char(253),Enhet Char(6),Anteckning Char(253),Aktuell_timavgift Integer,Timdebitering Logical,Objektnamn Char(36),flik_Avloppsänlaggni_Boendetyp Char(15),flik_Avloppsanläggn_Byggnadsår Date,flik_Avloppsa_Besiktningsdatum Date,flik_Avloppsanläg_Beslutsdatum Date,Vatten Char(17),Recipient Char(49),Inventering Char(12),Inventeringsinformation_Datum Date,Inventeringsinformation_Status Char(6),Bedömning Char(15),fliken_Fastigheter Char(34),fliken_FastigheterFNR Integer,PunkttypAB Char(16),Fliken_Koordinater Char(19),fliken_Ärenden Char(13),Anläggningskategori Char(20),besiktningdatum Date,beslutsdatum Date,Anläggningstyp Char(15),Volym_m3 Float,Anl_för_EftR_TöInterv_mån Integer,AnlF_efR_Koordinater_X_o_Y Char(19),PunkttypER Char(20),Anläggning_för_EfterföljRText Char(253),Anläggningskategori_2 Char(19),Anläggning_för_S_Anläggningstyp Char(15),Externt_Tjänsteid Integer,text Char(253),Anläggning_för_Slamav_Volym_m3 Float,Anläggningskategori_3 Char(19),AnlförEfterR_Anläggningstyp Char(15),besiktningdatum_2 Date,beslutsdatum_2 Date,Externt_Tjänsteid2 Integer,Volym_m32 Float,ObjektID Integer,Path Char(253),Diarienummer Char(13),Löpnummer Integer) file workdir & "\HelaSolen.TAB" TYPE NATIVE Charset "WindowsLatin1"
	
	fetch first from socknarOfiltrerade
	do until eot(socknarOfiltrerade)		
		run command("Insert Into HelaSolen Select * From " & socknarOfiltrerade.sockenx & "ressultat")
		fetch next from socknarOfiltrerade
	loop
	
	commit table HelaSolen
	
End Sub

Sub processor_Post()

'   gerdins anläggningar är inte färdiga, not added in endressult !
' 	few uggly fastigheter with paranteses in them, should be moved to anteckningar, make a deduction of total all chars used in fastighetsregister, and then filer all results that has other chars, and trye to fix them.
'	call assosieraGammlaFastigheterTillNyaFnr()
' 	correct fastigheter already before association

	do case iProgress case 1
		call do1_6_Gem	
	case 2
		call do3_2_MHK()
	case 3
		call do3_3_Anteckningar
	case 4
		call do3_1_MultiplaFastigheter
		'call klartVattenStatusEndastVidFlagga()
		'call KlartVattenUtskicksDatumIDatumKolumn() 
	case 5
		call do1_10_SlamDisp
	case 6
		call do3_5_MånsBilder
	case 7
		call do3_6_CorVisFas
		'call assosieraGammlaFastigheterTillNyaFnr()
	end case
	
	call increment(iProgress,iProgressRange,starttime)
	
End Sub

sub do1_3_FasWithAdr

		dim tempstring as string
		tempString = applicationDirectory$() & "fastighet_ytaAd.tab"
		if(not(FileExists(tempString))) then
			redim tableNames(2)
			
			tablenames(1) = "fastighet_ytaORg"
			tablenames(2) = "Adresspunkter"
						
			call tableOpener(tablenames)

			Create Table "FaMedAdrPunkt" (KIR Char(40),ADRESS Char(105),POSTNR Char(9),POSTORT Char(105),FASTIGHET Char(54),FNR Integer) file tempString TYPE NATIVE Charset "WindowsLatin1"
			Create Map For FaMedAdrPunkt CoordSys Earth Projection 8, 33, "m", 18.75, 0, 1, 150000, 0 Bounds (-8099143.95363, -10001965.7294) (8399143.95363, 10001965.7294)
			Insert Into FaMedAdrPunkt (KIR, FASTIGHET,FNR) Select COL2, COL12, Col1  From fastighet_ytaORg DropIndex Auto
			Add Column "FaMedAdrPunkt" (POSTORT )From Adresspunkter Set To POSTORT Where within
			Add Column "FaMedAdrPunkt" (POSTnr )From Adresspunkter Set To POSTnr Where within
			Add Column "FaMedAdrPunkt" (ADRESS )From Adresspunkter Set To ADRESS Where within

			select * from FaMedAdrPunkt where adress = "" into TomtFaMedAdrPunkt

			Add Column "TomtFaMedAdrPunkt" (ADRESS )From Adresspunkter Set To ADRESS Where COL6 = COL3 
			Add Column "TomtFaMedAdrPunkt" (POSTORT )From Adresspunkter Set To POSTORT Where COL6 = COL3 
			Add Column "TomtFaMedAdrPunkt" (POSTnr )From Adresspunkter Set To POSTnr Where COL6 = COL3 

			commit table FaMedAdrPunkt
			Create Index On FaMedAdrPunkt(kir)
			commit table FaMedAdrPunkt
			
			close table fastighet_ytaORg
			close table Adresspunkter		
			close table FaMedAdrPunkt
		end if
		insert into Pathtable (tablePath,TableName) values (Tempstring, "fastighet_yta")

end sub

sub do1_1_genPathTab
	dim tempstring as string tempstring = "PathTABLE" if IsTableOpen(tempstring) then close table "pathTable" end if	
		CREATE TABLE PathTABLE (tableName Char(40),tablePath Char(256),alternative Char(40)) File TempFileName$("")

end sub

sub do1_4_prepTabl
	dim tempstring as string 
		redim tableNames(4)
		
		tablenames(1) = "Rening_SödraNoIndex"
		tablenames(2) = "Rening_NorraNoIndex"
		tablenames(3) = "Rening_MellerstaNoIndex"
		tablenames(4) = "fastighet_yta"
						
		call tableOpener(tablenames)
		
		select * from tablenames(1) into "Rening_Södra"
		select * from tablenames(2) into "Rening_Norra"
		select * from tablenames(3) into "Rening_Mellersta"
				
		tempstring = görTillBasTabellReturneraPath("Rening_Södra")
			insert into Pathtable (tablePath,TableName) values (Tempstring, "Rening_Södra")
		tempstring = görTillBasTabellReturneraPath("Rening_Norra")
			insert into Pathtable (tablePath,TableName) values (Tempstring, "Rening_Norra")
		tempstring = görTillBasTabellReturneraPath("Rening_Mellersta")
			insert into Pathtable (tablePath,TableName) values (Tempstring, "Rening_Mellersta")
			
		Alter Table Rening_Södra ( add SpatialFastighet Char(40), SpatialShift Char(40)  )
		Add Column "Rening_Södra" (SpatialFastighet )From fastighet_yta Set To kir Where contains
		Add Column "Rening_Södra" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
		commit table Rening_Södra
		Alter Table "Rening_Södra" ( order Fastighet_rening,Antal_hushåll_rening,Reningstyp,Storlek_m2,Beslut_datum,Utförd_datum,Kommentarer,Anslutna_fastigheter_1,Anslutna_fastigheter_2,Anslutna_fastigheter_3,Anslutna_fastigheter_4,Anslutna_fastigheter_5,Anslutna_fastigheter_6,Anslutna_fastigheter_7,Anslutna_fastigheter_8,Anslutna_fastigheter_9,Anslutna_fastigheter_10,SpatialFastighet,SpatialShift)
		
		Alter Table Rening_Norra (add SpatialFastighet Char(40), SpatialShift Char(40)  )
		Add Column "Rening_Norra" (SpatialFastighet )From fastighet_yta Set To kir Where contains
		Add Column "Rening_Norra" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
		commit table Rening_Norra
		Alter Table "Rening_Norra" ( order Fastighet_rening,Antal_hushåll_rening,Reningstyp,Storlek_m2,Beslut_datum,Utförd_datum,Kommentarer,Anslutna_fastigheter_1,Anslutna_fastigheter_2,Anslutna_fastigheter_3,Anslutna_fastigheter_4,Anslutna_fastigheter_5,Anslutna_fastigheter_6,Anslutna_fastigheter_7,Anslutna_fastigheter_8,Anslutna_fastigheter_9,Anslutna_fastigheter_10,SpatialFastighet,SpatialShift)
		
		Alter Table Rening_Mellersta ( add SpatialFastighet Char(40), SpatialShift Char(40) )
		Add Column "Rening_Mellersta" (SpatialFastighet)From fastighet_yta Set To kir Where contains
		Add Column "Rening_Mellersta" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
		commit table Rening_Mellersta
		Alter Table "Rening_Mellersta" ( order Fastighet_rening,Antal_hushåll_rening,Reningstyp,Storlek_m2,Beslut_datum,Utförd_datum,Kommentarer,Anslutna_fastigheter_1,Anslutna_fastigheter_2,Anslutna_fastigheter_3,Anslutna_fastigheter_4,Anslutna_fastigheter_5,Anslutna_fastigheter_6,Anslutna_fastigheter_7,Anslutna_fastigheter_8,Anslutna_fastigheter_9,Anslutna_fastigheter_10,SpatialFastighet,SpatialShift)
		
		call tableCloser(tablenames())

end sub
 
sub do1_5_egnRenTabWspatFas
		dim tempstring as string tempstring = CreateTable_reningIhopslagen()
		call insertXintoYtableWhereXcolLessThaYcol("rening_mellersta","reningIhopslagen")
		call insertXintoYtableWhereXcolLessThaYcol("rening_Norra","reningIhopslagen")
		call insertXintoYtableWhereXcolLessThaYcol("rening_Södra","reningIhopslagen")
		Commit table reningIhopslagen
		insert into Pathtable (tablePath,TableName) values (Tempstring, "reningIhopslagen")	
	end sub
		 
sub do1_6_Gem
		'injesera gemensamhetsanläggningar
		call PrepareGemensamma()
		call injectGemensamma()
		redim tableNames(1)
		tableNames(1) = "reningIhopslagen"
		dim tempAlias as alias tempAlias = tableNames(1)
		commit table reningIhopslagen
		call UpdateIndex("reningIhopslagen")'already commits
		call tableCloserAndCommiter(tableNames)	
		end sub

sub do1_7_Socken
	'creates two empty 1 column tables called sockenTabell and sockentabellX
	dim tempBool as logical ,tempstring as string tempBool = SingletableOpenerConfirmation("fastighet_yta") tempstring = createTemporaryTableAndOpen("""sockenTabell"" (sockenX Char(254))")	& createTemporaryTableAndOpen("""sockenTabelx"" (sockenX Char(254))")

	'why do we need to populate the socken ref table like this everytime rather than using a premade?
	'if socken is 'then ""'then ""'then ""'else
	'populates a single row table, if it fits the conditions, else it filters away unfit ressults

	insert into sockentabelx Select Cond(left$(KIR,InStr(1,KIR," ",)-1), "allmänt","", "outrett", "", right$(left$(KIR,InStr(1,KIR," ",)-1),1) = "S" AND left$(KIR,InStr(1,KIR," ",)-1) <> "burs","", left$(KIR,InStr(1,KIR," ",)-1)) from fastighet_yta select * from sockenTabelx where col1 <> "" group by col1 order by col1 into socknarOfiltrerade
	
	'dosent this always evaluate to 0, or, does the magic happen in read current state? 
	dim användaReningar() as integer call do1_7_2readCurrentState(användaReningar)
			
	if tableinfo(sockenTabell,tab_info_nrows) = 0 
	then iProgress = -2 end if
end sub

sub do1_8_egnSwfWspatFasInd
		redim tableNames(2)
		tablenames(1) = "Fastigheter_swerefNoIndex"
		tablenames(2) = "fastighet_yta"
		call tableOpener(tablenames)
		select * from tablenames(1) into "Fastigheter_sweref"
		dim tempstring as string tempstring = görTillBasTabellReturneraPath("Fastigheter_sweref")
		
		insert into Pathtable (tablePath,TableName) values (tempstring, "Fastigheter_sweref")

		call UpdateIndex("Fastigheter_sweref")
		Alter Table Fastigheter_sweref (add SpatialFastighet Char(40), SpatialShift Char(40))
		Commit table Fastigheter_sweref
		Add Column "Fastigheter_sweref" (SpatialFastighet)From fastighet_yta Set To kir Where contains
		Add Column "Fastigheter_sweref" (SpatialShift)From fastighet_yta Set To fastighet Where contains
		call tableCloserAndCommiter(tableNames)
		end sub

sub do1_9_egnEnskWSpatFas
		
		redim tableNames(4)
		tablenames(1) = "Enskilt_avlopp_SödraNoIndex"
		tablenames(2) = "Enskilt_avlopp_NorraNoIndex"
		tablenames(3) = "Enskilt_avlopp_MellerstaNoIndex"
		tablenames(4) = "fastighet_yta"
		
		call tableOpener(tablenames)
		
		select * from tablenames(1) into "Enskilt_avlopp_Södra"
		select * from tablenames(2) into "Enskilt_avlopp_Norra"
		select * from tablenames(3) into "Enskilt_avlopp_Mellersta"
'				
		dim tempstring as string tempstring = görTillBasTabellReturneraPath("Enskilt_avlopp_Södra")
		tempstring = görTillBasTabellReturneraPath("Enskilt_avlopp_Norra")
		tempstring = görTillBasTabellReturneraPath("Enskilt_avlopp_Mellersta")
		
		Alter Table Enskilt_avlopp_Södra ( add SpatialFastighet Char(40), SpatialShift Char(40) )
		Add Column "Enskilt_avlopp_Södra" (SpatialFastighet )From fastighet_yta Set To kir Where contains
		Add Column "Enskilt_avlopp_Södra" (SpatialShift )From fastighet_yta Set To Fastighet Where contains
		
		Alter Table Enskilt_avlopp_Norra ( add SpatialFastighet Char(40), SpatialShift Char(40)  )
		Add Column "Enskilt_avlopp_Norra" (SpatialFastighet )From fastighet_yta Set To kir Where contains
		Add Column "Enskilt_avlopp_Norra" (SpatialShift) From fastighet_yta Set To Fastighet Where contains
		
		Alter Table Enskilt_avlopp_Mellersta (add SpatialFastighet Char(40), SpatialShift Char(40) )
		Add Column "Enskilt_avlopp_Mellersta" (SpatialFastighet )From fastighet_yta Set To kir Where contains
		Add Column "Enskilt_avlopp_Mellersta" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
				
		call tableCloser(tablenames())
		end sub

sub do1_10_SlamDisp
		dim tempstring as string tempstring = CreateTable_enskiltIhopslagen()
		call insertXintoYtableWhereXcolLessThaYcol("Enskilt_avlopp_mellersta","EnskiltIhopslagen")
		call insertXintoYtableWhereXcolLessThaYcol("Enskilt_avlopp_Norra","EnskiltIhopslagen")
		call insertXintoYtableWhereXcolLessThaYcol("Enskilt_avlopp_Södra","EnskiltIhopslagen")
		Commit table EnskiltIhopslagen
				
		redim tableNames(2)
		tableNames(1) = "Lokalt_omhändertagande_slam"
		tablenames(2) = "fastighet_yta"
		call tableOpener(tablenames)
		
		Select fastighet_yta.KIR, Lokalt_omhändertagande_slam.Diarienr, Lokalt_omhändertagande_slam.Beslutsdatum from Lokalt_omhändertagande_slam, fastighet_yta where Lokalt_omhändertagande_slam.Obj Within fastighet_yta.Obj into slam
		Alter Table "EnskiltIhopslagen" ( add SlamDispDat Date )
		Commit table EnskiltIhopslagen
		Add Column "EnskiltIhopslagen" (SlamDispDat )From slam Set To Beslutsdatum Where COL17 = COL1 
		Add Column "EnskiltIhopslagen" (Anteckningar )From slam Set To "[SlamDisp på: " & DiarieNr & "] " & Anteckningar Where COL17 = COL1 
		Commit table EnskiltIhopslagen
		call UpdateIndex("EnskiltIhopslagen")'already commits
		insert into Pathtable (tablePath,TableName) values (Tempstring, "EnskiltIhopslagen")
		call tableCloserAndCommiter(tableNames)	
		end sub

sub do1_7_2readCurrentState(användaReningar() as integer)
	dim filePath,tempsTring,gerdinsID(1),query as string ,i,x,returnInt as integer	,debugg as logical debugg = false	x = timer() returnInt = 0 if debugg then print "---------------------------boutToReadReningar-----" end if
	
	call columnAsStringArray("gemensamma","kommentarer",gerdinsID)
	
	fetch first from socknarOfiltrerade
	
	do until eot(socknarOfiltrerade)
		tempstring = socknarOfiltrerade.SockenX & "ressultat"  'if sockenNamnRessultat exsists, then true, else false
	
		if SingletableOpenerConfirmation(tempstring) then onError goto exitProg 
			
			query = "select max(objektid) " & " from " & tempstring & " " & SqlGenWhereColIsNotAny("objektid", gerdinsID) & " into LatestObjectX" run command query fetch first from LatestObjectX	onError goto 0
			if LatestObjectX.col1 > ifOpenFetchFirstCol11Asinteger("LatestObjectID") then	
				call closeIfnotClosed("LatestObjectID")	
				select * from LatestObjectX into LatestObjectID	call görTillBastabell("LatestObjectID")	else
				call closeIfnotClosed("LatestObjectX") end if onError goto 0
		else
			tempstring = socknarOfiltrerade.SockenX Insert Into sockenTabell (COL1) values (tempstring) end if fetch next from socknarOfiltrerade
	loop

	if	debugg then print "---------------------------sockenTabell.col1-----" & sockenTabell.SockenX end if exit sub exitProg:	print query & "||" & error$()	end program
end sub		

sub do2_4_saveProgress(utskriftsObjekt() as utskriftsObjekt,användaReningar() as integer)

	dim query,värden(),påPlatts(),insertinto,fromTable,tablename,filePath, värde(),temp as string ,x,y,z as integer ,tempFloat as float tableName = Socken & "ressultat" filePath = ApplicationDirectory$() + tableName & ".tab"

	call createRessultTableX(tablename,filePath)

	for x=1 to ubound(utskriftsObjekt)
		call genereraSQLVärdeArray(värde, utskriftsObjekt(x)) if( StringArrayAsString(värde) <> "0,0,0,0,F,0,0,0,0,0,0,0,0" ) then query = generateInsertStringWithArray(tableName, värde) if("Insert Into ressultat () Values ()" <> query) then onerror goto queryError 
			run command query onerror goto 0 else goto queryError end if else goto queryError end if
	next
	
	commit table tableName
	
	'sparar AnvändaReningar
	Create Table "ArrayTable" (Fält1 Integer) file TempFileName$("") TYPE NATIVE Charset "WindowsLatin1"
	for x=1 to ubound(användaReningar) Insert Into ArrayTable Values (användaReningar(x)) next
	
	call closeIfnotClosed("AnvändaReningarsHash") select Anslutna_fastigheter_1,CentroidY(Obj),CentroidX(obj) from reningIhopslagen where rowIndex = any (select Col1 from ArrayTable) into AnvändaReningarsHash
	
	'print Format$((tableInfo(AnvändaReningarsHash,tab_info_nRows)/tableInfo(ArrayTable,tab_info_nRows)), "%") & " success save använda reningar"
	 'tömmer utskriftobjekt arrayn
	
	commit table AnvändaReningarsHash as ApplicationDirectory$() & "AnvändaReningarsHash.tab" drop table ArrayTable redim utskriftsobjekt(1) print "done!"
	
	methodEnd:
exit sub
queryError:
	print "queryError|" & query & "dropping table"
	print error$()
	drop table tableName
	resume methodEnd
end sub

sub do3_4_assosieraFnr()
    Select fliken_Fastigheter, fliken_FastigheterFNR from HelaSolen where (fliken_Fastigheter = "" AND fliken_FastigheterFNR  <> 0) OR (fliken_Fastigheter <> "" AND fliken_FastigheterFNR  = 0) into ToFnr

	Select * from ToFnr where fliken_Fastigheter = "" AND fliken_FastigheterFNR <> 0 into NoFas
	Add Column "NoFas" (fliken_Fastigheter )From fastighet_yta Set To KIR Where COL2 = COL6 
	
	Select * from ToFnr where fliken_Fastigheter <> "" AND fliken_FastigheterFNR = 0 into NoFnr
	Add Column "NoFnr" (fliken_FastigheterFNR )From fastighet_yta Set To FNR Where COL1 = COL1 

	Select fliken_Fastigheter, fliken_FastigheterFNR from HelaSolen where (fliken_Fastigheter = "" AND fliken_FastigheterFNR  <> 0) OR (fliken_Fastigheter <> "" AND fliken_FastigheterFNR  = 0) into ToFnr
	Open Table "G:\sbf\Livsmiljö\Gemensamt\mapbasic program projekt\skikt\Vanliga Tabfiler\UrsprungsFastigheterMedSockenOc.TAB" as ursp

	Select * from ToFnr where fliken_Fastigheter = "" AND fliken_FastigheterFNR <> 0 into NoFas
	Add Column "NoFas" (fliken_Fastigheter )From Ursp Set To Beteckning Where COL2 = COL3
	
	Select * from ToFnr where fliken_Fastigheter <> "" AND fliken_FastigheterFNR = 0 into NoFnr
	Add Column "NoFnr" (fliken_FastigheterFNR )From Ursp Set To FNR Where COL1 = Col4

end sub

sub do3_2_MHK()
	
	open table workdir & "\MhkToVision.TAB" as MhkToVision
	insert into HelaSolen (path,Diarienummer) select * from MhkToVision
end sub

sub do3_5_MånsBilder

	Open Table workdir & "\bilder.TAB" Interactive
	select fastighet,path from bilder where fastighet <> "blött jan2018" into utanJan
	insert into HelaSolen (fliken_fastigheter,path) select * from utanJan
	select path from bilder where fastighet = "blött jan2018" into Jan
	insert into HelaSolen (path) select * from Jan
	
end sub

sub do3_6_CorVisFas()
	Open Table workdir & "\ÄrendenMedIngenEllerFelFastighet2.TAB" as fä
	Select Diarienummer, Fnr from fä where Fnr <> 0 into fä2
	
	insert into HelaSolen (diarienummer,fliken_fastigheterFnr) select diarienummer,fnr from fä2
	
end sub

sub do3_1_MultiplaFastigheter

Open Table workdir & "\Mer än en fastighet.TAB" Interactive

Insert Into HelaSolen Select * From Mer_än_en_fastighet

commit table helaSolen

end sub

sub do3_3_Anteckningar


Open Table workdir & "\Anteckningar.TAB" Interactive

insert into HelaSolen (diarienummer,löpnummer,path) select diarienummer,löpnummer,path from anteckningar

end sub

Sub do2_1_newSocken(byVal nSocken as string,EnskiltObjekt() as enskiltObjekt,reningsObjekt() as reningsObjekt,swerefObjekt() as swerefObjekt)
				
		dim sockenTable,sTbl,query,tempstring as string
		,iLoop,x,size as integer
		
'		For iLoop = 1 to numtables() 
'			do case tableinfo(iLoop,1)
'				case "enskiltSocken" drop table enskiltSocken
'				case "SockenSweref"	drop table SockenSweref
'				case "ReningSocken"	drop table ReningSocken
'				case else
'			end case
'		Next 
							
		print "change " & socken & " to " & nSocken socken = nSocken
		redim tablenames(3) tablenames(1) = nSocken & "Fastigheter" tablenames(2) = "EnskiltIhopslagen" tablenames(3) = "reningIhopslagen" call tableOpener(tablenames) sockenTable = Socken & "Fastigheter"
	
		query = "select " & getColumnsOfTable_asString(tableNames(2)) & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from enskiltIhopslagen where obj within any (select Obj From " & SockenTable & ") group by rowindex into Valtenskilt NoSelect" run command query size = tableInfo(valtenskilt,tab_info_nrows)
		
		fetch first from Valtenskilt
		print socken & " " & size & "valtEnskilt"
			for x=1 to size Redim EnskiltObjekt(x)		
				if (Valtenskilt.Diarienummer<>"MHN") then EnskiltObjekt(x).Diarienummer = DiarieMixedToUnit(Valtenskilt.Diarienummer) end if					
				EnskiltObjekt(x).Fastighet_tillstånd = searchReplace(Valtenskilt.Fastighet_tillstånd,"""","'")
				EnskiltObjekt(x).spatialShift = searchReplace(Valtenskilt.spatialshift,"""","'")
				EnskiltObjekt(x).spatialFastighet = searchReplace(Valtenskilt.spatialFastighet,"""","'")
				EnskiltObjekt(x).Typ_byggnad = searchReplace(Valtenskilt.Typ_byggnad,"""","'")
				EnskiltObjekt(x).Antal_hushåll_tillstånd = searchReplace(Valtenskilt.Antal_hushåll_tillstånd,"""","'")
				EnskiltObjekt(x).Fastighet_rening = searchReplace(Valtenskilt.Fastighet_rening,"""","'")
				EnskiltObjekt(x).Typ_Slamavskiljare = searchReplace(Valtenskilt.Typ_Slamavskiljare,"""","'")
				EnskiltObjekt(x).Storlek_m3 = Valtenskilt.Storlek_m3
				EnskiltObjekt(x).Typ_rening = searchReplace(Valtenskilt.Typ_rening,"""","'")
				EnskiltObjekt(x).Storlek_m2 = Valtenskilt.Storlek_m2
				EnskiltObjekt(x).Typ_sluten_tank = searchReplace(Valtenskilt.Typ_sluten_tank,"""","'")
				EnskiltObjekt(x).Storlek__m3 = Valtenskilt.Storlek__m3
				EnskiltObjekt(x).Beslut_datum = Valtenskilt.Beslut_datum
				EnskiltObjekt(x).Utförd_datum = Valtenskilt.Utförd_datum
				EnskiltObjekt(x).Avgift = val("" & Valtenskilt.Avgift)
				EnskiltObjekt(x).Tillstånd_giltigt_tom = Valtenskilt.Tillstånd_giltigt_tom
				EnskiltObjekt(x).Anteckningar = searchReplace(Valtenskilt.Anteckningar,"""","'")
				EnskiltObjekt(x).kordinater = Valtenskilt.koor
				
				'EnskiltObjekt(x).slamDispDat = 
			fetch next from ValtEnskilt
		next
			
		query = "select " & getColumnsOfTable_asString(tableNames(3)) & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from reningIhopslagen where obj within any (select Obj From " & SockenTable & ") group by rowindex into ValtRening NoSelect" run command query size = tableInfo(valtRening,tab_info_nrows) fetch first from ValtRening
		print socken & " " & size & "reningsObjekt"
		for x=1 to size
			
			Redim reningsObjekt(x)
			reningsObjekt(x).spatialFastighet = valtRening.spatialFastighet
			reningsObjekt(x).spatialShift = valtRening.spatialShift
			reningsObjekt(x).Fastighet_rening = searchReplace(valtRening.Fastighet_rening,"""","'")	
			reningsObjekt(x).Antal_hushåll_rening = iif(val(valtRening.Antal_hushåll_rening & "") <> 0,val(valtRening.Antal_hushåll_rening & ""),1)
			reningsObjekt(x).Reningstyp = searchReplace(valtRening.Reningstyp,"""","'")
			reningsObjekt(x).Storlek_m2 = valtRening.Storlek_m2
			reningsObjekt(x).kordinater = valtRening.koor tempstring = "" & 
			valtRening.Beslut_datum if mixedDateToUnion(tempstring) <> "0" then reningsObjekt(x).Beslut_datum = StringToDate(mixedDateToUnion(tempstring)) else	reningsObjekt(x).Kommentarer = searchReplace(tempString & " " & reningsObjekt(x).Kommentarer,"""","'") end if		tempstring = "" & 
			valtRening.Utförd_datum	if mixedDateToUnion(tempstring) <> "0" then	reningsObjekt(x).utförd_datum = StringToDate(mixedDateToUnion(tempstring)) else	reningsObjekt(x).Kommentarer = searchReplace(tempString & " " & reningsObjekt(x).Kommentarer,"""","'") end if
			reningsObjekt(x).Kommentarer = searchReplace(valtRening.Kommentarer & " " & reningsObjekt(x).Kommentarer,"""","'")
			call getAnslutna(reningsObjekt(x).Anslutna_fastigheter) 
			reningsObjekt(x).rowIndex = valtRening.rowIndex
			
			fetch next from ValtRening
		next
		
		query = "select " & getColumnsOfTable_asString("Fastigheter_sweref") & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from  Fastigheter_sweref where obj within any (select Obj From " & SockenTable & ") group by rowindex into Valtsweref NoSelect" run command query size = tableInfo(Valtsweref,tab_info_nrows)
		
		if size > 0 then fetch first from Valtsweref
			print socken & " " & size & "Valtsweref"
			for x=1 to size
				Redim swerefObjekt(x) 
				swerefObjekt(x).FASTIGHET = searchReplace(Valtsweref.FASTIGHET,"""","'")
				swerefObjekt(x).Fastighet_tillstånd = searchReplace(Valtsweref.Fastighet_tillstånd,"""","'")
				if (Valtsweref.Ärendenr<>"MHN") then swerefObjekt(x).Ärendenr = DiarieMixedToUnit(Valtsweref.Ärendenr) end if
				swerefObjekt(x).Beslut_datum = Valtsweref.Beslut_datum
				swerefObjekt(x).Status = searchReplace(Valtsweref.Status,"""","'")
				swerefObjekt(x).Utskick1_datum = Valtsweref.Utskick1_datum
				swerefObjekt(x).Anteckning = searchReplace(Valtsweref.Anteckning,"""","'")
				swerefObjekt(x).utförddatum = Valtsweref.utförddatum
				swerefObjekt(x).slamhämtning = searchReplace(Valtsweref.slamhämtning,"""","'")
				swerefObjekt(x).Antal_byggnader = Valtsweref.Antal_byggnader
				swerefObjekt(x).kordinater = Valtsweref.koor
				swerefObjekt(x).SpatialFastighet = Valtsweref.SpatialFastighet
	
				fetch next from Valtsweref
			next
		end if
		
	call increment(iProgress,iProgressRange,starttime)		
end sub

'läser in forna sockenfiler, laddar listan med använda reningar.
'rening bör inte skapas igen föräns vid datumskifte, precis som SockenUtsökning

'do2_2_inläsning förväntar sig att isdo2_1_newSocken har genrerat tabeller 
sub do2_2_inläsning(fastighetsobjekt() as FastighetsObjekt,tempAlias3() as enskiltObjekt,tempAlias2() as reningsobjekt,tempAlias1() as swerefObjekt)
	
	dim FastighetsBetInput as string,reningsObjekt() as reningsobjekt,enskiltObjekt() as enskiltObjekt,swerefObjekt() as swerefObjekt,returnState as logical,swerefStart,ReningStart,EnskiltStart,objektCreationStart,swerefStop,ReningStop,EnskiltStop,objektCreationStop as float,antal as integer
	FastighetsBetInput = sorteradFastighet.kir
	
	if(countFasGenerateUtvald(FastighetsBetInput) <> 0) then
		antal = 0	'	swerefStart = timer()'läser in förgenererad tabell begränsad efter socknen
		antal = SwerefFilterByBet(tempAlias1,FastighetsBetInput,swerefObjekt)'	swerefStop = timer()'	ReningStart = timer()'läser in förgenererad tabell begränsad efter socknen
		antal = antal + ReningsFilterByBet(tempAlias2,FastighetsBetInput,reningsObjekt)'	ReningStop = timer()'	EnskiltStart = timer()'läser in förgenererad tabell begränsad efter socknen
		antal = antal + EnskiltFilterByBet(tempAlias3,FastighetsBetInput,enskiltObjekt)'	EnskiltStop = timer()
		
		dim debugg as logical debugg = false'	debugg = (FastighetsBetInput = "ALA OLLAJVS 1:17")	if(debugg) then	print antal end if
	
		if(antal > 0) then'objektCreationStart = timer()
			call FastighetsObjCreation(fastighetsBetInput,reningsobjekt,fastighetsObjekt,swerefObjekt,enskiltObjekt)'objektCreationStop = timer()
		end if'close table utvaldFastighet
	else
		print "countFasGenerateUtvald("& FastighetsBetInput & ") = 0" 
	end if
	
'	call presentTime(swerefStart,ReningStart, EnskiltStart, objektCreationStart,swerefStop,ReningStop, EnskiltStop, objektCreationStop)
	'call increment(iProgress,iProgressRange,starttime)

End sub


