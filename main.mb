
Include "MapBasic.def"
include "Menu.def"
Include "tabellInsammlare.def"
include "CommonLib\commonLib1.def"

Declare sub DO2_readCurrentState()
Declare Sub DO2_1_newSocken(byVal nSocken as string)
Declare sub DO4_Mutations()

Declare sub processor_1Pre
Declare sub processor_2SockenRead


Declare sub Processor_5StoreToHelaSolen()


Declare sub Do2_LoadLatestObjId()

Declare sub loadTestData()
Declare Sub Main()
Declare sub SaveAnvändaReningar 
Declare sub UObjCreator()


global G_reningsObjekt() as reningsObjekt , G_swerefObjekt() as swerefObjekt, G_EnskiltObjekt() as EnskiltObjekt, G_workDir,G_socken as string, G_rebuild,G_debugg as logical, G_användaReningar(),G_ProgressRange,G_Progress,G_senastObjectID, G_senastTid,G_starttime as integer


sub processor_2SockenRead
	call Do2_LoadLatestObjId()
	
	call increment(G_Progress,G_ProgressRange,G_starttime)
end sub

Sub Main()
	call loadTestData

	run command("Set " + EPSGToCoordSysString$("EPSG::3022"))  'EPSG::3022 är RT90 0 gon, ESPG::3015 är sweref
	
	dim tablenames(1) as string tablenames(1) = "fastighet_yta" 'call closeAllBut(tableNames)

	G_debugg = true G_rebuild = false 
	G_senastTid = 0 
	G_socken = "" 
	
	run application applicationdirectory$() & "TableValidator.MBX"
	
	run application applicationdirectory$() & "PreProcesses.MBX"
	end program
	
	onError goto processor_2SockenRead call openSingletable("socknarOfiltrerade") fetch first from socknarOfiltrerade G_ProgressRange = tableinfo(socknarOfiltrerade,tab_info_nRows) G_Progress = 0 G_starttime = timer() ProgressBar "processor_2SockenRead...." & G_ProgressRange & " items" calling processor_2SockenRead	Range G_ProgressRange		onError goto 0
	
	print "sockenTabell Rader_" & tableInfo("sockenTabell",TAB_INFO_NROWS)

	run application applicationdirectory$() & "MainLoop.MBX"

	onError goto Processor_5StoreToHelaSolen call createRessultTableX("HelaSolen",applicationdirectory$() & "\HelaSolen.TAB") fetch first from socknarOfiltrerade	G_ProgressRange = tableInfo("socknarOfiltrerade",TAB_INFO_NROWS) 		if G_ProgressRange <> 0 then				G_starttime = timer() 			G_Progress = 0 			ProgressBar "Processor_5StoreToHelaSolen_LoadingIntoTable...." & G_ProgressRange & " items" 			Calling Processor_5StoreToHelaSolen			Range G_ProgressRange				call SilenttidsSummering(G_Progress,G_ProgressRange,G_starttime,"Processor_5StoreToHelaSolen")		end if 	commit table HelaSolen onError goto 0
		
	run application applicationdirectory$() & "PostProcesses.MBX"

exit sub	
	
	
	processor_2SockenRead: print "processor_2SockenReadError" print error$()	    end program
	Processor_5StoreToHelaSolen:	print "Processor_5StoreToHelaSolenError"	end program
	

	


End Sub

sub Processor_5StoreToHelaSolen()
	
	onError goto InsertERror
		if socknarOfiltrerade.sockenx <> "" then 
		call insertCommonColumnsFromTableXintoY(socknarOfiltrerade.sockenx & "ressultat","HelaSolen")
		end if
	onError goto 0
	fetch next from socknarOfiltrerade
	
	call increment(G_Progress,G_ProgressRange,G_starttime)

exit sub
insertError:
	print "[ERROR_Processor_5StoreToHelaSolen]" & error$() & socknarOfiltrerade.sockenx
	end program
End Sub

sub loadTestData()

	dim P_KvSkikt,C_ParrentFolder,ReningsPath,P_slamMap,P_faYtdBySoc,EnskiltPath,P_SwSkikt,P_OfflineTabFolder,P_Ress,P_komponent as string
			
		Close All

		Create Table "PathsPriorityOrder" (Path Char(253),priority Smallint) file applicationdirectory$() & "PathsPriorityOrder.TAB" TYPE NATIVE Charset "WinDOwsLatin1"
		Create Index On PathsPriorityOrder (Path)
		
		
		Create Table "NameNalias" (fileName Char(254),Alias Char(254),NonMandatory Logical) file applicationdirectory$() & "NameNalias.TAB" TYPE NATIVE Charset "WinDOwsLatin1"
		Create Index On NameNalias (fileName)
		
		insert into PathsPriorityOrder (path,priority) values ("H:\OnGithub\*",2)
		insert into PathsPriorityOrder (path,priority) values ("C:\Users\crbk01\Desktop\WhenOffline\*",3)
		insert into PathsPriorityOrder (path,priority) values ("C:\Users\crbk01\Desktop\WhenOffline\MapinfoSkikt\*",1)
		insert into PathsPriorityOrder (path,priority) values ("C:\Users\crbk01\OneDrive - Region Gotland\Solen till vision\KomponentProgramm\*",1)
		insert into PathsPriorityOrder (path,priority) values ("C:\Users\crbk01\Desktop\WhenOffline\MapinfoSkikt\AVLOPP_RENING_ENSKILT\*",2)
		insert into PathsPriorityOrder (path,priority) values (applicationdirectory$() & "*",4)
		insert into PathsPriorityOrder (path,priority) values ("C:\Users\crbk01\Desktop\WhenOffline\Tab-AVLOPP_RENING_ENSKILT\*",1)
		insert into PathsPriorityOrder (path,priority) values ("*\",1)
		insert into PathsPriorityOrder (path,priority) values ("*\SLAM\",6)
		insert into PathsPriorityOrder (path,priority) values ("*\Adress\",6)
		insert into PathsPriorityOrder (path,priority) values ("*\Tab-sweref\",6)
		insert into PathsPriorityOrder (path,priority) values ("*\Tab-Bygg_Fastigheter\",7)
		insert into PathsPriorityOrder (path,priority) values ("*\ressultat\",8)
		insert into PathsPriorityOrder (path,priority) values ("*\Komponent\",9)
		insert into PathsPriorityOrder (path,priority) values ("*\FastighetsytaUpdeladIsocken\",2)		


		insert into NameNalias (fileName,Alias) values ("Adresspunkter.TAB", "Adresspunkter")
 		insert into NameNalias (fileName,Alias) values ("Fastigheter_Sweref.TAB", "Fastigheter_swerefNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Enskilt_avlopp_mellersta.tab", "Enskilt_avlopp_MellerstaNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Rening_mellersta.tab", "Rening_MellerstaNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Enskilt_avlopp_norra.tab", "Enskilt_avlopp_NorraNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Rening_norra.tab", "Rening_NorraNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Enskilt_avlopp_södra.tab", "Enskilt_avlopp_SödraNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Rening_södra.tab", "Rening_SödraNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Fastighet_yta.tab", "fastighet_ytaORg")
		
 		insert into NameNalias (fileName) values ("Lokalt_omhändertagande_slam.TAB")
 		insert into NameNalias (fileName) values ("AKEBÄCKFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ALAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ALSKOGFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ALVAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ANGAFastigheter.TAB")
		insert into NameNalias (fileName) values ("Anteckningar.TAB")
 		insert into NameNalias (fileName) values ("AnvändaReningarsHash.tab")
 		insert into NameNalias (fileName) values ("ARDREFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ATLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BARAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BARLINGBOFastigheter.TAB")
		insert into NameNalias (fileName) values ("bilder.TAB")
 		insert into NameNalias (fileName) values ("BJÖRKEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BOGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BROFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BUNGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BURSFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BUTTLEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BÄLFastigheter.TAB")
 		insert into NameNalias (fileName) values ("DALHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("EKEBYFastigheter.TAB")
 		insert into NameNalias (fileName) values ("EKEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("EKSTAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ENDREFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ESKELHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ETELHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FARDHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FIDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FLERINGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FOLEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FOLLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FRÖJELFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FÅRÖFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GAMMELGARNFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GANTHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GARDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GERUMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GOTHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GRÖTLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GULDRUPEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HABLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HALLAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HALLFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HAMRAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HANGVARFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HAVDHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HEJDEBYFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HEJDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HEJNUMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HELLVIFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HEMSEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HOGRÄNFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HÖRSNEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("KLINTEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("KRÄKLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("KÄLLUNGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LAUFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LEVIDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LINDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LOJSTAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("Lokalt_omhändertagande_slam.TAB")
 		insert into NameNalias (fileName) values ("LOKRUMEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LUMMELUNDAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LYEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LÄRBROFastigheter.TAB")
 		insert into NameNalias (fileName) values ("MARTEBOFastigheter.TAB")
		insert into NameNalias (fileName) values ("Mer_än_en_fastighet.TAB")
		insert into NameNalias (fileName) values ("MhkToVision.TAB")
 		insert into NameNalias (fileName) values ("MÄSTERBYFastigheter.TAB")
 		insert into NameNalias (fileName) values ("NORRLANDAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("NÄRFastigheter.TAB")
 		insert into NameNalias (fileName) values ("NÄSFastigheter.TAB")
 		insert into NameNalias (fileName) values ("OTHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ROMAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("RONEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("RUTEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("SANDAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("SILTEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("SJONHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("socknarOfiltrerade.TAB")
 		insert into NameNalias (fileName) values ("SPROGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("STENKUMLAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("STENKYRKAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("STÅNGAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("SUNDREFastigheter.TAB")
 		insert into NameNalias (fileName) values ("TINGSTÄDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("TOFTAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("TRÄKUMLAFastigheter.TAB")
		insert into NameNalias (fileName) values ("UrsprungsFastigheterMedSockenOc.TAB")
 		insert into NameNalias (fileName) values ("VALLFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VALLSTENAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VAMLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VIKLAUFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VISBYFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VÄNGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VÄSKINDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VÄSTERGARNFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VÄSTERHEJDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VÄTEFastigheter.TAB")
		insert into NameNalias (fileName) values ("ÄrendenMedIngenEllerFelFastighet2.TAB")
 		insert into NameNalias (fileName) values ("ÖJAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ÖSTERGARNFastigheter.TAB")
 				
 		insert into NameNalias (fileName,NonMandatory) values ("AKEBÄCKressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ALAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ALSKOGressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ALVAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ANGAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ARDREressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ATLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BARAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BARLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BJÖRKEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BOGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BROressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BUNGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BURSressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BUTTLEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BÄLressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("DALHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("distriktsindelning.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("EKEBYressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("EKEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("EKSTAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ENDREressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ESKELHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ETELHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FARDHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FIDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FLERINGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FOLEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FOLLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FRÖJELressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FÅRÖressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GAMMELGARNressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GANTHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GARDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GERUMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GOTHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GRÖTLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GULDRUPEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HABLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HALLAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HALLressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HAMRAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HANGVARressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HAVDHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HEJDEBYressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HEJDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HEJNUMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HELLVIressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HEMSEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HOGRÄNressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HÖRSNEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("KLINTEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("KRÄKLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("KÄLLUNGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LAUressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LEVIDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LINDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LOJSTAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LOKRUMEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LUMMELUNDAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LYEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LÄRBROressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("MARTEBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("MÄSTERBYressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("NORRLANDAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("NÄRressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("NÄSressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("OTHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ROMAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("RONEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("RUTEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("SANDAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("SILTEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("SJONHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("SPROGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("STENKUMLAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("STENKYRKAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("STÅNGAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("SUNDREressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("TINGSTÄDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("TOFTAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("TRÄKUMLAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VALLressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VALLSTENAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VAMLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VIKLAUressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VISBYressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VÄNGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VÄSKINDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VÄSTERGARNressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VÄSTERHEJDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VÄTEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ÖJAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ÖSTERGARNressultat.TAB","T")
 		
 		commit table NameNalias
End Sub

sub Do2_LoadLatestObjId()
	'call columnAsStringArray("gemensamma","kommentarer",gerdinsID)
	'SqlGenWhereColIsNotAny("objektid", gerdinsID) & 
	'why DO we need to populate the socken ref table like this everytime rather than using a premade?
	'if socken is 'then ""'then ""'then ""'else
	'populates a single row table, if it fits the conditions, else it filters away unfit ressults
	
	dim filePath,tempsTring,gerdinsID(1),query as string ,i,x,returnInt as integer	,debugg as logical debugg = false	x = timer() returnInt = 0 if debugg then print "---------------------------boutToReadReningar-----" end if
	
	tempstring = socknarOfiltrerade.SockenX & "ressultat"  'if sockenNamnRessultat exsists, then true, else false
	if tempstring <> "ressultat" then
		if openTableAndConfirm(tempstring) then onError goto exitProg 
			
			query = "select max(objektid) " & " from " & tempstring & " " & " into LatestObjectX" run command query fetch first from LatestObjectX	onError goto 0
			if LatestObjectX.col1 > ifOpenFetchFirstCol11Asinteger("LatestObjectID") then	
				call closeSingleTable("LatestObjectID")	
				select * from LatestObjectX into LatestObjectID	call görTillBastabell("LatestObjectID")	else
				call closeSingleTable("LatestObjectX") end if onError goto 0
		else
			tempstring = socknarOfiltrerade.SockenX
			if tempstring <> "" then
				Insert Into sockenTabell (COL1) values (tempstring) 
			end if
		end if
		fetch next from socknarOfiltrerade
	end if

	if	debugg then print "---------------------------sockenTabell.col1-----" & sockenTabell.SockenX end if exit sub exitProg:	print query & "||" & error$()	end program

	call görTillBasTabell("sockenTabell")
end sub

sub SaveAnvändaReningar
	'sparar G_användaReningar 'print Format$((tableInfo(AnvändaReningarsHash,tab_info_nRows)/tableInfo(ArrayTable,tab_info_nRows)), "%") & " success save använda reningar" 'tömmer utskriftobjekt arrayn
	dim x as integer
	
	if ubound(G_användaReningar) <> 0 then
		Create Table "ArrayTable" (Fält1 Integer) file TempFileName$("") TYPE NATIVE Charset "WinDOwsLatin1"
		
		for x=1 to ubound(G_användaReningar) Insert Into ArrayTable Values (G_användaReningar(x)) next
		
		call closeSingleTable("AnvändaReningarsHash") 
		onError goto queryError
		dim query as string
		query = "select Anslutna_fastigheter_1,CentroidY(Obj),CentroidX(obj) from reningIhopslagen where rowIndex = any (select Col1 from ArrayTable) into AnvändaReningarsHash"
		run command query
		onError goto 0
		
		commit table AnvändaReningarsHash as ApplicationDirectory$() & "AnvändaReningarsHash.tab" drop table ArrayTable  print "DOne!"
	else
		print "noReningar to save"
	end if

exit sub queryError: print "[ERROR_SaveAnvändaReningar] " & error$() end sub


sub Avloppsanläggning(uObj() as UtskriftsObjekt,ittr as integer,eO as enskiltobjekt)

	'uObj(ittr).flik_Avloppsänlaggni_Boendetyp = eO.Typ_byggnad
	uObj(ittr).flik_Avloppsanläggn_Byggnadsår = eO.Tillstånd_giltigt_tom
	uObj(ittr).flik_Avloppsa_Besiktningsdatum = eO.Utförd_datum
	uObj(ittr).flik_Avloppsanläg_Beslutsdatum = eO.Beslut_datum
	uObj(ittr).Vatten = eO.Antal_hushåll_tillstånd
	'diarienummer läggs direkt i Ärenden
	'uObj(ittr).Anteckning = textAppend(uObj(ittr).Anteckning,"SlamVol:",eO.Storlek_m3)
	'uObj(ittr).Anteckning = textAppend(uObj(ittr).Anteckning,"SlamTyp:",
	'iif((len(eO.Typ_Slamavskiljare) > 18),right$(eO.Typ_Slamavskiljare,len(eO.Typ_Slamavskiljare)-18),eO.Typ_Slamavskiljare))
	
end sub

sub inventeringsinformation(uObj() as UtskriftsObjekt,ittr as integer,so as swerefobjekt)
	'	 "Inventeringsinformation","Inventering",: "Char(12)",: "(om sweref) \"Klart Vatten"
	'	 "Inventeringsinformation","Inventeringsinformation_Datum",: "datum(??-MM-DD)",: "Utskick1_datum (sweref)" 
	'	 "Inventeringsinformation","Inventeringsinformation_Status",: "Char(6)",: "Status (sweref)" 
	'	 "Inventeringsinformation","Bed?mning",: "Char(15)",: "?rendenr (sweref)"': "Alla fastigheter som n?mns p? alla anl?ggningar som ligger huvudfastigheten (objektet)", 
 
		'har sweref
		if(swerefärInteToken(sO)) then
			uObj(ittr).Inventering = "klart Vatten"
		end if
		
		uObj(ittr).Inventeringsinformation_Datum = sO.Utskick1_datum
		uObj(ittr).Inventeringsinformation_Status = sO.Status
		uObj(ittr).Bedömning = sO.ärendenr

End Sub

sub Recipient(uObj() as UtskriftsObjekt,eO as enskiltobjekt, rO as reningsobjekt,ittr as integer) 
	
	if((ubound(rO.Anslutna_fastigheter())> 1)) then 'gemensam
		uObj(ittr).Recipient =  "gem. " & 
		iif(
		(uObj(ittr).Besöksadress_Huvudfastighet 
		<> ro.spatialFastighet)
		,"på"
		,"med")
		& iif(rO.spatialshift <> "", rO.spatialshift, iif(rO.Fastighet_rening <> "",rO.Fastighet_rening,rO.rowIndex))
	else
		uObj(ittr).Recipient = iif(rO.spatialShift <> "",rO.spatialShift,eO.fastighet_rening)
	end if
	
end sub

function reningsfastigheterAsString(reningsObjekt as reningsObjekt) as string

	dim tempString,TempArray() as string
	,loopvar as integer
			
	for loopvar=1 to ubound(reningsObjekt.Anslutna_fastigheter)
		call addStringToArrayAsifSet(TempArray,reningsObjekt.Anslutna_fastigheter(loopVar))' reference index
	next
		
	reningsfastigheterAsString = iif(ubound(TempArray) = 0, "",StringArrayAsString(TempArray))

end function

function anläggningsobjektToUtskifts(anl() as AnläggningsObjekt,uObj() as UtskriftsObjekt,ittr as integer) as integer
dim x,q as integer

	for x=1 to ubound(anl)
		ittr = ittr + 1 
		redim uObj(ittr)
		uObj(ittr).Anläggningskategori = anl(x).Anläggningskategori 
		uObj(ittr).PunkttypER = anl(x).Kartpunkt
		uObj(ittr).besiktningdatum = anl(x).besiktningdatum
		uObj(ittr).beslutsdatum = anl(x).beslutsdatum 
		uObj(ittr).Anläggningstyp = anl(x).Anläggningstyp 
		uObj(ittr).Volym_m3 = anl(x).Volym_m3 		
		uObj(ittr).Anl_för_EftR_TöInterv_mån = anl(x).Antal_hushåll_rening 		
		uObj(ittr).AnlF_efR_Koordinater_X_o_Y = anl(x).Koordinater 				
		uObj(ittr).Anläggning_för_EfterföljRText = anl(x).Kommentarer 		
		uObj(ittr).Externt_Tjänsteid  = anl(x).ärendenr 		
		uObj(ittr).Anläggning_för_S_Anläggningstyp = anl(x).Typ_byggnad 		
		uObj(ittr).text = anl(x).Status 		
		uObj(ittr).AnlförEfterR_Anläggningstyp = anl(x).Slamdispense 		
		uObj(ittr).Anläggning_för_Slamav_Volym_m3 = anl(x).Utskick1_datum 	
		uObj(ittr).reningsindex = anl(x).radnummer
		uObj(ittr).objektid = G_senastObjectID
	next
	
	anläggningsobjektToUtskifts = ubound(anl)
end function

function diarienummerForUtskriftsObjekt(
		utskriftsObjekt() as utskriftsobjekt,
		itterator as integer,
		enskiltObjekt() as enskiltobjekt,
		swerefObjekt() as swerefobjekt, 
		objektid as integer
		) as integer
		dim ärendennr(),tempDirty() as string
		,x,returnInteger as integer
		
	for x=1 to ubound(enskiltObjekt)
		call addStringToArrayAsifSet(tempDirty(),enskiltObjekt(x).Diarienummer)
	next
	
	for x=1 to ubound(swerefObjekt)
		call addStringToArrayAsifSet(tempDirty(),swerefObjekt(x).Ärendenr) 
	next	
		
	for x=1 to ubound(tempDirty)
		call addStringToArrayAsifSet(ärendennr,DiarieMixedToUnit(tempDirty(x)))
	next
		
	for x = 1 to ubound(ärendennr)
		if (ärendennr(x) <> "MHN") then
			itterator = itterator + 1
			redim utskriftsobjekt(itterator)
			utskriftsobjekt(itterator).fliken_Ärenden = ärendennr(x)
			utskriftsobjekt(itterator).Objektid = objektid
			
			returnInteger = returnInteger + 1 
		end if
	next		

	diarienummerForUtskriftsObjekt = returnInteger
end function

