
Include "MapBasic.def"
include "Menu.def"
Include "tabellInsammlare.def"
include "CommonLib\commonLib1.def"

Declare sub DO2_readCurrentState()
Declare Sub DO2_1_newSocken(byVal nSocken as string)
Declare sub DO4_Mutations()

Declare sub processor_1Pre
Declare sub processor_2SockenRead
Declare sub processor_3PrepMutate()
Declare sub processor_4Mutate()
Declare sub Processor_5StoreToHelaSolen()


Declare sub OmObjektSkapaFastighet(FastighetsBetInput as string)
Declare sub Do2_LoadLatestObjId()
Declare sub loadSocken()
Declare sub loadTestData()
Declare Sub Main()
Declare sub SaveAnvändaReningar 
Declare sub UObjCreator()
Declare sub UobjInitizializer()



global G_reningsObjekt() as reningsObjekt , G_swerefObjekt() as swerefObjekt, G_EnskiltObjekt() as EnskiltObjekt, G_workDir,G_socken as string, G_rebuild,G_debugg as logical, G_användaReningar(),G_ProgressRange,G_Progress,G_senastObjectID, G_senastTid,G_starttime as integer


sub processor_2SockenRead
	call Do2_LoadLatestObjId()
	
	call increment(G_Progress,G_ProgressRange,G_starttime)
end sub

Sub Main()
	call loadTestData

	run command("Set " + EPSGToCoordSysString$("EPSG::3022"))  'EPSG::3022 är RT90 0 gon, ESPG::3015 är sweref
	
	dim tablenames(1) as string tablenames(1) = "fastighet_yta" 'call closeAllBut(tableNames)

	G_debugg = true G_rebuild = false 
	G_senastTid = 0 
	G_socken = "" 
	
	run application applicationdirectory$() & "TableValidator.MBX"
	
	run application applicationdirectory$() & "PreProcesses.MBX"
	end program
	
	onError goto processor_2SockenRead call openSingletable("socknarOfiltrerade") fetch first from socknarOfiltrerade G_ProgressRange = tableinfo(socknarOfiltrerade,tab_info_nRows) G_Progress = 0 G_starttime = timer() ProgressBar "processor_2SockenRead...." & G_ProgressRange & " items" calling processor_2SockenRead	Range G_ProgressRange		onError goto 0
	
	print "sockenTabell Rader_" & tableInfo("sockenTabell",TAB_INFO_NROWS)

	run application applicationdirectory$() & "MainLoop.MBX"

	onError goto Processor_5StoreToHelaSolen call createRessultTableX("HelaSolen",applicationdirectory$() & "\HelaSolen.TAB") fetch first from socknarOfiltrerade	G_ProgressRange = tableInfo("socknarOfiltrerade",TAB_INFO_NROWS) 		if G_ProgressRange <> 0 then				G_starttime = timer() 			G_Progress = 0 			ProgressBar "Processor_5StoreToHelaSolen_LoadingIntoTable...." & G_ProgressRange & " items" 			Calling Processor_5StoreToHelaSolen			Range G_ProgressRange				call SilenttidsSummering(G_Progress,G_ProgressRange,G_starttime,"Processor_5StoreToHelaSolen")		end if 	commit table HelaSolen onError goto 0
		
	run application applicationdirectory$() & "PostProcesses.MBX"

exit sub	
	createFastighetsTable: print "processor_1PreError" print error$()	    end program
	
	processor_2SockenRead: print "processor_2SockenReadError" print error$()	    end program
	processor_3PrepMutate:	print "processor_3PrepMutateError"	print error$()	    end program
	processor_4Mutate:	print "processor_4MutateError"	print error$()	    end program
	Processor_5StoreToHelaSolen:	print "Processor_5StoreToHelaSolenError"	end program
	
	saveSockenProgress: print "[ERROR_saveSockenProgressError] 0 objekts " & G_socken print error$()	    end program
	genSortFa:	print "selectionError " & tempQuery	print error$()	end program
	LoadSocken:	print "LoadSockenError"	print error$()	    end program


End Sub

sub processor_3PrepMutate()
 'initializing global vars? senasteFastighet = "" currentObjectid = 0 socken = "" runns = 0	x=1'	end program 'insert into Pathtable (tablePath,TableName) values (Tempstring, "SorteradFastighet") '	debugg = (fastighetJustNu = "ALA OLLAJVS 1:17")'dim debugg as logical debugg = false if(debugg) then end program end if'reads selected row from sorteradFastighet 
	dim fastighetJustNu as string
	fastighetJustNu = SorteradFastighet.kir 
	if fastighetJustNu <> "" then 
		call OmObjektSkapaFastighet(fastighetJustNu) 
	else
		print "noFastighet"
	end if
	fetch Next from SorteradFastighet call increment(G_Progress,G_ProgressRange,G_starttime)
end sub

sub Processor_5StoreToHelaSolen()
	
	onError goto InsertERror
		if socknarOfiltrerade.sockenx <> "" then 
		call insertCommonColumnsFromTableXintoY(socknarOfiltrerade.sockenx & "ressultat","HelaSolen")
		end if
	onError goto 0
	fetch next from socknarOfiltrerade
	
	call increment(G_Progress,G_ProgressRange,G_starttime)

exit sub
insertError:
	print "[ERROR_Processor_5StoreToHelaSolen]" & error$() & socknarOfiltrerade.sockenx
	end program
End Sub

sub loadTestData()

	dim P_KvSkikt,C_ParrentFolder,ReningsPath,P_slamMap,P_faYtdBySoc,EnskiltPath,P_SwSkikt,P_OfflineTabFolder,P_Ress,P_komponent as string
			
		Close All

		Create Table "PathsPriorityOrder" (Path Char(253),priority Smallint) file applicationdirectory$() & "PathsPriorityOrder.TAB" TYPE NATIVE Charset "WinDOwsLatin1"
		Create Index On PathsPriorityOrder (Path)
		
		
		Create Table "NameNalias" (fileName Char(254),Alias Char(254),NonMandatory Logical) file applicationdirectory$() & "NameNalias.TAB" TYPE NATIVE Charset "WinDOwsLatin1"
		Create Index On NameNalias (fileName)
		
		insert into PathsPriorityOrder (path,priority) values ("H:\OnGithub\*",2)
		insert into PathsPriorityOrder (path,priority) values ("C:\Users\crbk01\Desktop\WhenOffline\*",3)
		insert into PathsPriorityOrder (path,priority) values ("C:\Users\crbk01\Desktop\WhenOffline\MapinfoSkikt\*",1)
		insert into PathsPriorityOrder (path,priority) values ("C:\Users\crbk01\OneDrive - Region Gotland\Solen till vision\KomponentProgramm\*",1)
		insert into PathsPriorityOrder (path,priority) values ("C:\Users\crbk01\Desktop\WhenOffline\MapinfoSkikt\AVLOPP_RENING_ENSKILT\*",2)
		insert into PathsPriorityOrder (path,priority) values (applicationdirectory$() & "*",4)
		insert into PathsPriorityOrder (path,priority) values ("C:\Users\crbk01\Desktop\WhenOffline\Tab-AVLOPP_RENING_ENSKILT\*",1)
		insert into PathsPriorityOrder (path,priority) values ("*\",1)
		insert into PathsPriorityOrder (path,priority) values ("*\SLAM\",6)
		insert into PathsPriorityOrder (path,priority) values ("*\Adress\",6)
		insert into PathsPriorityOrder (path,priority) values ("*\Tab-sweref\",6)
		insert into PathsPriorityOrder (path,priority) values ("*\Tab-Bygg_Fastigheter\",7)
		insert into PathsPriorityOrder (path,priority) values ("*\ressultat\",8)
		insert into PathsPriorityOrder (path,priority) values ("*\Komponent\",9)
		insert into PathsPriorityOrder (path,priority) values ("*\FastighetsytaUpdeladIsocken\",2)		


		insert into NameNalias (fileName,Alias) values ("Adresspunkter.TAB", "Adresspunkter")
 		insert into NameNalias (fileName,Alias) values ("Fastigheter_Sweref.TAB", "Fastigheter_swerefNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Enskilt_avlopp_mellersta.tab", "Enskilt_avlopp_MellerstaNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Rening_mellersta.tab", "Rening_MellerstaNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Enskilt_avlopp_norra.tab", "Enskilt_avlopp_NorraNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Rening_norra.tab", "Rening_NorraNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Enskilt_avlopp_södra.tab", "Enskilt_avlopp_SödraNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Rening_södra.tab", "Rening_SödraNoIndex")
 		insert into NameNalias (fileName,Alias) values ("Fastighet_yta.tab", "fastighet_ytaORg")
		
 		insert into NameNalias (fileName) values ("Lokalt_omhändertagande_slam.TAB")
 		insert into NameNalias (fileName) values ("AKEBÄCKFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ALAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ALSKOGFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ALVAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ANGAFastigheter.TAB")
		insert into NameNalias (fileName) values ("Anteckningar.TAB")
 		insert into NameNalias (fileName) values ("AnvändaReningarsHash.tab")
 		insert into NameNalias (fileName) values ("ARDREFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ATLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BARAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BARLINGBOFastigheter.TAB")
		insert into NameNalias (fileName) values ("bilder.TAB")
 		insert into NameNalias (fileName) values ("BJÖRKEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BOGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BROFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BUNGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BURSFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BUTTLEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("BÄLFastigheter.TAB")
 		insert into NameNalias (fileName) values ("DALHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("EKEBYFastigheter.TAB")
 		insert into NameNalias (fileName) values ("EKEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("EKSTAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ENDREFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ESKELHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ETELHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FARDHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FIDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FLERINGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FOLEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FOLLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FRÖJELFastigheter.TAB")
 		insert into NameNalias (fileName) values ("FÅRÖFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GAMMELGARNFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GANTHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GARDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GERUMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GOTHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GRÖTLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("GULDRUPEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HABLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HALLAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HALLFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HAMRAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HANGVARFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HAVDHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HEJDEBYFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HEJDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HEJNUMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HELLVIFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HEMSEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HOGRÄNFastigheter.TAB")
 		insert into NameNalias (fileName) values ("HÖRSNEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("KLINTEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("KRÄKLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("KÄLLUNGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LAUFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LEVIDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LINDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LOJSTAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("Lokalt_omhändertagande_slam.TAB")
 		insert into NameNalias (fileName) values ("LOKRUMEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LUMMELUNDAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LYEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("LÄRBROFastigheter.TAB")
 		insert into NameNalias (fileName) values ("MARTEBOFastigheter.TAB")
		insert into NameNalias (fileName) values ("Mer_än_en_fastighet.TAB")
		insert into NameNalias (fileName) values ("MhkToVision.TAB")
 		insert into NameNalias (fileName) values ("MÄSTERBYFastigheter.TAB")
 		insert into NameNalias (fileName) values ("NORRLANDAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("NÄRFastigheter.TAB")
 		insert into NameNalias (fileName) values ("NÄSFastigheter.TAB")
 		insert into NameNalias (fileName) values ("OTHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ROMAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("RONEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("RUTEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("SANDAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("SILTEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("SJONHEMFastigheter.TAB")
 		insert into NameNalias (fileName) values ("socknarOfiltrerade.TAB")
 		insert into NameNalias (fileName) values ("SPROGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("STENKUMLAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("STENKYRKAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("STÅNGAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("SUNDREFastigheter.TAB")
 		insert into NameNalias (fileName) values ("TINGSTÄDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("TOFTAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("TRÄKUMLAFastigheter.TAB")
		insert into NameNalias (fileName) values ("UrsprungsFastigheterMedSockenOc.TAB")
 		insert into NameNalias (fileName) values ("VALLFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VALLSTENAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VAMLINGBOFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VIKLAUFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VISBYFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VÄNGEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VÄSKINDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VÄSTERGARNFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VÄSTERHEJDEFastigheter.TAB")
 		insert into NameNalias (fileName) values ("VÄTEFastigheter.TAB")
		insert into NameNalias (fileName) values ("ÄrendenMedIngenEllerFelFastighet2.TAB")
 		insert into NameNalias (fileName) values ("ÖJAFastigheter.TAB")
 		insert into NameNalias (fileName) values ("ÖSTERGARNFastigheter.TAB")
 				
 		insert into NameNalias (fileName,NonMandatory) values ("AKEBÄCKressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ALAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ALSKOGressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ALVAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ANGAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ARDREressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ATLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BARAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BARLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BJÖRKEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BOGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BROressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BUNGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BURSressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BUTTLEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("BÄLressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("DALHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("distriktsindelning.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("EKEBYressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("EKEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("EKSTAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ENDREressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ESKELHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ETELHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FARDHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FIDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FLERINGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FOLEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FOLLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FRÖJELressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("FÅRÖressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GAMMELGARNressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GANTHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GARDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GERUMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GOTHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GRÖTLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("GULDRUPEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HABLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HALLAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HALLressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HAMRAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HANGVARressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HAVDHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HEJDEBYressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HEJDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HEJNUMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HELLVIressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HEMSEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HOGRÄNressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("HÖRSNEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("KLINTEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("KRÄKLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("KÄLLUNGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LAUressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LEVIDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LINDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LOJSTAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LOKRUMEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LUMMELUNDAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LYEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("LÄRBROressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("MARTEBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("MÄSTERBYressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("NORRLANDAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("NÄRressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("NÄSressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("OTHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ROMAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("RONEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("RUTEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("SANDAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("SILTEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("SJONHEMressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("SPROGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("STENKUMLAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("STENKYRKAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("STÅNGAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("SUNDREressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("TINGSTÄDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("TOFTAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("TRÄKUMLAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VALLressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VALLSTENAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VAMLINGBOressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VIKLAUressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VISBYressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VÄNGEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VÄSKINDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VÄSTERGARNressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VÄSTERHEJDEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("VÄTEressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ÖJAressultat.TAB","T")
 		insert into NameNalias (fileName,NonMandatory) values ("ÖSTERGARNressultat.TAB","T")
 		
 		commit table NameNalias
End Sub

sub Do2_LoadLatestObjId()
	'call columnAsStringArray("gemensamma","kommentarer",gerdinsID)
	'SqlGenWhereColIsNotAny("objektid", gerdinsID) & 
	'why DO we need to populate the socken ref table like this everytime rather than using a premade?
	'if socken is 'then ""'then ""'then ""'else
	'populates a single row table, if it fits the conditions, else it filters away unfit ressults
	
	dim filePath,tempsTring,gerdinsID(1),query as string ,i,x,returnInt as integer	,debugg as logical debugg = false	x = timer() returnInt = 0 if debugg then print "---------------------------boutToReadReningar-----" end if
	
	tempstring = socknarOfiltrerade.SockenX & "ressultat"  'if sockenNamnRessultat exsists, then true, else false
	if tempstring <> "ressultat" then
		if openTableAndConfirm(tempstring) then onError goto exitProg 
			
			query = "select max(objektid) " & " from " & tempstring & " " & " into LatestObjectX" run command query fetch first from LatestObjectX	onError goto 0
			if LatestObjectX.col1 > ifOpenFetchFirstCol11Asinteger("LatestObjectID") then	
				call closeSingleTable("LatestObjectID")	
				select * from LatestObjectX into LatestObjectID	call görTillBastabell("LatestObjectID")	else
				call closeSingleTable("LatestObjectX") end if onError goto 0
		else
			tempstring = socknarOfiltrerade.SockenX
			if tempstring <> "" then
				Insert Into sockenTabell (COL1) values (tempstring) 
			end if
		end if
		fetch next from socknarOfiltrerade
	end if

	if	debugg then print "---------------------------sockenTabell.col1-----" & sockenTabell.SockenX end if exit sub exitProg:	print query & "||" & error$()	end program

	call görTillBasTabell("sockenTabell")
end sub

sub SaveAnvändaReningar
	'sparar G_användaReningar 'print Format$((tableInfo(AnvändaReningarsHash,tab_info_nRows)/tableInfo(ArrayTable,tab_info_nRows)), "%") & " success save använda reningar" 'tömmer utskriftobjekt arrayn
	dim x as integer
	
	if ubound(G_användaReningar) <> 0 then
		Create Table "ArrayTable" (Fält1 Integer) file TempFileName$("") TYPE NATIVE Charset "WinDOwsLatin1"
		
		for x=1 to ubound(G_användaReningar) Insert Into ArrayTable Values (G_användaReningar(x)) next
		
		call closeSingleTable("AnvändaReningarsHash") 
		onError goto queryError
		dim query as string
		query = "select Anslutna_fastigheter_1,CentroidY(Obj),CentroidX(obj) from reningIhopslagen where rowIndex = any (select Col1 from ArrayTable) into AnvändaReningarsHash"
		run command query
		onError goto 0
		
		commit table AnvändaReningarsHash as ApplicationDirectory$() & "AnvändaReningarsHash.tab" drop table ArrayTable  print "DOne!"
	else
		print "noReningar to save"
	end if

exit sub queryError: print "[ERROR_SaveAnvändaReningar] " & error$() end sub

sub loadSocken()
'rewrite so that progressbar can be visualized in this method, 'was thinking that maybe a case division, 'DOes case work with variables?	it seems like it DOes in fact work ' but maybe not neccessary		
	dim CurrentSocken,sTbl,tempstring as string
	,iLoop,tempinterger as integer 

	
	if G_socken <> "" then
		dim tableNames(1) as string
		redim tablenames(4) 
		print "change to " & G_socken
		
		CurrentSocken = G_socken & "Fastigheter" 
		tablenames(1) = CurrentSocken 
		tablenames(2) = "EnskiltIhopslagen"
		tablenames(3) = "reningIhopslagen"  
		tablenames(4) = "Fastigheter_sweref"
		call tableOpener(tablenames)
		G_starttime = timer() 
		
		Call TabToObjRening(CurrentSocken,G_ReningsObjekt) 'tempinterger = UBound(G_reningsObjekt()) call SilenttidsSummering(tempinterger,tempinterger,G_starttime,"TabToObjRening") G_starttime = timer() 
		Call TabToObjEnskilt(CurrentSocken,G_EnskiltObjekt) 'tempinterger = ubound(G_EnskiltObjekt) call SilenttidsSummering(tempinterger,tempinterger,G_starttime,"TabToObjEnskilt") G_starttime = timer()
		Call TabToObSweref(CurrentSocken,G_SwerefObjekt) 'tempinterger = ubound(G_swerefObjekt) call SilenttidsSummering(tempinterger,tempinterger,G_starttime,"TabToObSweref")
	end if
	
end sub

sub skapaMutationer(en() as enskiltObjekt ,re() as reningsobjekt ,sw() as swerefobjekt,byVal minimumDebt as integer)

		dim enskiltTokenObjekt() as enskiltObjekt ,reningsTokenObjekt() as reningsobjekt ,swerefTokenObjekt() as swerefobjekt ,trodvädighet() as trovärdighetsobjekt
		
			call subTablesafter(enskiltTokenObjekt,en,reningsTokenObjekt,re,swerefTokenObjekt,sw,minimumDebt)
				call initializer(reningsTokenObjekt,enskiltTokenObjekt,swerefTokenObjekt)
					call genTrovärdighet(trodvädighet,enskiltTokenObjekt,reningsTokenObjekt,swerefTokenObjekt)
						call insertAt(trodvädighet(1),enskiltTokenObjekt,reningsTokenObjekt,swerefTokenObjekt,minimumDebt)
		
		minimumDebt = minimumDebt + 1
		if ((ubound(enskiltTokenObjekt) > minimumDebt) OR (ubound(reningsTokenObjekt) > minimumDebt) or (ubound(swerefTokenObjekt) > minimumDebt)) then
			call skapaMutationer(enskiltTokenObjekt,reningsTokenObjekt,swerefTokenObjekt,minimumDebt)
		end if

exit sub k: print error$() end program kx: print error$() end program end sub

sub OmObjektSkapaFastighet(FastighetsBetInput as string)
		',swerefStart,ReningStart,EnskiltStart,objektCreationStart,swerefStop,ReningStop,EnskiltStop,objektCreationStop as float 
	dim antalObjekt,before,after as integer,debugg as logical,fastighetsObjektsTabell as string,
	EnskiltObjektfastighets() as EnskiltObjekt,reningsObjektfastighets() as reningsObjekt,swerefObjektfastighets() as swerefObjekt
	debugg = false
	antalObjekt = 0
	
	if(countShiftenGenUtvald(FastighetsBetInput) <> 0) then 
		antalObjekt = SwerefSubsetByFasgtighet(G_swerefObjekt,FastighetsBetInput,swerefObjektfastighets) + ReningsSubsetByFasgtighet(G_reningsObjekt,FastighetsBetInput,reningsObjektfastighets) + EnskiltSubsetByFasgtighet(G_EnskiltObjekt,FastighetsBetInput,EnskiltObjektfastighets)
		
		if(antalObjekt > 0 ) then 
			fastighetsObjektsTabell = G_socken & "fastighetsObjekt" before = tableInfo("" & fastighetsObjektsTabell,TAB_INFO_NROWS)
		
			call FastighetsObjCreation(fastighetsObjektsTabell,
			fastighetsBetInput,
			reningsObjektfastighets,
			swerefObjektfastighets,
			EnskiltObjektfastighets)
			
			after = tableInfo("" & fastighetsObjektsTabell,TAB_INFO_NROWS) if (after = before) then goto creationError end if
		else 
			if(debugg) then	print ubound(G_swerefObjekt) & FastighetsBetInput & ubound(swerefObjektfastighets) print ubound(G_reningsObjekt) & FastighetsBetInput & ubound(reningsObjektfastighets) print ubound(G_EnskiltObjekt) & FastighetsBetInput & ubound(EnskiltObjektfastighets) end if
		end if
		
	else
		print "Objekt på fastighet("& FastighetsBetInput & ") = 0" 
	end if
	
exit sub creationerror: 'else 'if ((ubound(fastighetsObjektTabell(after).swerefobjekt()) + ubound(fastighetsObjektTabell(after).Enskiltobjekt()) + ubound(fastighetsObjektTabell(after).reningsobjekt())) <> antalObjekt)  'then' & ubound(fastighetsObjektTabell(after).swerefobjekt()) & " " & ubound(fastighetsObjektTabell(after).Enskiltobjekt()) & " " & ubound(fastighetsObjektTabell(after).reningsobjekt()) & "<>" & antalObjekt' end if			'print "inga objekt på " & FastighetsBetInput print "[ERROR @ OmObjektSkapaFastighet]" & error$() end program End sub

sub processor_4Mutate()
	onError goto UobjInitizializer 
		dim tempALias as alias 
		
		call UobjInitizializer()
	
		tempAlias = G_socken & "fastighetsObjekt"
		call increment(G_Progress,G_ProgressRange,G_starttime)	
	fetch next from tempAlias	onError goto 0
exit sub
	UobjInitizializer: print error$() end program
end sub

sub huvuDObjekt(uObj() as UtskriftsObjekt, it as integer)
	
	dim fastighetsObjekt as alias
	
	fastighetsObjekt = G_socken & "fastighetsObjekt.adress" 
 	uObj(it).Besöksadress_Adress = fastighetsObjekt
 	fastighetsObjekt = G_socken & "fastighetsObjekt.postnr" 
	uObj(it).Besöksadress_Postnr = fastighetsObjekt
	fastighetsObjekt = G_socken & "fastighetsObjekt.ort" 
	uObj(it).Besöksadress_Ort = fastighetsObjekt
	fastighetsObjekt = G_socken & "fastighetsObjekt.fastighet" 
	uObj(it).Besöksadress_Huvudfastighet = FindCharTurncStringByPos(">",fastighetsObjekt)

	uObj(it).Objektnamn = uObj(it).Besöksadress_Huvudfastighet

	fastighetsObjekt = G_socken & "fastighetsObjekt.fnr"
	uObj(it).FNR = fastighetsObjekt
	
 	uObj(it).Enhet = "VATTEN"
	uObj(it).Timdebitering = TRUE
	uObj(it).Aktuell_timavgift = 925
	
end sub

sub Avloppsanläggning(uObj() as UtskriftsObjekt,ittr as integer,eO as enskiltobjekt)

	'uObj(ittr).flik_Avloppsänlaggni_Boendetyp = eO.Typ_byggnad
	uObj(ittr).flik_Avloppsanläggn_Byggnadsår = eO.Tillstånd_giltigt_tom
	uObj(ittr).flik_Avloppsa_Besiktningsdatum = eO.Utförd_datum
	uObj(ittr).flik_Avloppsanläg_Beslutsdatum = eO.Beslut_datum
	uObj(ittr).Vatten = eO.Antal_hushåll_tillstånd
	'diarienummer läggs direkt i Ärenden
	'uObj(ittr).Anteckning = textAppend(uObj(ittr).Anteckning,"SlamVol:",eO.Storlek_m3)
	'uObj(ittr).Anteckning = textAppend(uObj(ittr).Anteckning,"SlamTyp:",
	'iif((len(eO.Typ_Slamavskiljare) > 18),right$(eO.Typ_Slamavskiljare,len(eO.Typ_Slamavskiljare)-18),eO.Typ_Slamavskiljare))
	
end sub

sub inventeringsinformation(uObj() as UtskriftsObjekt,ittr as integer,so as swerefobjekt)
	'	 "Inventeringsinformation","Inventering",: "Char(12)",: "(om sweref) \"Klart Vatten"
	'	 "Inventeringsinformation","Inventeringsinformation_Datum",: "datum(??-MM-DD)",: "Utskick1_datum (sweref)" 
	'	 "Inventeringsinformation","Inventeringsinformation_Status",: "Char(6)",: "Status (sweref)" 
	'	 "Inventeringsinformation","Bed?mning",: "Char(15)",: "?rendenr (sweref)"': "Alla fastigheter som n?mns p? alla anl?ggningar som ligger huvudfastigheten (objektet)", 
 
		'har sweref
		if(swerefärInteToken(sO)) then
			uObj(ittr).Inventering = "klart Vatten"
		end if
		
		uObj(ittr).Inventeringsinformation_Datum = sO.Utskick1_datum
		uObj(ittr).Inventeringsinformation_Status = sO.Status
		uObj(ittr).Bedömning = sO.ärendenr

End Sub

sub Recipient(uObj() as UtskriftsObjekt,eO as enskiltobjekt, rO as reningsobjekt,ittr as integer) 
	
	if((ubound(rO.Anslutna_fastigheter())> 1)) then 'gemensam
		uObj(ittr).Recipient =  "gem. " & 
		iif(
		(uObj(ittr).Besöksadress_Huvudfastighet 
		<> ro.spatialFastighet)
		,"på"
		,"med")
		& iif(rO.spatialshift <> "", rO.spatialshift, iif(rO.Fastighet_rening <> "",rO.Fastighet_rening,rO.rowIndex))
	else
		uObj(ittr).Recipient = iif(rO.spatialShift <> "",rO.spatialShift,eO.fastighet_rening)
	end if
	
end sub

function reningsfastigheterAsString(reningsObjekt as reningsObjekt) as string

	dim tempString,TempArray() as string
	,loopvar as integer
			
	for loopvar=1 to ubound(reningsObjekt.Anslutna_fastigheter)
		call addStringToArrayAsifSet(TempArray,reningsObjekt.Anslutna_fastigheter(loopVar))' reference index
	next
		
	reningsfastigheterAsString = iif(ubound(TempArray) = 0, "",StringArrayAsString(TempArray))

end function

function anläggningsobjektToUtskifts(anl() as AnläggningsObjekt,uObj() as UtskriftsObjekt,ittr as integer) as integer
dim x,q as integer

	for x=1 to ubound(anl)
		ittr = ittr + 1 
		redim uObj(ittr)
		uObj(ittr).Anläggningskategori = anl(x).Anläggningskategori 
		uObj(ittr).PunkttypER = anl(x).Kartpunkt
		uObj(ittr).besiktningdatum = anl(x).besiktningdatum
		uObj(ittr).beslutsdatum = anl(x).beslutsdatum 
		uObj(ittr).Anläggningstyp = anl(x).Anläggningstyp 
		uObj(ittr).Volym_m3 = anl(x).Volym_m3 		
		uObj(ittr).Anl_för_EftR_TöInterv_mån = anl(x).Antal_hushåll_rening 		
		uObj(ittr).AnlF_efR_Koordinater_X_o_Y = anl(x).Koordinater 				
		uObj(ittr).Anläggning_för_EfterföljRText = anl(x).Kommentarer 		
		uObj(ittr).Externt_Tjänsteid  = anl(x).ärendenr 		
		uObj(ittr).Anläggning_för_S_Anläggningstyp = anl(x).Typ_byggnad 		
		uObj(ittr).text = anl(x).Status 		
		uObj(ittr).AnlförEfterR_Anläggningstyp = anl(x).Slamdispense 		
		uObj(ittr).Anläggning_för_Slamav_Volym_m3 = anl(x).Utskick1_datum 	
		uObj(ittr).reningsindex = anl(x).radnummer
		uObj(ittr).objektid = G_senastObjectID
	next
	
	anläggningsobjektToUtskifts = ubound(anl)
end function

function diarienummerForUtskriftsObjekt(
		utskriftsObjekt() as utskriftsobjekt,
		itterator as integer,
		enskiltObjekt() as enskiltobjekt,
		swerefObjekt() as swerefobjekt, 
		objektid as integer
		) as integer
		dim ärendennr(),tempDirty() as string
		,x,returnInteger as integer
		
	for x=1 to ubound(enskiltObjekt)
		call addStringToArrayAsifSet(tempDirty(),enskiltObjekt(x).Diarienummer)
	next
	
	for x=1 to ubound(swerefObjekt)
		call addStringToArrayAsifSet(tempDirty(),swerefObjekt(x).Ärendenr) 
	next	
		
	for x=1 to ubound(tempDirty)
		call addStringToArrayAsifSet(ärendennr,DiarieMixedToUnit(tempDirty(x)))
	next
		
	for x = 1 to ubound(ärendennr)
		if (ärendennr(x) <> "MHN") then
			itterator = itterator + 1
			redim utskriftsobjekt(itterator)
			utskriftsobjekt(itterator).fliken_Ärenden = ärendennr(x)
			utskriftsobjekt(itterator).Objektid = objektid
			
			returnInteger = returnInteger + 1 
		end if
	next		

	diarienummerForUtskriftsObjekt = returnInteger
end function

sub fastighetForUtskriftsobjekt(utskriftsObjekt() as utskriftsobjekt,itterator as integer,swerefObjekt() as swerefobjekt,reningsobjekt() as reningsobjekt,enskiltObjekt() as enskiltobjekt, objektid as integer)
	onError goto underskriptsFel	
	dim antal,x,nt,y as integer,allaFastigheter(),tempDirty() as string,fastighetsobjekt as fastighetsobjekt
	
	call addStringToArrayAsifSet(tempDirty(),fastighetsobjekt.kir)

	for x=1 to 	ubound(enskiltObjekt)
		call addStringToArrayAsifSet(tempDirty(),enskiltObjekt(x).Fastighet_rening)
		call addStringToArrayAsifSet(tempDirty(),enskiltObjekt(x).spatialFastighet)
		call addStringToArrayAsifSet(tempDirty(),enskiltObjekt(x).Fastighet_tillstånd)
	next
	
	for x=1 to 	ubound(SwerefObjekt)
		call addStringToArrayAsifSet(tempDirty(),SwerefObjekt(x).FASTIGHET)
	next
	
	for y=1 to 	ubound(reningsobjekt)
		call addStringToArrayAsifSet(tempDirty(),reningsobjekt(y).spatialFastighet)
		call addStringToArrayAsifSet(tempDirty(),reningsobjekt(y).Fastighet_rening)
			
		for x=1 to ubound(reningsobjekt(y).Anslutna_fastigheter)
			call addStringToArrayAsifSet(tempDirty(),reningsobjekt(y).Anslutna_fastigheter(x))
		next
	next
	
	for x=1 to ubound(tempDirty)
		call addStringToArrayAsifSet(allaFastigheter(),FindCharTurncStringByPos(">",FindCharTurncStringByPos("<",tempDirty(x))))
	next
		
	antal = ubound(allaFastigheter)
	
	if antal <> 0 then
		for x=1 to antal
			nt = itterator+x-1
			If allaFastigheter(x) <> "" Then
				redim utskriftsobjekt(nt) utskriftsobjekt(nt).objektId = objektid
				utskriftsobjekt(nt).fliken_Fastigheter = allaFastigheter(x) 
			End If
		next
	end if

	onError goto 0
exit sub underskriptsFel: note error$() end program end sub
		
sub Anläggning(anlObj() as anläggningsobjekt,eO() as enskiltobjekt,rO() as reningsobjekt,sO() as swerefobjekt)
		
	 'metoden skall lägga till anläggningar, så som tank, etc utefter om det finns fler än ett av varje av dessa, ifall av 0 är det inte mer än att de blir toma ytor.
	 dim x,enskilt,sweref,rening as integer
	 ,antal as integer
	 enskilt = ubound(eO)
	 sweref = ubound(sO)
	 rening = ubound(rO)
	 antal = 0
	 
	 if enskilt >= 1 then
	 	for x=1 to enskilt
	 		if eO(x).rowindex <> 0 then
		 		'anlObj(antal).Objektnamn = iif(sO.fastighet_tillstånd <> "",sO.fastighet_tillstånd,fastighetsObjekt.fastighet) & " " & sO.Status
				antal = antal + 1
				redim anlObj(antal)
				anlObj(antal).Kartpunkt = "Ansluten byggnad"
				anlObj(antal).Anläggningskategori = x & " Slamavskiljare"
				anlObj(antal).Anläggningstyp = eO(x).Typ_Slamavskiljare
				anlObj(antal).besiktningdatum = eO(x).Utförd_datum
				anlObj(antal).beslutsdatum = eO(x).Beslut_datum
				anlObj(antal).Kommentarer = textAppend(eO(x).Anteckningar,"rening på:", eO(x).fastighet_rening)
				anlObj(antal).Volym_m3 = eO(x).Storlek_m3
				anlObj(antal).Koordinater = eO(x).kordinater
				anlObj(antal).radnummer = eO(x).rowindex
				anlObj(antal).ärendenr =  DiarieUtanBokstäver(DiarieMixedToUnit(eO(x).Diarienummer))
				anlObj(antal).Typ_byggnad = eO(x).Typ_byggnad
			end if
	 	next
	 end if
	 
	 if enskilt >= 1 then
	 	for x=1 to enskilt
	 		if eO(x).rowindex <> 0 then
			 	if((eO(x).Typ_sluten_tank <> "0" and eO(x).Typ_sluten_tank <> "" and eO(x).Typ_sluten_tank <> "-")) then
			 		antal = antal + 1
					redim anlObj(antal)
					anlObj(antal).Kartpunkt = "Tank"
					anlObj(antal).Anläggningskategori = x & " Tank"
					anlObj(antal).Anläggningstyp = eO(x).Typ_sluten_tank
					anlObj(antal).besiktningdatum = eO(x).Utförd_datum
					anlObj(antal).beslutsdatum = eO(x).Beslut_datum
					anlObj(antal).Volym_m3 = eO(x).Storlek__m3
					anlObj(antal).radnummer = eO(x).rowindex
					anlObj(antal).ärendenr =  DiarieUtanBokstäver(DiarieMixedToUnit(eO(x).Diarienummer))
				end if
			end if
		next
	end if
	
	 if rening >= 1 then
		for x=1 to rening
			if rO(x).rowindex <> 0 then
			 	'if rening is located here, or otherwise
			 	'have to make sure we distinguish unique and non unique references
				antal = antal + 1
				redim anlObj(antal)
			 	anlObj(antal).Kartpunkt = "Efterföljande rening"
				anlObj(antal).Anläggningskategori = x & " Efterföljande rening"		 
	
				anlObj(antal).Antal_hushåll_rening = rO(x).Antal_hushåll_rening
				anlObj(antal).Anläggningstyp = rO(x).Reningstyp
				anlObj(antal).besiktningdatum = rO(x).Utförd_datum
				anlObj(antal).beslutsdatum = rO(x).Beslut_datum
				anlObj(antal).Kommentarer = textAppend(rO(x).Kommentarer,"ansl|",reningsfastigheterAsString(rO(x)))
				anlObj(antal).Volym_m3 = rO(x).Storlek_m2
				anlObj(antal).Koordinater = rO(x).kordinater
				anlObj(antal).radnummer = rO(x).rowindex
				
			end if
		next
	end if
	
	if sweref >= 1 then
		for x=1 to sweref
			if sO(x).rowindex <> 0 then
				antal = antal + 1
				redim anlObj(antal)
				anlObj(antal).Kartpunkt = "Extra inventeringsinformation"
				anlObj(antal).Anläggningskategori = x & " Extra inventeringsinformation"
				anlObj(antal).Utskick1_datum  = sO(x).Utskick1_datum
				anlObj(antal).Status = sO(x).Status
				anlObj(antal).ärendenr = sO(x).ärendenr
				anlObj(antal).Koordinater = sO(x).kordinater
				anlObj(antal).radnummer = sO(x).rowindex
				anlObj(antal).ärendenr =  DiarieUtanBokstäver(DiarieMixedToUnit(sO(x).Ärendenr))
			end if
		next
	end if
	 
	 
   end sub
   
sub utskrivningsobjektsKonstruktor(
		sOx() as swerefobjekt,
		rOx() as reningsObjekt,
		eOx() as enskiltobjekt
	)
	
		dim ittr, objektid as integer	,reningsTokenObjekt() as reningsObjekt	,enskiltTokenObjekt() as enskiltobjekt	,swerefTokenObjekt() as swerefobjekt	,tableName as string	
		,sO(1) as swerefobjekt,	rO(1) as reningsObjekt,	eO(1) as enskiltobjekt
		,uObj() as utskriftsObjekt

		ittr = expandutskriftsobjekt(uObj) tableName = "LatestObjectID"	if IsTableOpen(tableName) then select col1 from LatestObjectID	fetch first from latestObjectID 
		G_senastObjectID = iif(G_senastObjectID < latestObjectID.col1,latestObjectID.col1,G_senastObjectID) end if objektid = iif(G_senastObjectID <> 0,G_senastObjectID + 1,1)

		G_senastObjectID = objektid
		uObj(ittr).Objektid = objektid '"Huvud","ObjektID",: "integer",: "ObjektItterator" 

		call huvuDObjekt(uObj(),ittr)
		call anteckningKordinat(sOx(1),eOx(1),rOx(1),uObj(),ittr)					
		call inventeringsinformation(uObj,ittr,sOx(1))
		call Recipient(uObj,eOx(1),rOx(1),ittr)
		call Avloppsanläggning(uObj(),ittr,eOx(1))				
			
		call subTablesafter(eO,eOx,rO,rOx,sO,sOx,2)
		
		'print ubound(eO) + ubound(rO) + ubound(sO) 
		
		if ubound(eO) + ubound(rOx) + ubound(sO) > 0 then
			dim anl() as anläggningsobjekt
			call Anläggning(anl,eOx,rOx,sO)
			'dessa skapar nya rader, men ändrar inte objektId
			ittr = ittr + anläggningsobjektToUtskifts(anl,uObj,ittr)
		end if
		
		ittr = ittr + diarienummerForutskriftsobjekt(uObj,ittr,eOx,sOx,objektid)
		call fastighetForUtskriftsobjekt(uObj,ittr,sOx,rOx,eOx,objektid)
		call saveUtskriftsProgress(uObj)	
			
End Sub

sub UobjInitizializer()

	dim ensk() as enskiltobjekt,ren() as reningsobjekt,sweref() as swerefobjekt,inputString,RenObjIndex(),EnObjIndex(),SweObjIndex() as string,fastighetsObjekt as alias,ignore as integer

	fastighetsObjekt = G_socken & "fastighetsObjekt.reningsobjekt" inputString = fastighetsObjekt ignore = getMain(inputString, RenObjIndex())
	fastighetsObjekt = G_socken & "FastighetsObjekt.enskiltObjekt" inputString = fastighetsObjekt ignore = getMain(inputString, EnObjIndex())
	fastighetsObjekt = G_socken & "FastighetsObjekt.swerefobjekt" inputString = fastighetsObjekt ignore = getMain(inputString, SweObjIndex())

	call ReningSubsetByIndex(G_reningsobjekt,RenObjIndex,ren)
	call EnskiltSubsetByIndex(G_enskiltobjekt,EnObjIndex,ensk)
	call SwerefSubsetByIndex(G_swerefObjekt,SweObjIndex,sweref)

	'skapa muttationer organiserar om arrayna om så behövs
	dim before as integer
	before = ubound(ren) + ubound(ensk) + ubound(sweref)
	if (ubound(ren) > 1 OR ubound(ensk) > 1 OR ubound(sweref) > 1) then
		call skapaMutationer(ensk,ren,sweref,1) 
	end if
	
	if (before <> ubound(ren) + ubound(ensk) + ubound(sweref))
		then print "WARNING before:" & before & " after_ " & ubound(ren) + ubound(ensk) + ubound(sweref)
	end if
		
	'utskriftskonstruktor förväntar sig att ingen av objekten har 0 som rowindex, altså, då blir det tomt.
	if (ubound(ren) < 1 OR ubound(ensk) < 1 OR ubound(sweref) < 1) then
		call initializer(ren,ensk,sweref)
	end if
	call utskrivningsobjektsKonstruktor(sweref,ren,ensk)
		
end sub

function textAppend(byVal initial as string,byVal prefix as string,byVal  appendant as string) as string

	initial = rtrim$(ltrim$(initial))
	appendant = rtrim$(ltrim$(appendant))
	prefix = rtrim$(ltrim$(prefix))
	
	if appendant = "0" then
		prefix = " " & prefix & "?" & " "
	else if len(appendant) < 2 then
		prefix = " "
		else
		prefix = " " & prefix & " "
		end if
		
	end if
	
	textAppend = rtrim$(ltrim$(initial & prefix & appendant))

end function

sub anteckningKordinat(sweref as swerefobjekt,ensk as enskiltobjekt,rening as reningsobjekt ,uObj() as utskriftsobjekt, ittr as integer)
   
   		if (sweref.rowindex <> 0) then		
		 	if (ensk.rowindex <> 0) then
				uObj(ittr).Anteckning = textAppend(textAppend(uObj(ittr).Anteckning,"inv|",sweref.Anteckning),"Bes|",ensk.Anteckningar)
				uObj(ittr).Fliken_Koordinater = ensk.kordinater
			else
		 		uObj(ittr).Anteckning = textAppend(uObj(ittr).Anteckning,"inv|",sweref.Anteckning)
		 		uObj(ittr).Fliken_Koordinater = sweref.kordinater
		 	end if
		 	uObj(ittr).PunkttypAB = "inventeringsinformation"
		else  
			if (ensk.rowindex <> 0) then
				uObj(ittr).Anteckning = textAppend(uObj(ittr).Anteckning,"Bes|",ensk.Anteckningar)
				uObj(ittr).Fliken_Koordinater = ensk.kordinater
				uObj(ittr).PunkttypAB = "Ansluten byggnad"
			else
				if (rening.rowindex <> 0) then
					uObj(ittr).Anteckning = textAppend(uObj(ittr).Anteckning,"Ren|",rening.Kommentarer)
					uObj(ittr).Fliken_Koordinater = rening.kordinater
					uObj(ittr).PunkttypAB = "Efterföljande rening"
				end if
			end if
		end if
   
end sub