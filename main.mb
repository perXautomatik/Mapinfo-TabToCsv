
Include "MapBasic.def"
include "Menu.def"
Include "P:\EDP\EDP VISION\TempFilMapp\CRBK01\tabellInsammlare(1).def"
include "P:\EDP\EDP VISION\TempFilMapp\CRBK01\commonLib1.def"

declare sub readCurrentState(användaReningar() as integer)
declare function getPathFromPathTable(byVal tableName as string) as string
declare sub sockenProcessor()

sub saveProgress(utskriftsObjekt() as utskriftsObjekt,användaReningar() as integer)

	dim query,värden(),påPlatts(),insertinto,fromTable,tablename,filePath, värde(),temp as string
	,x,y,z as integer
	,tempFloat as float

	tableName = Socken & "ressultat"
	filePath = ApplicationDirectory$() + tableName & ".tab"

	call createRessultTableX(tablename,filePath)

	for x=1 to ubound(utskriftsObjekt)
		call genereraSQLVärdeArray(värde, utskriftsObjekt(x))
		if( StringArrayAsString(värde) <> "0,0,0,0,F,0,0,0,0,0,0,0,0" ) then
			query = generateInsertStringWithArray(tableName, värde)
	
			if("Insert Into ressultat () Values ()" <> query) then 'tomt 
				onerror goto queryError
					run command query
				onerror goto 0
			else
				goto queryError
			end if
		else
			goto queryError
		end if	
	next
	
	commit table tableName
	
	'sparar AnvändaReningar
	Create Table "ArrayTable" (Fält1 Integer) file TempFileName$("") TYPE NATIVE Charset "WindowsLatin1"
	for x=1 to ubound(användaReningar)
		Insert Into ArrayTable Values (användaReningar(x))
	next
	
	call closeIfnotClosed("AnvändaReningarsHash")
	
	select Anslutna_fastigheter_1,CentroidY(Obj),CentroidX(obj) from reningIhopslagen where rowIndex = any (select Col1 from ArrayTable) into AnvändaReningarsHash
	
	'print Format$((tableInfo(AnvändaReningarsHash,tab_info_nRows)/tableInfo(ArrayTable,tab_info_nRows)), "%") & " success save använda reningar"
			
	commit table AnvändaReningarsHash as ApplicationDirectory$() & "AnvändaReningarsHash.tab"
	drop table ArrayTable
	redim utskriftsobjekt(1) 'tömmer utskriftobjekt arrayn
	print "done!"
	methodEnd:
exit sub
queryError:
	print "queryError|" & query & "dropping table"
	print error$()
	drop table tableName
	resume methodEnd
end sub

Sub Main()
	print Chr$(12) 'empty message
	
	run command("Set " + EPSGToCoordSysString$("EPSG::3022"))
		
	tablenames(1) = "fastighet_yta"
	call closeAllBut(tableNames)

	startTime = timer()
	iprogressRange = 10
	iprogress = 0	
	ProgressBar "Processing...." & iProgressRange & " items"
		     Calling populatePathTable
	Range iProgressRange

	iprogressRange = tableinfo(sockenTabell,tab_info_nRows)'+ tableinfo(antalKörningar,tab_info_nrows) *9
	startTime = timer()
	iprogress = 0		
	
	ProgressBar "Processing...." & iProgressRange & " items"
		Calling sockenProcessor
	Range iProgressRange
	
'	call insertFulaFastigheter()
'	
'	call insertMHK()
'	
'	call insertMånsBilder()
'	
'	call assosieraFnr()
'	
'	call assosieraGammlaFastigheterTillNyaFnr()
	
	
	
end sub

Sub NewSocken(byVal nSocken as string,EnskiltObjekt() as enskiltObjekt,reningsObjekt() as reningsObjekt,swerefObjekt() as swerefObjekt)
				
		dim sockenTable,sTbl,query,tempstring as string
		,iLoop,x,size as integer
		
'		For iLoop = 1 to numtables() 
'			do case tableinfo(iLoop,1)
'				case "enskiltSocken" drop table enskiltSocken
'				case "SockenSweref"	drop table SockenSweref
'				case "ReningSocken"	drop table ReningSocken
'				case else
'			end case
'		Next 
							
		print "change " & socken & " to " & nSocken socken = nSocken
		redim tablenames(3) tablenames(1) = nSocken & "Fastigheter" tablenames(2) = "EnskiltIhopslagen" tablenames(3) = "reningIhopslagen" call tableOpener(tablenames) sockenTable = Socken & "Fastigheter"
	
		query = "select " & getColumnsOfTable_asString(tableNames(2)) & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from enskiltIhopslagen where obj within any (select Obj From " & SockenTable & ") group by rowindex into Valtenskilt NoSelect" run command query size = tableInfo(valtenskilt,tab_info_nrows)
		
		fetch first from Valtenskilt
		print socken & " " & size & "valtEnskilt"
			for x=1 to size Redim EnskiltObjekt(x)		
				if (Valtenskilt.Diarienummer<>"MHN") then EnskiltObjekt(x).Diarienummer = DiarieMixedToUnit(Valtenskilt.Diarienummer) end if					
				EnskiltObjekt(x).Fastighet_tillstånd = searchReplace(Valtenskilt.Fastighet_tillstånd,"""","'")
				EnskiltObjekt(x).spatialShift = searchReplace(Valtenskilt.spatialshift,"""","'")
				EnskiltObjekt(x).spatialFastighet = searchReplace(Valtenskilt.spatialFastighet,"""","'")
				EnskiltObjekt(x).Typ_byggnad = searchReplace(Valtenskilt.Typ_byggnad,"""","'")
				EnskiltObjekt(x).Antal_hushåll_tillstånd = searchReplace(Valtenskilt.Antal_hushåll_tillstånd,"""","'")
				EnskiltObjekt(x).Fastighet_rening = searchReplace(Valtenskilt.Fastighet_rening,"""","'")
				EnskiltObjekt(x).Typ_Slamavskiljare = searchReplace(Valtenskilt.Typ_Slamavskiljare,"""","'")
				EnskiltObjekt(x).Storlek_m3 = Valtenskilt.Storlek_m3
				EnskiltObjekt(x).Typ_rening = searchReplace(Valtenskilt.Typ_rening,"""","'")
				EnskiltObjekt(x).Storlek_m2 = Valtenskilt.Storlek_m2
				EnskiltObjekt(x).Typ_sluten_tank = searchReplace(Valtenskilt.Typ_sluten_tank,"""","'")
				EnskiltObjekt(x).Storlek__m3 = Valtenskilt.Storlek__m3
				EnskiltObjekt(x).Beslut_datum = Valtenskilt.Beslut_datum
				EnskiltObjekt(x).Utförd_datum = Valtenskilt.Utförd_datum
				EnskiltObjekt(x).Avgift = val("" & Valtenskilt.Avgift)
				EnskiltObjekt(x).Tillstånd_giltigt_tom = Valtenskilt.Tillstånd_giltigt_tom
				EnskiltObjekt(x).Anteckningar = searchReplace(Valtenskilt.Anteckningar,"""","'")
				EnskiltObjekt(x).kordinater = Valtenskilt.koor
				
				'EnskiltObjekt(x).slamDispDat = 
			fetch next from ValtEnskilt
		next
			
		query = "select " & getColumnsOfTable_asString(tableNames(3)) & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from reningIhopslagen where obj within any (select Obj From " & SockenTable & ") group by rowindex into ValtRening NoSelect" run command query size = tableInfo(valtRening,tab_info_nrows) fetch first from ValtRening
		print socken & " " & size & "reningsObjekt"
		for x=1 to size
			
			Redim reningsObjekt(x)
			reningsObjekt(x).spatialFastighet = valtRening.spatialFastighet
			reningsObjekt(x).spatialShift = valtRening.spatialShift
			reningsObjekt(x).Fastighet_rening = searchReplace(valtRening.Fastighet_rening,"""","'")	
			reningsObjekt(x).Antal_hushåll_rening = iif(val(valtRening.Antal_hushåll_rening & "") <> 0,val(valtRening.Antal_hushåll_rening & ""),1)
			reningsObjekt(x).Reningstyp = searchReplace(valtRening.Reningstyp,"""","'")
			reningsObjekt(x).Storlek_m2 = valtRening.Storlek_m2
			reningsObjekt(x).kordinater = valtRening.koor tempstring = "" & 
			valtRening.Beslut_datum if mixedDateToUnion(tempstring) <> "0" then reningsObjekt(x).Beslut_datum = StringToDate(mixedDateToUnion(tempstring)) else	reningsObjekt(x).Kommentarer = searchReplace(tempString & " " & reningsObjekt(x).Kommentarer,"""","'") end if		tempstring = "" & 
			valtRening.Utförd_datum	if mixedDateToUnion(tempstring) <> "0" then	reningsObjekt(x).utförd_datum = StringToDate(mixedDateToUnion(tempstring)) else	reningsObjekt(x).Kommentarer = searchReplace(tempString & " " & reningsObjekt(x).Kommentarer,"""","'") end if
			reningsObjekt(x).Kommentarer = searchReplace(valtRening.Kommentarer & " " & reningsObjekt(x).Kommentarer,"""","'")
			call getAnslutna(reningsObjekt(x).Anslutna_fastigheter) 
			reningsObjekt(x).rowIndex = valtRening.rowIndex
			
			fetch next from ValtRening
		next
		
		query = "select " & getColumnsOfTable_asString("Fastigheter_sweref") & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from  Fastigheter_sweref where obj within any (select Obj From " & SockenTable & ") group by rowindex into Valtsweref NoSelect" run command query size = tableInfo(Valtsweref,tab_info_nrows)
		
		if size > 0 then fetch first from Valtsweref
			print socken & " " & size & "Valtsweref"
			for x=1 to size
				Redim swerefObjekt(x) 
				swerefObjekt(x).FASTIGHET = searchReplace(Valtsweref.FASTIGHET,"""","'")
				swerefObjekt(x).Fastighet_tillstånd = searchReplace(Valtsweref.Fastighet_tillstånd,"""","'")
				if (Valtsweref.Ärendenr<>"MHN") then swerefObjekt(x).Ärendenr = DiarieMixedToUnit(Valtsweref.Ärendenr) end if
				swerefObjekt(x).Beslut_datum = Valtsweref.Beslut_datum
				swerefObjekt(x).Status = searchReplace(Valtsweref.Status,"""","'")
				swerefObjekt(x).Utskick1_datum = Valtsweref.Utskick1_datum
				swerefObjekt(x).Anteckning = searchReplace(Valtsweref.Anteckning,"""","'")
				swerefObjekt(x).utförddatum = Valtsweref.utförddatum
				swerefObjekt(x).slamhämtning = searchReplace(Valtsweref.slamhämtning,"""","'")
				swerefObjekt(x).Antal_byggnader = Valtsweref.Antal_byggnader
				swerefObjekt(x).kordinater = Valtsweref.koor
				swerefObjekt(x).SpatialFastighet = Valtsweref.SpatialFastighet
	
				fetch next from Valtsweref
			next
		end if
		
	call increment(iProgress,iProgressRange,starttime)		
end sub

'läser in forna sockenfiler, laddar listan med använda reningar.
'rening bör inte skapas igen föräns vid datumskifte, precis som SockenUtsökning

sub readCurrentState(användaReningar() as integer)
	dim filePath,tempsTring as string
	 ,i,x,returnInt as integer	
	,debugg as logical 
	debugg = true
	x = timer() returnInt = 0 if debugg then print "---------------------------boutToReadReningar-----" end if
	
'	if not(thereIsNoFileByPath(getPathFromPathTable("AnvändaReningarsHash"))) then
'		if(ubound(användaReningar) = 0) then
'			call openSingleTable("AnvändaReningarsHash")
'			call openSingleTable("reningIhopslagen")
'			onError goto NoArrayToLoad
'				select rowIndex from reningIhopslagen,AnvändaReningarsHash where AnvändaReningarsHash.Anslutan_fastigher_1 = reningIhopslagen.Anslutan_fastigher_1 AND AnvändaReningarsHash.Col2=CentroidY(reningIhopslagen.Obj) AND AnvändaReningarsHash.Col3=CentroidX(reningIhopslagen.obj) into laddadeReningar if debugg then print "---------------------------laddadeReningar,tab_info_Ncols-----" & tableInfo(laddadeReningar,tab_info_Nrows) end if
'			if tableInfo(laddadeReningar,tab_info_nrows) > 0 then	
'				do until eot(laddadeReningar)
'					i = laddadeReningar.col1
'					call addIntToArrayAsifSet(användaReningar(),i)
'					fetch next from laddadeReningar
'				loop
'			end if		
'		end if
'			onError goto 0
'	end if x = timer()-x if debugg then print "---------------------------took-----" & x print "---------------------------Ubound(användaReningar)-----" & Ubound(användaReningar) end if
'	
	do until eot(sockenTabell)			
		if SingletableOpenerConfirmation(tempstring) then 'returns true if sucessfully open table
			call increment(iProgress,iProgressRange,starttime) 
			call closeIfnotClosed("LatestObjectID")
			select max(objektid) from tempstring into LatestObjectID
			call görtillbastabell("LatestObjectID")
			close table tempstring
		else
			if debugg then print "221 no file" end if
			goto endOfloop
		end if			
		fetch next from sockenTabell
	loop
	endofLoop: if debugg then print "---------------------------sockenTabell.col1-----" & sockenTabell.SockenX end if

end sub		

sub populatePathTable
	dim tempstring,tablenames(3) as string
		,tempAlias as alias
		
	do case iProgress
	case 1
		tempstring = "PathTABLE"
		if not(tableDoesntExist(tempstring)) then
			close table "pathTable"
		end if
		
		CREATE TABLE PathTABLE (tableName Char(40),tablePath Char(256),alternative Char(40)) File TempFileName$("")
	case 2 'grundtabeller
		call insertInitialTables()
	case 3'Fastighetskikt med adress
	
		tempString = applicationDirectory$() & "fastighet_ytaAd.tab"
		if(not(FileExists(tempString))) then
			redim tableNames(2)
			
			tablenames(1) = "fastighet_ytaORg"
			tablenames(2) = "Adresspunkter"
						
			call tableOpener(tablenames)

			Create Table "TempTable" (KIR Char(40),ADRESS Char(105),POSTNR Char(9),POSTORT Char(105),FASTIGHET Char(54),FNR Integer) file tempString TYPE NATIVE Charset "WindowsLatin1"
			Create Map For TempTable CoordSys Earth Projection 8, 33, "m", 18.75, 0, 1, 150000, 0 Bounds (-8099143.95363, -10001965.7294) (8399143.95363, 10001965.7294)
			Insert Into TempTable ( COL1, COL5, COL6) Select COL2, COL12, Col1  From fastighet_ytaORg DropIndex Auto
			Add Column "TempTable" (POSTORT )From Adresspunkter Set To POSTORT Where within
			Add Column "TempTable" (POSTnr )From Adresspunkter Set To POSTnr Where within
			Add Column "TempTable" (ADRESS )From Adresspunkter Set To ADRESS Where within

			select * from tempTable where adress = "" into TomtTempTable

			Add Column "TomtTempTable" (ADRESS )From Adresspunkter Set To ADRESS Where COL6 = COL3 
			Add Column "TomtTempTable" (POSTORT )From Adresspunkter Set To POSTORT Where COL6 = COL3 
			Add Column "TomtTempTable" (POSTnr )From Adresspunkter Set To POSTnr Where COL6 = COL3 

			commit table TempTable
			Create Index On TempTable(kir)
			commit table TempTable
			
			close table fastighet_ytaORg
			close table Adresspunkter		
			close table TempTable
		end if
		insert into Pathtable (tablePath,TableName) values (Tempstring, "fastighet_yta")
	
	case 4'egen swereftabell med spatial fastighet och index
		redim tableNames(2)
		tablenames(1) = "Fastigheter_swerefNoIndex"
		tablenames(2) = "fastighet_yta"
		call tableOpener(tablenames)
		select * from tablenames(1) into "Fastigheter_sweref"
		tempstring = görTillBasTabellReturneraPath("Fastigheter_sweref")
		
		insert into Pathtable (tablePath,TableName) values (tempstring, "Fastigheter_sweref")
		
		tempAlias = "Fastigheter_sweref"
		call UpdateIndex(tempAlias)
		Alter Table Fastigheter_sweref (add SpatialFastighet Char(40), SpatialShift Char(40))
		Commit table Fastigheter_sweref
		Add Column "Fastigheter_sweref" (SpatialFastighet)From fastighet_yta Set To kir Where contains
		Add Column "Fastigheter_sweref" (SpatialShift)From fastighet_yta Set To fastighet Where contains
		call tableCloserAndCommiter(tableNames)
	case 5'egna EnskiltTabeller med spatial fastighet
		redim tableNames(4)
		
		tablenames(1) = "Enskilt_avlopp_SödraNoIndex"
		tablenames(2) = "Enskilt_avlopp_NorraNoIndex"
		tablenames(3) = "Enskilt_avlopp_MellerstaNoIndex"
		tablenames(4) = "fastighet_yta"
		
		call tableOpener(tablenames)
		
		select * from tablenames(1) into "Enskilt_avlopp_Södra"
		select * from tablenames(2) into "Enskilt_avlopp_Norra"
		select * from tablenames(3) into "Enskilt_avlopp_Mellersta"
'				
		tempstring = görTillBasTabellReturneraPath("Enskilt_avlopp_Södra")
		tempstring = görTillBasTabellReturneraPath("Enskilt_avlopp_Norra")
		tempstring = görTillBasTabellReturneraPath("Enskilt_avlopp_Mellersta")
		
		Alter Table Enskilt_avlopp_Södra ( add SpatialFastighet Char(40), SpatialShift Char(40) )
		Add Column "Enskilt_avlopp_Södra" (SpatialFastighet )From fastighet_yta Set To kir Where contains
		Add Column "Enskilt_avlopp_Södra" (SpatialShift )From fastighet_yta Set To Fastighet Where contains
		
		Alter Table Enskilt_avlopp_Norra ( add SpatialFastighet Char(40), SpatialShift Char(40)  )
		Add Column "Enskilt_avlopp_Norra" (SpatialFastighet )From fastighet_yta Set To kir Where contains
		Add Column "Enskilt_avlopp_Norra" (SpatialShift) From fastighet_yta Set To Fastighet Where contains
		
		Alter Table Enskilt_avlopp_Mellersta (add SpatialFastighet Char(40), SpatialShift Char(40) )
		Add Column "Enskilt_avlopp_Mellersta" (SpatialFastighet )From fastighet_yta Set To kir Where contains
		Add Column "Enskilt_avlopp_Mellersta" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
				
		call tableCloser(tablenames())
		
	case 6''egna reningstabeller med spatial fastighet
		redim tableNames(4)
		
		tablenames(1) = "Rening_SödraNoIndex"
		tablenames(2) = "Rening_NorraNoIndex"
		tablenames(3) = "Rening_MellerstaNoIndex"
		tablenames(4) = "fastighet_yta"
						
		call tableOpener(tablenames)
		
		select * from tablenames(1) into "Rening_Södra"
		select * from tablenames(2) into "Rening_Norra"
		select * from tablenames(3) into "Rening_Mellersta"
				
		tempstring = görTillBasTabellReturneraPath("Rening_Södra")
			insert into Pathtable (tablePath,TableName) values (Tempstring, "Rening_Södra")
		tempstring = görTillBasTabellReturneraPath("Rening_Norra")
			insert into Pathtable (tablePath,TableName) values (Tempstring, "Rening_Norra")
		tempstring = görTillBasTabellReturneraPath("Rening_Mellersta")
			insert into Pathtable (tablePath,TableName) values (Tempstring, "Rening_Mellersta")
			
		Alter Table Rening_Södra ( add SpatialFastighet Char(40), SpatialShift Char(40)  )
		Add Column "Rening_Södra" (SpatialFastighet )From fastighet_yta Set To kir Where contains
		Add Column "Rening_Södra" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
		commit table Rening_Södra
		Alter Table "Rening_Södra" ( order Fastighet_rening,Antal_hushåll_rening,Reningstyp,Storlek_m2,Beslut_datum,Utförd_datum,Kommentarer,Anslutna_fastigheter_1,Anslutna_fastigheter_2,Anslutna_fastigheter_3,Anslutna_fastigheter_4,Anslutna_fastigheter_5,Anslutna_fastigheter_6,Anslutna_fastigheter_7,Anslutna_fastigheter_8,Anslutna_fastigheter_9,Anslutna_fastigheter_10,SpatialFastighet,SpatialShift)
		
		Alter Table Rening_Norra (add SpatialFastighet Char(40), SpatialShift Char(40)  )
		Add Column "Rening_Norra" (SpatialFastighet )From fastighet_yta Set To kir Where contains
		Add Column "Rening_Norra" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
		commit table Rening_Norra
		Alter Table "Rening_Norra" ( order Fastighet_rening,Antal_hushåll_rening,Reningstyp,Storlek_m2,Beslut_datum,Utförd_datum,Kommentarer,Anslutna_fastigheter_1,Anslutna_fastigheter_2,Anslutna_fastigheter_3,Anslutna_fastigheter_4,Anslutna_fastigheter_5,Anslutna_fastigheter_6,Anslutna_fastigheter_7,Anslutna_fastigheter_8,Anslutna_fastigheter_9,Anslutna_fastigheter_10,SpatialFastighet,SpatialShift)
		
		Alter Table Rening_Mellersta ( add SpatialFastighet Char(40), SpatialShift Char(40) )
		Add Column "Rening_Mellersta" (SpatialFastighet)From fastighet_yta Set To kir Where contains
		Add Column "Rening_Mellersta" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
		commit table Rening_Mellersta
		Alter Table "Rening_Mellersta" ( order Fastighet_rening,Antal_hushåll_rening,Reningstyp,Storlek_m2,Beslut_datum,Utförd_datum,Kommentarer,Anslutna_fastigheter_1,Anslutna_fastigheter_2,Anslutna_fastigheter_3,Anslutna_fastigheter_4,Anslutna_fastigheter_5,Anslutna_fastigheter_6,Anslutna_fastigheter_7,Anslutna_fastigheter_8,Anslutna_fastigheter_9,Anslutna_fastigheter_10,SpatialFastighet,SpatialShift)
		
		call tableCloser(tablenames())
	case 7
		redim tableNames(1)
		tableNames(1) = "EnskiltIhopslagen"
		tempstring = CreateTable_EnskiltIhopslagen()
		tempAlias = tableNames(1)
		call insertXintoYtableWhereXcolLessThaYcol("Enskilt_avlopp_mellersta",tableNames(1))
		call insertXintoYtableWhereXcolLessThaYcol("Enskilt_avlopp_Norra",tableNames(1))
		call insertXintoYtableWhereXcolLessThaYcol("Enskilt_avlopp_Södra",tableNames(1))
		Commit table EnskiltIhopslagen
				
		redim tableNames(2)
		tableNames(1) = "Lokalt_omhändertagande_slam"
		tablenames(2) = "fastighet_yta"
		call tableOpener(tablenames)
		
		Select fastighet_yta.KIR, Lokalt_omhändertagande_slam.Diarienr, Lokalt_omhändertagande_slam.Beslutsdatum from Lokalt_omhändertagande_slam, fastighet_yta where Lokalt_omhändertagande_slam.Obj Within fastighet_yta.Obj into slam
		Alter Table "EnskiltIhopslagen" ( add SlamDispDat Date )
		Commit table EnskiltIhopslagen
		Add Column "EnskiltIhopslagen" (SlamDispDat )From slam Set To Beslutsdatum Where COL17 = COL1 
		Add Column "EnskiltIhopslagen" (Anteckningar )From slam Set To "[SlamDisp på: " & DiarieNr & "] " & Anteckningar Where COL17 = COL1 
		Commit table EnskiltIhopslagen
		call UpdateIndex(tempAlias)'already commits
		insert into Pathtable (tablePath,TableName) values (Tempstring, tableNames(1))
		call tableCloserAndCommiter(tableNames)	
	case 8
		tempstring = CreateTable_reningIhopslagen()
		call insertXintoYtableWhereXcolLessThaYcol("rening_mellersta","reningIhopslagen")
		call insertXintoYtableWhereXcolLessThaYcol("rening_Norra","reningIhopslagen")
		call insertXintoYtableWhereXcolLessThaYcol("rening_Södra","reningIhopslagen")
		Commit table reningIhopslagen
		insert into Pathtable (tablePath,TableName) values (Tempstring, "reningIhopslagen")	
	case 9
		'injesera gemensamhetsanläggningar
		call injectGemensamma()
		redim tableNames(1)
		tableNames(1) = "reningIhopslagen"
		tempAlias = tableNames(1)
		commit table reningIhopslagen
		call UpdateIndex(tempAlias)'already commits
		call tableCloserAndCommiter(tableNames)	
	case 10
		redim tablenames(2)
		tablenames(1) = "Fastigheter_sweref"
		tablenames(2) = "fastighet_yta"
		call tableOpener(tablenames)
	
		'väljer första order i fastighetsbeteckningen, om det är en s ändelse, ignoreras detta, förutom burs
	    
	    tempstring = createTemporaryTableAndOpen("""sockenTabelx"" (sockenX Char(254))")
		Insert Into sockenTabelx ( COL1) 
		Select Cond(left$(KIR,InStr(1,KIR," ",)-1)
		      ,"allmänt",""
		      ,"outrett",""
		      ,right$(left$(KIR,InStr(1,KIR," ",)-1),1) = "S" AND left$(KIR,InStr(1,KIR," ",)-1) <> "burs",""
		      ,left$(KIR,InStr(1,KIR," ",)-1)) from fastighet_yta
	    select * from sockenTabelx where col1 <> "" group by col1 order by col1 into sockenTabell
	
		fetch first from sockenTabell
	
		Select kir from fastighet_yta group by kir into antalKörningar				
	end case
	
	call increment(iProgress,iProgressRange,starttime)
		
End Sub

'inläsning förväntar sig att isNewSocken har genrerat tabeller 
sub inläsning(fastighetsobjekt() as FastighetsObjekt,tempAlias3() as enskiltObjekt,tempAlias2() as reningsobjekt,tempAlias1() as swerefObjekt)
	
	dim FastighetsBetInput as string
		,reningsObjekt() as reningsobjekt
		,enskiltObjekt() as enskiltObjekt
		,swerefObjekt() as swerefObjekt
		,returnState as logical
		,swerefStart,ReningStart,EnskiltStart,objektCreationStart,swerefStop,ReningStop,EnskiltStop,objektCreationStop as float
		,antal as integer
	
	FastighetsBetInput = sorteradFastighet.kir
	if(countFasGenerateUtvald(FastighetsBetInput) <> 0) then
		antal = 0	'	swerefStart = timer()'läser in förgenererad tabell begränsad efter socknen
		antal = Swerefinlasare(tempAlias1,FastighetsBetInput,swerefObjekt)'	swerefStop = timer()'	ReningStart = timer()'läser in förgenererad tabell begränsad efter socknen
		antal = antal + Reningsinlasare(tempAlias2,FastighetsBetInput,reningsObjekt)'	ReningStop = timer()'	EnskiltStart = timer()'läser in förgenererad tabell begränsad efter socknen
		antal = antal + Enskiltinlasare(tempAlias3,FastighetsBetInput,enskiltObjekt)'	EnskiltStop = timer()
		
		dim debugg as logical debugg = false'	debugg = (FastighetsBetInput = "ALA OLLAJVS 1:17")	if(debugg) then	print antal end if
	
		if(antal > 0) then'objektCreationStart = timer()
			call FastighetsObjCreation(fastighetsBetInput,reningsobjekt,fastighetsObjekt,swerefObjekt,enskiltObjekt)'objektCreationStop = timer()
		end if'close table utvaldFastighet
	else
		print "countFasGenerateUtvald("& FastighetsBetInput & ") = 0" 
	end if
	
'	call presentTime(swerefStart,ReningStart, EnskiltStart, objektCreationStart,swerefStop,ReningStop, EnskiltStop, objektCreationStop)
	'call increment(iProgress,iProgressRange,starttime)

End sub

sub sockenProcessor()
	dim senasteFastighet,förraSocken,FastighetsBetInput,temp,nSocken,fastighetJustNu as string
	,x,runns,användaReningar() as integer ,currentObjectid,endtime,integerX as float ,newSocken as logical
	,fastighetsObjekt() as fastighetsobjekt ,swerefObjekt() as swerefObjekt,reningsObjekt() as reningsObjekt ,EnskiltObjekt() as enskiltObjekt ,utskriftsObjekt() as utskriftsObjekt

	starttime = timer() nSocken = sockenTabell.sockenX senasteFastighet = "" currentObjectid = 0 socken = "" runns = 0	x=1
	call readCurrentState(användaReningar) Call newSocken(nSocken,EnskiltObjekt(),reningsObjekt(),swerefObjekt()) runns = timer() - starttime
	
	Select * from fastighet_yta where left$(KIR,InStr(1,KIR," ",)-1) = nSocken group by kir into SorteradFastighet fetch first from SorteradFastighet integerX = iif(tableInfo(SorteradFastighet,TAB_INFO_NROWS)=0,1,tableInfo(SorteradFastighet,TAB_INFO_NROWS))

	call increment(iProgress,iProgressRange,starttime)
	starttime = timer()
	do UNtil EOT(SorteradFastighet)
		fastighetJustNu = SorteradFastighet.kir'	debugg = (fastighetJustNu = "ALA OLLAJVS 1:17")'dim debugg as logical debugg = false if(debugg) then end program end if

		call inläsning(FastighetsObjekt,EnskiltObjekt(),reningsObjekt(),swerefObjekt())'reads selected row from sorteradFastighet

		fetch Next from SorteradFastighet
	loop
	
	endtime = timer()-starttime	print "***************************************************************************************************************************" print (timer()-starttime)/integerX & " tidsenheter| " & endtime & " Totala körningens| "  & runns & " sockengenerering" print "***************************************************************************************************************************"
	
	for x = 1 to ubound(fastighetsObjekt) call tolkning(FastighetsObjekt(x),utskriftsObjekt,användaReningar) next 
	
	call saveProgress(utskriftsObjekt,användaReningar) 'Runns = Runns+1 if(runns = 2) then '	end program end if

	redim utskriftsObjekt(1) redim fastighetsObjekt(1)

	fetch next from sockenTabell
end sub

function getPathFromPathTable(byVal tableNamex as string) as string
	
	select tablePath from pathTable where TableName = TableNamex into tempSelect
	fetch first from tempSelect

	getPathFromPathTable = tempSelect.col1
end function