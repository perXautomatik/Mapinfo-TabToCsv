
Include "MapBasic.def"
include "Menu.def"
Include "tabellInsammlare.def"
include "commonLib\commonLib1.def"

declare Sub Main()

declare sub processor_1Pre
declare Sub processor_5Post()
declare sub processor_3PrepMutate()
declare sub processor_2SockenRead 
declare sub processor_4Mutate()

declare sub do1_1_genPathTab 
declare sub do1_3_GenFasWithAdr
declare sub do1_4_prepRenSöd
declare sub do1_4_prepRenNor
declare sub do1_4_prepRenMel

declare sub do1_5_reningIhopslagen

declare sub do1_8_prepareSweref 
declare sub do1_9_egnEnskWSpatFas 
declare sub do1_10_enskiltIhopslagen
declare sub do1_11_prepareSocken

declare Sub do2_1_newSocken(byVal nSocken as string,EnskiltObjekt() as enskiltObjekt,reningsObjekt() as reningsObjekt,swerefObjekt() as swerefObjekt)
declare sub do3_inläsning(fastighetsobjekt() as FastighetsObjekt,tempAlias3() as enskiltObjekt,tempAlias2() as reningsobjekt,tempAlias1() as swerefObjekt)
declare sub do2_4_saveProgress(utskriftsObjekt() as utskriftsObjekt,användaReningar() as integer)

declare sub do3_1_assosieraFnr()
declare sub förberedAvslut()

declare sub do3_6_Gem
declare sub do3_8_SlamDisp 
declare sub do3_3_Anteckningar
declare sub do3_7_CorW3Fas()
declare sub do3_2_MHK()
declare sub do3_4_MultiplaFastigheter
declare sub do3_5_MånsBilder
declare sub byggnadsÅrTillFyraTecken
declare sub do4_Mutations(fastighetsObjekt() as fastighetsobjekt, utskriftsObjekt() as utskriftsObjekt)


declare Sub do2_1_newSockenSweref(byVal nSocken as string,swerefObjekt() as swerefObjekt,CurrentSocken as string)
declare sub do2_1_newSockenRening(byVal nSocken as string,reningsObjekt() as reningsObjekt,CurrentSocken as string)
declare sub do2_1_newSockenEnskilt(byVal nSocken as string,EnskiltObjekt() as enskiltObjekt,CurrentSocken as string)

declare sub do2_readCurrentState(användaReningar() as integer)

declare sub loadSocken(nSocken as string)

global workDir as string,användaReningar() as integer ,rebuild as logical,fastighetsObjekt() as fastighetsobjekt ,swerefObjekt() as swerefObjekt,reningsObjekt() as reningsObjekt ,EnskiltObjekt() as enskiltObjekt ,utskriftsObjekt() as utskriftsObjekt
	
	
Sub Main()
	 'to make sure the coordinationsystem is the right one 'empty message	'question is how to know something need to be rebuilt, maybe by altering our local copy, and overwriting... 'no not good idea as github keeps it synced... 'we could simply manually update, with a swithch
	 '+ tableinfo(antalKörningar,tab_info_nrows) *9
	'if sockentabell is zero, this segment is completely skipped
	'that means that the sockenprogressioncheck has laready bin done in the pathTablePopulation

	rebuild = false print Chr$(12) 'emptyScreen
	run command("Set " + EPSGToCoordSysString$("EPSG::3022")) workdir = "C:\Users\crbk01\OneDrive - Region Gotland\Till Github\Mapinfo\MapInfoTabToCsv" dim tablenames(1) as string tablenames(1) = "fastighet_yta" call closeAllBut(tableNames)
	
	onError goto processor_1PreError iprogressRange = 8 iprogress = 0 startTime = timer() ProgressBar "processor_1Pre...." & iProgressRange & " items" Calling processor_1Pre Range iProgressRange onError goto 0
	onError goto processor_2SockenReadError call openSingletable("socknarOfiltrerade") fetch first from socknarOfiltrerade iprogressRange = tableinfo(socknarOfiltrerade,tab_info_nRows) iprogress = 0 startTime = timer() ProgressBar "processor_2SockenRead...." & iProgressRange & " items"	calling processor_2SockenRead	Range iProgressRange		onError goto 0

	fetch first from sockentabell
	Do Until EOT(sockentabell)
		dim nSocken as string

		onError goto SelectionError	print "sockenTabell Rader_" & tableInfo("sockenTabell",TAB_INFO_NROWS) nSocken = sockenTabell.sockenX call opensingletable("fastighet_yta") dim tempQuery as string tempQuery = "Select * from fastighet_yta where left$(KIR,InStr(1,KIR,"" "",)-1) = " & Chr$(34) & nSocken & Chr$(34) & " AND kir <> """" group by kir into SorteradFastighet"	run command tempQuery onError goto 0
		OnError goto LoadSockenError call loadSocken(nSocken) onError goto 0		
		onError goto processor_3PrepMutateError iprogressRange = tableInfo(SorteradFastighet,TAB_INFO_NROWS) if iprogressRange <> 0 then	startTime = timer() iprogress = 0 fetch first from SorteradFastighet ProgressBar "processor_3PrepMutate...." & iProgressRange & " items" Calling processor_3PrepMutate Range iProgressRange	call SilenttidsSummering(iProgress,iProgressRange,starttime,"processor_1PreMutate") end if onError goto 0	
		onError goto processor_4MutateError iprogressRange = ubound(FastighetsObjekt) if iprogressRange <> 0 then	startTime = timer() iprogress = 0 fetch first from SorteradFastighet ProgressBar "processor_4Mutate...." & iProgressRange & " items" Calling processor_4Mutate Range iProgressRange	call SilenttidsSummering(iProgress,iProgressRange,starttime,"processor_4Mutate") end if onError goto 0
				
		fetch next from sockentabell		
	loop

	onError goto förberedAvslutError call förberedAvslut() 	onError goto 0	
	onError goto postProcessError iprogressRange = 1 iprogress = 0 startTime = timer() ProgressBar "processor_5Post...." & iProgressRange & " items"	Calling processor_5Post	Range iProgressRange onError goto 0

exit sub	
	processor_1PreError: print "processor_1PreError" print error$()	    end program
	processor_2SockenReadError: print "processor_2SockenReadError" print error$()	    end program
	processor_3PrepMutateError:	print "processor_3PrepMutateError"	print error$()	    end program
	processor_4MutateError:	print "processor_4MutateError"	print error$()	    end program
	LoadSockenError:	print "LoadSockenError"	print error$()	    end program
	selectionError:	print "selectionError " & tempQuery	print error$()	end program
	förberedAvslutError:	print "förberedAvslutError"	end program
	postProcessError:	print "postProcessError"	end program
	sockenError:	print "sockenError"	end program

end sub

sub processor_4Mutate()

	call do4_Mutations(fastighetsobjekt, utskriftsObjekt)
	call increment(iProgress,iProgressRange,starttime)	
end sub

sub processor_1Pre
		
	'grundtabeller
	'Fastighetskikt med adress	
	''egna reningstabeller med spatial fastighet
			'egna EnskiltTabeller med spatial fastighet
					'egen swereftabell med spatial fastighet och index
	do case iProgress
	case 1
		call do1_1_genPathTab
		call insertInitialTables()
		call do1_3_GenFasWithAdr	
		call do1_4_prepRenSöd
	case 2 
		call do1_4_prepRenNor
	case 3
		call do1_4_prepRenMel
	case 4
		call do1_5_reningIhopslagen
	case 5
		call do1_8_prepareSweref
	case 6
		call do1_9_egnEnskWSpatFas
	case 7
		call do1_10_enskiltIhopslagen
	case 8
		call do1_11_prepareSocken
	end case
	
	call increment(iProgress,iProgressRange,starttime)
		
End Sub

sub processor_2SockenRead
	'creates two empty 1 column tables called sockenTabell and sockentabellX
	
	'dosent this always evaluate to 0, or, does the magic happen in read current state? 
	call do2_readCurrentState(användaReningar)
	print "|"	& iProgress
	call increment(iProgress,iProgressRange,starttime)

	'if tableinfo(sockenTabell,tab_info_nrows) = 0 
	'then iProgress = -2 end if
end sub

sub processor_3PrepMutate()
	dim fastighetJustNu as string 'initializing global vars? senasteFastighet = "" currentObjectid = 0 socken = "" runns = 0	x=1'	end program 'insert into Pathtable (tablePath,TableName) values (Tempstring, "SorteradFastighet") '	debugg = (fastighetJustNu = "ALA OLLAJVS 1:17")'dim debugg as logical debugg = false if(debugg) then end program end if'reads selected row from sorteradFastighet 
	fastighetJustNu = SorteradFastighet.kir if fastighetJustNu <> "" then 	call do3_inläsning(FastighetsObjekt,EnskiltObjekt(),reningsObjekt(),swerefObjekt()) end if fetch Next from SorteradFastighet	call increment(iProgress,iProgressRange,starttime)	
end sub

sub do3_inläsning(fastighetsobjekt() as FastighetsObjekt,tempAlias3() as enskiltObjekt,tempAlias2() as reningsobjekt,tempAlias1() as swerefObjekt)
	'läser in forna sockenfiler, laddar listan med använda reningar.'rening bör inte skapas igen föräns vid datumskifte, precis som SockenUtsökning 'do3_inläsning förväntar sig att isdo2_1_newSocken har genrerat tabeller 
	
	dim antal as integer, FastighetsBetInput as string,returnState,debugg as logical,swerefObjekt() as swerefObjekt,reningsObjekt() as reningsobjekt,enskiltObjekt() as enskiltObjekt,swerefStart,ReningStart,EnskiltStart,objektCreationStart,swerefStop,ReningStop,EnskiltStop,objektCreationStop as float debugg = false FastighetsBetInput = sorteradFastighet.kir antal = 0 '	debugg = (FastighetsBetInput = "ALA OLLAJVS 1:17")	if(debugg) then	print antal end if'objektCreationStart = timer()'objektCreationStop = timer()'close table utvaldFastighet	'	swerefStart = timer()'läser in förgenererad tabell begränsad efter socknen
	
	if(countFasGenerateUtvald(FastighetsBetInput) <> 0) then 'summer antal relaterade objekt

		antal = SwerefFilterByBet(tempAlias1,FastighetsBetInput,swerefObjekt)'	swerefStop = timer()'	ReningStart = timer()'läser in förgenererad tabell begränsad efter socknen
		antal = antal + ReningsFilterByBet(tempAlias2,FastighetsBetInput,reningsObjekt)'	ReningStop = timer()'	EnskiltStart = timer()'läser in förgenererad tabell begränsad efter socknen
		antal = antal + EnskiltFilterByBet(tempAlias3,FastighetsBetInput,enskiltObjekt)'	EnskiltStop = timer()
		
		if(antal > 0) then
			call FastighetsObjCreation(fastighetsBetInput,reningsobjekt,fastighetsObjekt,swerefObjekt,enskiltObjekt)
		end if
	else
		print "countFasGenerateUtvald("& FastighetsBetInput & ") = 0" 
	end if
	
'	call presentTime(swerefStart,ReningStart, EnskiltStart, objektCreationStart,swerefStop,ReningStop, EnskiltStop, objektCreationStop)
	'call increment(iProgress,iProgressRange,starttime)

End sub

sub do4_Mutations(fastighetsObjekt() as fastighetsobjekt, utskriftsObjekt() as utskriftsObjekt)
		dim x as integer
		for x = 1 to ubound(fastighetsObjekt) 
			call tolkning(FastighetsObjekt(x),utskriftsObjekt,användaReningar)
		next
		
		call do2_4_saveProgress(utskriftsObjekt,användaReningar) 'Runns = Runns+1 if(runns = 2) then '	end program 

end sub

sub förberedAvslut()
	Create table "HelaSolen" (Besöksadress_Adress Char(253),Besöksadress_Postnr Char(253),Besöksadress_Ort Char(253),Besöksadress_Huvudfastighet Char(34),FNR Integer,Verksamhetsutövare_Namn Char(253),Verksamhetsutöv_Person_orgnr Integer,Fakturamottagare_NAMN Char(253),Fakturamottagare_Faktura_ADRESS Char(253),Fakturamottagare_Faktura_POSTNR Char(253),Fakturamottagare_Faktura_POSTOR Char(253),Enhet Char(6),Anteckning Char(253),Aktuell_timavgift Integer,Timdebitering Logical,Objektnamn Char(36),flik_Avloppsänlaggni_Boendetyp Char(15),flik_Avloppsanläggn_Byggnadsår Date,flik_Avloppsa_Besiktningsdatum Date,flik_Avloppsanläg_Beslutsdatum Date,Vatten Char(17),Recipient Char(49),Inventering Char(12),Inventeringsinformation_Datum Date,Inventeringsinformation_Status Char(6),Bedömning Char(15),fliken_Fastigheter Char(34),fliken_FastigheterFNR Integer,PunkttypAB Char(16),Fliken_Koordinater Char(19),fliken_Ärenden Char(13),Anläggningskategori Char(20),besiktningdatum Date,beslutsdatum Date,Anläggningstyp Char(15),Volym_m3 Float,Anl_för_EftR_TöInterv_mån Integer,AnlF_efR_Koordinater_X_o_Y Char(19),PunkttypER Char(20),Anläggning_för_EfterföljRText Char(253),Anläggningskategori_2 Char(19),Anläggning_för_S_Anläggningstyp Char(15),Externt_Tjänsteid Integer,text Char(253),Anläggning_för_Slamav_Volym_m3 Float,Anläggningskategori_3 Char(19),AnlförEfterR_Anläggningstyp Char(15),besiktningdatum_2 Date,beslutsdatum_2 Date,Externt_Tjänsteid2 Integer,Volym_m32 Float,ObjektID Integer,Path Char(253),Diarienummer Char(13),Löpnummer Integer) file workdir & "\HelaSolen.TAB" TYPE NATIVE Charset "WindowsLatin1"
	
	fetch first from socknarOfiltrerade
	do until eot(socknarOfiltrerade)		
		run command("Insert Into HelaSolen Select * From " & socknarOfiltrerade.sockenx & "ressultat")
		fetch next from socknarOfiltrerade
	loop
	
	commit table HelaSolen
	
End Sub

Sub processor_5Post()

'   gerdins anläggningar är inte färdiga, not added in endressult !
' 	few uggly fastigheter with paranteses in them, should be moved to anteckningar, make a deduction of total all chars used in fastighetsregister, and then filer all results that has other chars, and trye to fix them.
'	call assosieraGammlaFastigheterTillNyaFnr()
' 	correct fastigheter already before association

	do case iProgress case 1
		call do3_1_assosieraFnr()
	case 2
		call do3_2_MHK()
	case 3
		call do3_3_Anteckningar
	case 4
		call do3_4_MultiplaFastigheter
		'call klartVattenStatusEndastVidFlagga()
		'call KlartVattenUtskicksDatumIDatumKolumn() 
	case 5
		call do3_5_MånsBilder
	case 6
		call do3_6_Gem	
	case 7
		call do3_7_CorW3Fas
	case 8	
		call do3_8_SlamDisp
		'call assosieraGammlaFastigheterTillNyaFnr()
	case 9
		call byggnadsÅrTillFyraTecken
	end case
	
	call increment(iProgress,iProgressRange,starttime)
	
End Sub

sub byggnadsÅrTillFyraTecken
	commit table helaSolen
	Alter Table "HelaSolen" ( modify flik_Avloppsanläggn_Byggnadsår Char(4) ) Interactive
End Sub

sub do1_1_genPathTab
	dim tempstring as string tempstring = "PathTABLE" if IsTableOpen(tempstring) then close table "pathTable" end if	
		CREATE TABLE PathTABLE (tableName Char(40),tablePath Char(256),alternative Char(40)) File TempFileName$("")

end sub

sub do1_3_GenFasWithAdr

		dim tempstring as string
		tempString = applicationDirectory$() & "fastighet_ytaAd.tab"
		if(not(FileExists(tempString))) then
			print "rebuilding fastighet_ytaAd"
			redim tableNames(2)
			
			tablenames(1) = "fastighet_ytaORg"
			tablenames(2) = "Adresspunkter"
						
			call tableOpener(tablenames)

			Create Table "FaMedAdrPunkt" (KIR Char(40),ADRESS Char(105),POSTNR Char(9),POSTORT Char(105),FASTIGHET Char(54),FNR Integer) file tempString TYPE NATIVE Charset "WindowsLatin1"
			Create Map For FaMedAdrPunkt CoordSys Earth Projection 8, 33, "m", 18.75, 0, 1, 150000, 0 Bounds (-8099143.95363, -10001965.7294) (8399143.95363, 10001965.7294)
			Insert Into FaMedAdrPunkt (KIR, FASTIGHET,FNR) Select COL2, COL12, Col1  From fastighet_ytaORg DropIndex Auto
			Add Column "FaMedAdrPunkt" (POSTORT )From Adresspunkter Set To POSTORT Where within
			Add Column "FaMedAdrPunkt" (POSTnr )From Adresspunkter Set To POSTnr Where within
			Add Column "FaMedAdrPunkt" (ADRESS )From Adresspunkter Set To ADRESS Where within

			select * from FaMedAdrPunkt where adress = "" into TomtFaMedAdrPunkt

			Add Column "TomtFaMedAdrPunkt" (ADRESS )From Adresspunkter Set To ADRESS Where COL6 = COL3 
			Add Column "TomtFaMedAdrPunkt" (POSTORT )From Adresspunkter Set To POSTORT Where COL6 = COL3 
			Add Column "TomtFaMedAdrPunkt" (POSTnr )From Adresspunkter Set To POSTnr Where COL6 = COL3 

			commit table FaMedAdrPunkt
			Create Index On FaMedAdrPunkt(kir)
			commit table FaMedAdrPunkt
			
			close table fastighet_ytaORg
			close table Adresspunkter		
			close table FaMedAdrPunkt
		end if
		insert into Pathtable (tablePath,TableName) values (Tempstring, "fastighet_yta")

end sub

sub do1_4_prepRenSöd
		dim tempstring as string 
		redim tableNames(2)
		
		tempstring = ApplicationDirectory$() & "Rening_Södra.TAB"
		
		if rebuild then
			tablenames(2) = "fastighet_yta"
			tablenames(1) = "Rening_SödraNoIndex"		
			call tableOpener(tablenames)	
	
			select * from tablenames(1) into "Rening_Södra"
			commit table Rening_Södra  As tempstring TYPE NATIVE Charset "WindowsLatin1" Interactive
 			close table Rening_Södra
 			open table tempstring
			Alter Table Rening_Södra ( add SpatialFastighet Char(40), SpatialShift Char(40)  )
			Add Column "Rening_Södra" (SpatialFastighet )From fastighet_yta Set To kir Where contains
			Add Column "Rening_Södra" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
			commit table Rening_Södra
			Alter Table "Rening_Södra" ( order Fastighet_rening,Antal_hushåll_rening,Reningstyp,Storlek_m2,Beslut_datum,Utförd_datum,Kommentarer,Anslutna_fastigheter_1,Anslutna_fastigheter_2,Anslutna_fastigheter_3,Anslutna_fastigheter_4,Anslutna_fastigheter_5,Anslutna_fastigheter_6,Anslutna_fastigheter_7,Anslutna_fastigheter_8,Anslutna_fastigheter_9,Anslutna_fastigheter_10,SpatialFastighet,SpatialShift)
			call tableCloser(tablenames())
		end if
		
		insert into Pathtable (tablePath,TableName) values (Tempstring, "Rening_Södra")
			
end sub

sub do1_4_prepRenNor
		dim tempstring as string 
		redim tableNames(2)
			tempstring = ApplicationDirectory$() & "Rening_Norra.TAB"
		
		if rebuild then
			tablenames(1) = "fastighet_yta"		
			tablenames(2) = "Rening_NorraNoIndex"
			call tableOpener(tablenames)	
			select * from tablenames(2) into "Rening_Norra"
			commit table Rening_Norra  As tempstring TYPE NATIVE Charset "WindowsLatin1" Interactive
			close table Rening_Norra
 			open table tempstring
			Alter Table Rening_Norra (add SpatialFastighet Char(40), SpatialShift Char(40)  )
			Add Column "Rening_Norra" (SpatialFastighet )From fastighet_yta Set To kir Where contains
			Add Column "Rening_Norra" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
			commit table Rening_Norra
			Alter Table "Rening_Norra" ( order Fastighet_rening,Antal_hushåll_rening,Reningstyp,Storlek_m2,Beslut_datum,Utförd_datum,Kommentarer,Anslutna_fastigheter_1,Anslutna_fastigheter_2,Anslutna_fastigheter_3,Anslutna_fastigheter_4,Anslutna_fastigheter_5,Anslutna_fastigheter_6,Anslutna_fastigheter_7,Anslutna_fastigheter_8,Anslutna_fastigheter_9,Anslutna_fastigheter_10,SpatialFastighet,SpatialShift)
			call tableCloser(tablenames())
		end if
		insert into Pathtable (tablePath,TableName) values (Tempstring, "Rening_Norra")
end sub

sub do1_4_prepRenMel
		dim tempstring as string 
		redim tableNames(4)
		tempstring = ApplicationDirectory$() & "Rening_Mellersta.TAB"
		
		if rebuild then
			tablenames(4) = "fastighet_yta"		
			tablenames(3) = "Rening_MellerstaNoIndex"							
			call tableOpener(tablenames)	
			select * from tablenames(3) into "Rening_Mellersta"		
			
			commit table Rening_Mellersta  As tempstring TYPE NATIVE Charset "WindowsLatin1" Interactive
			close table Rening_Mellersta
 			open table tempstring

			Alter Table Rening_Mellersta ( add SpatialFastighet Char(40), SpatialShift Char(40) )
			Add Column "Rening_Mellersta" (SpatialFastighet)From fastighet_yta Set To kir Where contains
			Add Column "Rening_Mellersta" (SpatialShift)From fastighet_yta Set To Fastighet Where contains
			commit table Rening_Mellersta
			Alter Table "Rening_Mellersta" ( order Fastighet_rening,Antal_hushåll_rening,Reningstyp,Storlek_m2,Beslut_datum,Utförd_datum,Kommentarer,Anslutna_fastigheter_1,Anslutna_fastigheter_2,Anslutna_fastigheter_3,Anslutna_fastigheter_4,Anslutna_fastigheter_5,Anslutna_fastigheter_6,Anslutna_fastigheter_7,Anslutna_fastigheter_8,Anslutna_fastigheter_9,Anslutna_fastigheter_10,SpatialFastighet,SpatialShift)
			
			call tableCloser(tablenames())
		end if
		insert into Pathtable (tablePath,TableName) values (Tempstring, "Rening_Mellersta")
end sub
 
sub do1_5_reningIhopslagen
dim tablenames(3) as string

tablenames(1) = "Rening_Mellersta"
tablenames(2) = "rening_Norra"
tablenames(3) = "rening_Södra"
		call tableOpener(tablenames)	
		dim tempstring as string tempstring = CreateTable_reningIhopslagen()
		call insertXintoYtableWhereXcolLessThaYcol("rening_mellersta","reningIhopslagen")
		call insertXintoYtableWhereXcolLessThaYcol("rening_Norra","reningIhopslagen")
		call insertXintoYtableWhereXcolLessThaYcol("rening_Södra","reningIhopslagen")
		Commit table reningIhopslagen
		
		call UpdateIndex("reningIhopslagen")'already commits
		insert into Pathtable (tablePath,TableName) values (Tempstring, "reningIhopslagen")	
		call tableCloserAndCommiter(tableNames)
	end sub

sub do2_readCurrentState(användaReningar() as integer)
	'call columnAsStringArray("gemensamma","kommentarer",gerdinsID)
	'SqlGenWhereColIsNotAny("objektid", gerdinsID) & 
	'why do we need to populate the socken ref table like this everytime rather than using a premade?
	'if socken is 'then ""'then ""'then ""'else
	'populates a single row table, if it fits the conditions, else it filters away unfit ressults
	
	dim filePath,tempsTring,gerdinsID(1),query as string ,i,x,returnInt as integer	,debugg as logical debugg = false	x = timer() returnInt = 0 if debugg then print "---------------------------boutToReadReningar-----" end if
	
	tempstring = socknarOfiltrerade.SockenX & "ressultat"  'if sockenNamnRessultat exsists, then true, else false
	if tempstring <> "ressultat" then
		if openTableAndConfirm(tempstring) then onError goto exitProg 
			
			query = "select max(objektid) " & " from " & tempstring & " " & " into LatestObjectX" run command query fetch first from LatestObjectX	onError goto 0
			if LatestObjectX.col1 > ifOpenFetchFirstCol11Asinteger("LatestObjectID") then	
				call closeSingleTable("LatestObjectID")	
				select * from LatestObjectX into LatestObjectID	call görTillBastabell("LatestObjectID")	else
				call closeSingleTable("LatestObjectX") end if onError goto 0
		else
			tempstring = socknarOfiltrerade.SockenX
			if tempstring <> "" then
				Insert Into sockenTabell (COL1) values (tempstring) 
			end if
		end if
		fetch next from socknarOfiltrerade
	end if

	if	debugg then print "---------------------------sockenTabell.col1-----" & sockenTabell.SockenX end if exit sub exitProg:	print query & "||" & error$()	end program

	call görTillBasTabell("sockenTabell")
end sub	

sub do1_8_prepareSweref
		redim tableNames(2)
		dim tempstring as string tempstring = ApplicationDirectory$() & "Fastigheter_sweref.TAB"
		
		if rebuild then		
			tablenames(1) = "Fastigheter_swerefNoIndex"
			tablenames(2) = "fastighet_yta"
			call tableOpener(tablenames)
			select * from tablenames(1) into "Fastigheter_sweref"
			commit table Fastigheter_sweref  As tempstring TYPE NATIVE Charset "WindowsLatin1" Interactive
			close table Fastigheter_sweref
 			open table tempstring
			call UpdateIndex("Fastigheter_sweref")
			Alter Table Fastigheter_sweref (add SpatialFastighet Char(40), SpatialShift Char(40))
			Commit table Fastigheter_sweref
			
			Add Column "Fastigheter_sweref" (SpatialFastighet)From fastighet_yta Set To kir Where contains
			Add Column "Fastigheter_sweref" (SpatialShift)From fastighet_yta Set To fastighet Where contains
			Commit table Fastigheter_sweref
		end if
		insert into Pathtable (tablePath,TableName) values (tempstring, "Fastigheter_sweref")

end sub

sub do1_9_egnEnskWSpatFas
		
		redim tableNames(4)
				
		dim tempstring1,tempstring2,tempstring3 as string ,tempAlias as alias
	
		tempstring1 = ApplicationDirectory$() & "Enskilt_avlopp_Södra.TAB"
		tempstring2 = ApplicationDirectory$() & "Enskilt_avlopp_Norra.TAB"
		tempstring3 = ApplicationDirectory$() & "Enskilt_avlopp_Mellersta.TAB"
		
		if rebuild then
			tablenames(1) = "Enskilt_avlopp_SödraNoIndex"
			tablenames(2) = "Enskilt_avlopp_NorraNoIndex"
			tablenames(3) = "Enskilt_avlopp_MellerstaNoIndex"
			tablenames(4) = "fastighet_yta"
			
			call closeAllbut(tablenames)
			call tableOpener(tablenames)
			
			tempAlias = tablenames(1) call commitCloseAndReopen(tempAlias,tempstring1)
			tempAlias = tablenames(2) call commitCloseAndReopen(tempAlias,tempstring2)
			tempAlias = tablenames(3) call commitCloseAndReopen(tempAlias,tempstring3)

			call openSingleTable("fastighet_yta")
			
			Alter Table Enskilt_avlopp_SödraNoIndex ( add SpatialFastighet Char(40), SpatialShift Char(40) )
			Add Column "Enskilt_avlopp_SödraNoIndex" (SpatialFastighet )From fastighet_yta Set To kir Where contains
			Add Column "Enskilt_avlopp_SödraNoIndex" (SpatialShift )From fastighet_yta Set To Fastighet Where contains

			
			Alter Table Enskilt_avlopp_NorraNoIndex ( add SpatialFastighet Char(40), SpatialShift Char(40)  )
			Add Column "Enskilt_avlopp_NorraNoIndex" (SpatialFastighet )From fastighet_yta Set To kir Where contains
			Add Column "Enskilt_avlopp_NorraNoIndex" (SpatialShift) From fastighet_yta Set To Fastighet Where contains

			
			Alter Table Enskilt_avlopp_MellerstaNoIndex (add SpatialFastighet Char(40), SpatialShift Char(40) )
			Add Column "Enskilt_avlopp_MellerstaNoIndex" (SpatialFastighet )From fastighet_yta Set To kir Where contains
			Add Column "Enskilt_avlopp_MellerstaNoIndex" (SpatialShift)From fastighet_yta Set To Fastighet Where contains

			'end program
			call tableCloserAndCommiter(tableNames)
		end if
		
		insert into Pathtable (tablePath,TableName) values (Tempstring1, "Enskilt_avlopp_Södra")
		insert into Pathtable (tablePath,TableName) values (Tempstring2, "Enskilt_avlopp_Norra")
		insert into Pathtable (tablePath,TableName) values (Tempstring3, "Enskilt_avlopp_Mellersta")

exit sub
ErRRZ:
		print "[ErRRZ] failed to commit table Enskilt_avlopp_Södra  As " & tempstring1 
		end program	
ErRRZ2:
		print "[ErRRZ] failed to commit table Enskilt_avlopp_Norra  As " & tempstring2 
		end program	
ErRRZ3:
		print "[ErRRZ] failed to commit table Enskilt_avlopp_Mellersta  As " & tempstring3 
		end program	
end sub

sub do1_10_enskiltIhopslagen
		
		dim tempstring as string tempstring = CreateTable_enskiltIhopslagen()
		redim tableNames(3)
	
		tablenames(1) = "Enskilt_avlopp_Södra"
		tablenames(2) = "Enskilt_avlopp_Norra"
		tablenames(3) = "Enskilt_avlopp_Mellersta"
		
		call tableOpener(tablenames)
	
		call insertCommonColumnsFromTableXintoY("Enskilt_avlopp_mellersta","EnskiltIhopslagen")
		call insertCommonColumnsFromTableXintoY("Enskilt_avlopp_Norra","EnskiltIhopslagen")
		call insertCommonColumnsFromTableXintoY("Enskilt_avlopp_Södra","EnskiltIhopslagen")
		Commit table EnskiltIhopslagen
				
		call UpdateIndex("EnskiltIhopslagen")'already commits
		insert into Pathtable (tablePath,TableName) values (Tempstring, "EnskiltIhopslagen")
		call tableCloserAndCommiter(tableNames)
end sub

sub do1_11_prepareSocken
		'figure out what wee need to do whit this function 
		'lets say we generate a necessary table for processor_2SockenRead
		'sockenTabell måste skapas, men denna skall vara tom
		'varför behöver sockenX, och 
		'varför behöver vi änns skapa socknarOfiltrerade?
		'verkar som att processor_2SockenRead behöver socknarOfiltrerade,
		'döper om den så att det förhoppningsvis inte sprider sig vidare

		dim tempstring,tablenames(3) as string	,tempAlias as alias
'	
		tempstring = "socknarOfiltrerade"
		if rebuild then
			print "rebuilding socknarOfiltrerade"
			dim tempBool as logical call openSingleTable("fastighet_yta") 

			tempstring = createTemporaryTableAndOpen("""sockenTabelx"" (sockenX Char(254))")
			insert into sockentabelx Select Cond(left$(KIR,InStr(1,KIR," ",)-1), "allmänt","", "outrett", "", right$(left$(KIR,InStr(1,KIR," ",)-1),1) = "S" AND left$(KIR,InStr(1,KIR," ",)-1) <> "burs","", left$(KIR,InStr(1,KIR," ",)-1)) from fastighet_yta
			select * from sockenTabelx where col1 <> "" group by col1 order by col1 into socknarOfiltrerade
			commit table socknarOfiltrerade as ApplicationDirectory$() & "socknarOfiltrerade.tab"
			close table sockenTabelx
			call openSingleTable("socknarOfiltrerade")
		end if
'		
'		
'		select * from Sockentabell where col1 <> "" group by col1 order by col1 into socknarOfiltrerade
'		redim tablenames(2) tablenames(1) = "EnskiltIhopslagen" tablenames(2) = "reningIhopslagen" call tableOpener(tablenames)	
		tempstring = createTemporaryTableAndOpen("""sockenTabell"" (sockenX Char(254))")
end sub


sub loadSocken(nSocken as string)
'rewrite so that progressbar can be visualized in this method,
'was thinking that maybe a case division, 
'does case work with variables?	it seems like it does in fact work
' but maybe not neccessary		
	dim CurrentSocken,sTbl,tempstring as string
	,iLoop as integer

	redim tablenames(4) 
	if nSocken <> "" then
	
	print "change " & socken & " to " & nSocken socken = nSocken
	CurrentSocken = nSocken & "Fastigheter"
	tablenames(1) = CurrentSocken
	tablenames(2) = "EnskiltIhopslagen"
	tablenames(3) = "reningIhopslagen" 
	tablenames(4) = "Fastigheter_sweref"
	call tableOpener(tablenames) 
			
	dim tempinterger as integer startTime = timer() iprogress = 0
	Call do2_1_newSockenRening(nSocken,reningsObjekt(),currentSocken) tempinterger = UBound(reningsObjekt()) call SilenttidsSummering(tempinterger,tempinterger,starttime,"do2_1_newSockenRening") startTime = timer() iprogress = 0 tempinterger = ubound(EnskiltObjekt)
	Call do2_1_newSockenEnskilt(nSocken,EnskiltObjekt(),currentSocken) call SilenttidsSummering(tempinterger,tempinterger,starttime,"do2_1_newSockenEnskilt") startTime = timer() iprogress = 0
	Call do2_1_newSockenSweref(nSocken,swerefObjekt(),currentSocken) tempinterger = ubound(swerefObjekt) call SilenttidsSummering(tempinterger,tempinterger,starttime,"do2_1_newSockenSweref") 
	end if
end sub


Sub do2_1_newSockenSweref(byVal nSocken as string,swerefObjekt() as swerefObjekt,CurrentSocken as string)
dim query as string
,x,size as integer	
	query = "select " & getColumnsOfTable_asString("Fastigheter_sweref") & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from  Fastigheter_sweref," & CurrentSocken & " where spatialFastighet = kir  group by rowindex into Valtsweref NoSelect" run command query size = tableInfo(Valtsweref,tab_info_nrows)
	
	if size > 0 then fetch first from Valtsweref
		print socken & " " & size & "Valtsweref"
		for x=1 to size
			Redim swerefObjekt(x) 
			swerefObjekt(x).FASTIGHET = searchReplace(Valtsweref.FASTIGHET,"""","'")
			swerefObjekt(x).Fastighet_tillstånd = searchReplace(Valtsweref.Fastighet_tillstånd,"""","'")
			if (Valtsweref.Ärendenr<>"MHN") then swerefObjekt(x).Ärendenr = DiarieMixedToUnit(Valtsweref.Ärendenr) end if
			swerefObjekt(x).Beslut_datum = Valtsweref.Beslut_datum
			swerefObjekt(x).Status = searchReplace(Valtsweref.Status,"""","'")
			swerefObjekt(x).Utskick1_datum = Valtsweref.Utskick1_datum
			swerefObjekt(x).Anteckning = searchReplace(Valtsweref.Anteckning,"""","'")
			swerefObjekt(x).utförddatum = Valtsweref.utförddatum
			swerefObjekt(x).slamhämtning = searchReplace(Valtsweref.slamhämtning,"""","'")
			swerefObjekt(x).Antal_byggnader = Valtsweref.Antal_byggnader
			swerefObjekt(x).kordinater = Valtsweref.koor
			swerefObjekt(x).SpatialFastighet = Valtsweref.SpatialFastighet
			
			fetch next from Valtsweref
		next
	end if
	
end sub

Sub do2_1_newSockenEnskilt(byVal nSocken as string,EnskiltObjekt() as enskiltObjekt,CurrentSocken as string)
dim query as string
,x,size as integer	
			query = "select " & getColumnsOfTable_asString(tableNames(2)) & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from enskiltIhopslagen," & CurrentSocken & " where spatialFastighet = kir  group by rowindex into Valtenskilt NoSelect" run command query size = tableInfo(valtenskilt,tab_info_nrows)
			
			fetch first from Valtenskilt
			print socken & " " & size & "valtEnskilt"
				for x=1 to size Redim EnskiltObjekt(x)		
					if (Valtenskilt.Diarienummer<>"MHN") then EnskiltObjekt(x).Diarienummer = DiarieMixedToUnit(Valtenskilt.Diarienummer) end if					
					EnskiltObjekt(x).Fastighet_tillstånd = searchReplace(Valtenskilt.Fastighet_tillstånd,"""","'")
					EnskiltObjekt(x).spatialShift = searchReplace(Valtenskilt.spatialshift,"""","'")
					EnskiltObjekt(x).spatialFastighet = searchReplace(Valtenskilt.spatialFastighet,"""","'")
					EnskiltObjekt(x).Typ_byggnad = searchReplace(Valtenskilt.Typ_byggnad,"""","'")
					EnskiltObjekt(x).Antal_hushåll_tillstånd = searchReplace(Valtenskilt.Antal_hushåll_tillstånd,"""","'")
					EnskiltObjekt(x).Fastighet_rening = searchReplace(Valtenskilt.Fastighet_rening,"""","'")
					EnskiltObjekt(x).Typ_Slamavskiljare = searchReplace(Valtenskilt.Typ_Slamavskiljare,"""","'")
					EnskiltObjekt(x).Storlek_m3 = Valtenskilt.Storlek_m3
					EnskiltObjekt(x).Typ_rening = searchReplace(Valtenskilt.Typ_rening,"""","'")
					EnskiltObjekt(x).Storlek_m2 = Valtenskilt.Storlek_m2
					EnskiltObjekt(x).Typ_sluten_tank = searchReplace(Valtenskilt.Typ_sluten_tank,"""","'")
					EnskiltObjekt(x).Storlek__m3 = Valtenskilt.Storlek__m3
					EnskiltObjekt(x).Beslut_datum = Valtenskilt.Beslut_datum
					EnskiltObjekt(x).Utförd_datum = Valtenskilt.Utförd_datum
					EnskiltObjekt(x).Avgift = val("" & Valtenskilt.Avgift)
					EnskiltObjekt(x).Tillstånd_giltigt_tom = Valtenskilt.Tillstånd_giltigt_tom
					EnskiltObjekt(x).Anteckningar = searchReplace(Valtenskilt.Anteckningar,"""","'")
					EnskiltObjekt(x).kordinater = Valtenskilt.koor
					
					'EnskiltObjekt(x).slamDispDat = 
				fetch next from ValtEnskilt
			next
			'end program
end sub

Sub do2_1_newSockenRening(byVal nSocken as string,reningsObjekt() as reningsObjekt,CurrentSocken as string)
dim query,tempstring as string
,x,size as integer
			query = "select " & getColumnsOfTable_asString(tableNames(3)) & ",CentroidX(obj)  & "","" & CentroidY(obj) ""koor""" & " from reningIhopslagen," & CurrentSocken & " where spatialFastighet = kir  group by rowindex into ValtRening NoSelect" run command query size = tableInfo(valtRening,tab_info_nrows) fetch first from ValtRening
			print socken & " " & size & "reningsObjekt"
			for x=1 to size
				
				Redim reningsObjekt(x)
				reningsObjekt(x).spatialFastighet = valtRening.spatialFastighet
				reningsObjekt(x).spatialShift = valtRening.spatialShift
				reningsObjekt(x).Fastighet_rening = searchReplace(valtRening.Fastighet_rening,"""","'")	
				reningsObjekt(x).Antal_hushåll_rening = iif(val(valtRening.Antal_hushåll_rening & "") <> 0,val(valtRening.Antal_hushåll_rening & ""),1)
				reningsObjekt(x).Reningstyp = searchReplace(valtRening.Reningstyp,"""","'")
				reningsObjekt(x).Storlek_m2 = valtRening.Storlek_m2
				reningsObjekt(x).kordinater = valtRening.koor 
				
				'resolved: no longer resoloves to zero always
				'seems like it always fails and send this date to the anteckningsfält
				tempstring = "" & mixedDateToUnion("" & valtRening.Beslut_datum) if tempstring <> "0" then reningsObjekt(x).Beslut_datum = tempstring else reningsObjekt(x).Kommentarer = searchReplace(tempString & " " & reningsObjekt(x).Kommentarer,"""","'") end if
				
				'resolved: no longer resoloves to zero always
				'seems like it always fails and send this date to the anteckningsfält
				tempstring = "" & mixedDateToUnion("" & valtRening.Utförd_datum) if tempstring <> "0" then reningsObjekt(x).utförd_datum = tempstring else reningsObjekt(x).Kommentarer = searchReplace(tempString & " " & reningsObjekt(x).Kommentarer,"""","'") end if
				
				'assume this line removes double entries in 
				reningsObjekt(x).Kommentarer = searchReplace(valtRening.Kommentarer & " " & reningsObjekt(x).Kommentarer,"""","'")
				
				call getAnslutna(reningsObjekt(x).Anslutna_fastigheter)
				reningsObjekt(x).rowIndex = valtRening.rowIndex
				
				fetch next from ValtRening
			next

end sub

sub do2_4_saveProgress(utskriftsObjekt() as utskriftsObjekt,användaReningar() as integer)

	dim query,värden(),påPlatts(),insertinto,fromTable,tablename,filePath, värde(),temp as string ,x,y,z as integer ,tempFloat as float tableName = Socken & "ressultat" filePath = ApplicationDirectory$() + tableName & ".tab"

	call createRessultTableX(tablename,filePath)

	for x=1 to ubound(utskriftsObjekt)
		call genereraSQLVärdeArray(värde, utskriftsObjekt(x)) if( StringArrayAsString(värde) <> "0,0,0,0,F,0,0,0,0,0,0,0,0" ) then query = generateInsertStringWithArray(tableName, värde) if("Insert Into ressultat () Values ()" <> query) then onerror goto queryError 
			run command query onerror goto 0 else goto queryError end if else goto queryError end if
	next
	
	commit table tableName
	
	'sparar AnvändaReningar
	Create Table "ArrayTable" (Fält1 Integer) file TempFileName$("") TYPE NATIVE Charset "WindowsLatin1"
	for x=1 to ubound(användaReningar) Insert Into ArrayTable Values (användaReningar(x)) next
	
	call closeSingleTable("AnvändaReningarsHash") select Anslutna_fastigheter_1,CentroidY(Obj),CentroidX(obj) from reningIhopslagen where rowIndex = any (select Col1 from ArrayTable) into AnvändaReningarsHash
	
	'print Format$((tableInfo(AnvändaReningarsHash,tab_info_nRows)/tableInfo(ArrayTable,tab_info_nRows)), "%") & " success save använda reningar"
	 'tömmer utskriftobjekt arrayn
	
	commit table AnvändaReningarsHash as ApplicationDirectory$() & "AnvändaReningarsHash.tab" drop table ArrayTable redim utskriftsobjekt(1) print "done!"
	
	methodEnd:
exit sub
queryError:
	print "queryError|" & query & "dropping table"
	print error$()
	drop table tableName
	resume methodEnd
end sub


sub do3_1_assosieraFnr()
    onError goto err1
    call openSingleTable("fastighet_yta")
    Select fliken_Fastigheter, fliken_FastigheterFNR from HelaSolen where (fliken_Fastigheter = "" AND fliken_FastigheterFNR  <> 0) OR (fliken_Fastigheter <> "" AND fliken_FastigheterFNR  = 0) into ToFnr
	onError goto 0
	
	onError goto err2
	Select * from ToFnr where fliken_Fastigheter = "" AND fliken_FastigheterFNR <> 0 into NoFas
	Add Column "NoFas" (fliken_Fastigheter )From fastighet_yta Set To KIR Where COL2 = COL6 
	onError goto 0
	
	onError goto err3
	Select * from ToFnr where fliken_Fastigheter <> "" AND fliken_FastigheterFNR = 0 into NoFnr
	Add Column "NoFnr" (fliken_FastigheterFNR )From fastighet_yta Set To FNR Where COL1 = COL1 
	onError goto 0

	onError goto err4
	Select fliken_Fastigheter, fliken_FastigheterFNR from HelaSolen where (fliken_Fastigheter = "" AND fliken_FastigheterFNR  <> 0) OR (fliken_Fastigheter <> "" AND fliken_FastigheterFNR  = 0) into ToFnr
	Open Table "G:\sbf\Livsmiljö\Gemensamt\mapbasic program projekt\skikt\Vanliga Tabfiler\UrsprungsFastigheterMedSockenOc.TAB" as ursp
	onError goto 0
	
	onError goto err5
	Select * from ToFnr where fliken_Fastigheter = "" AND fliken_FastigheterFNR <> 0 into NoFas
	Add Column "NoFas" (fliken_Fastigheter )From Ursp Set To Beteckning Where COL2 = COL3
	onError goto 0
	
	onError goto err6
	Select * from ToFnr where fliken_Fastigheter <> "" AND fliken_FastigheterFNR = 0 into NoFnr
	Add Column "NoFnr" (fliken_FastigheterFNR )From Ursp Set To FNR Where COL1 = Col4
	onError goto 0
	
exit sub

err1:
	print 1
	resume next
err2:
	print 2
	resume next
err3:
	print 3
	resume next
err4:
	print 4
	resume next
err5:
	print 5
	resume next
err6:
	print 6
	resume next

end sub

sub do3_2_MHK()
	
	open table workdir & "\MhkToVision.TAB" as MhkToVision
	insert into HelaSolen (path,Diarienummer) select * from MhkToVision
end sub

sub do3_3_Anteckningar


Open Table workdir & "\Anteckningar.TAB" Interactive

insert into HelaSolen (diarienummer,löpnummer,path) select diarienummer,löpnummer,path from anteckningar

end sub

sub do3_4_MultiplaFastigheter

Open Table workdir & "\Mer än en fastighet.TAB" Interactive

Insert Into HelaSolen Select * From Mer_än_en_fastighet

commit table helaSolen

end sub
	
sub do3_5_MånsBilder

	Open Table workdir & "\bilder.TAB" Interactive
	select fastighet,path from bilder where fastighet <> "blött jan2018" into utanJan
	insert into HelaSolen (fliken_fastigheter,path) select * from utanJan
	select path from bilder where fastighet = "blött jan2018" into Jan
	insert into HelaSolen (path) select * from Jan
	
end sub
	 
sub do3_6_Gem
		'injesera gemensamhetsanläggningar
		call openSingleTable("reningIhopslagen")
		call PrepareGemensamma()
		call injectGemensamma()
		redim tableNames(1)
		tableNames(1) = "reningIhopslagen"
		dim tempAlias as alias tempAlias = tableNames(1)
		commit table reningIhopslagen
		call UpdateIndex("reningIhopslagen")'already commits
		call tableCloserAndCommiter(tableNames)	
		end sub

sub do3_7_CorW3Fas()
	Open Table workdir & "\ÄrendenMedIngenEllerFelFastighet2.TAB" as fä
	Select Diarienummer, Fnr from fä where Fnr <> 0 into fä2
	
	insert into HelaSolen (diarienummer,fliken_fastigheterFnr) select diarienummer,fnr from fä2
	
end sub


sub do3_8_SlamDisp	
		redim tableNames(2)
		tableNames(1) = "Lokalt_omhändertagande_slam"
		tablenames(2) = "fastighet_yta"
		call tableOpener(tablenames)
		
		Select fastighet_yta.KIR, Lokalt_omhändertagande_slam.Diarienr, Lokalt_omhändertagande_slam.Beslutsdatum from Lokalt_omhändertagande_slam, fastighet_yta where Lokalt_omhändertagande_slam.Obj Within fastighet_yta.Obj into slam
		Alter Table "EnskiltIhopslagen" ( add SlamDispDat Date )
		Commit table EnskiltIhopslagen
	
		Add Column "EnskiltIhopslagen" (SlamDispDat )From slam Set To Beslutsdatum Where COL17 = COL1
		Add Column "EnskiltIhopslagen" (Anteckningar )From slam Set To "[SlamDisp på: " & DiarieNr & "] " & Anteckningar Where COL17 = COL1 
		
			
		end sub
