Include "MapBasic.def"
Include "tabellInsammlare.def"

declare sub attemptSlowInsert(påPlatts() as string,värde() as string,er as string)
declare sub flerAnslutningarenSigSjalv(ressultArray() as string)
declare Function SplitStringAtCharacter(ByVal sInput As String, ByVal sSplitChar As String, sPartsArray() As String) As Integer

declare sub extraheraAnslutningar(ressultArray() as string)

Dim iProgress,iProgressRange,starttime as integer
,qm as string

sub doReningFirst()
	iProgress = 1
	
	startTime = Timer()
	call openSingleTable("reningIhopslagen")
	
	iProgressRange = tableinfo(reningihopslagen, 8)+2
	
	ProgressBar "Processing...." & iProgressRange & " items"
	      Calling StepProgressAnslutningar
	Range iProgressRange
	
	'call tidsSummering(iProgress,iProgressRange,starttime)
	call SilenttidsSummering(iProgress,iProgressRange,starttime)
end sub

sub extraheraAnslutningar(ressultArray() as string)
	
	dim tempInteger,Y,i as integer
	,tempstring,sPartsArray() as string
	
	tempstring = sammanfogadTabell.fliken_fastigheter
	tempInteger = SplitStringAtCharacter(tempstring, ",", sPartsArray())
	y = 0
	
	for i = 1 to ubound(spartsArray)
		if y = 0 then	
			if(spartsArray(i) <> "" ) then
				y = y+1
				redim ressultArray(y)
				ressultArray(y) = spartsArray(i)
			end if
		else 
			if(spartsArray(i) <> "" AND spartsArray(i) <> spartsArray(1)) then
				y = y+1
				redim ressultArray(y)
				ressultArray(y) = spartsArray(i)
			end if
		end if
	next
		
End Sub

Sub StepProgressAnslutningar
	dim currentId as integer
	,query,ressultArray(),tempArray() as string

	do case iprogress
		case 1
			call openSingleTable("sammanfogadTabell")
		case 2
			call sqlPopulateSammanfogadTabell(ressultArray(),tempArray(),"","")
			iProgressRange = tableInfo(sammanfogadTabell,8)
		case else
	
			Fetch rec iProgress From sammanfogadTabell
			
			redim ressultArray(0)
			call extraheraAnslutningar(ressultArray)
			
			if ubound(ressultArray) > 1 then 'fler anslutningar än sig själv
				call flerAnslutningarenSigSjalv(ressultArray)
			else
				query = "Update sammanfogadtabell Set fliken_fastigheter = " & qM
			
				if ubound(ressultArray) = 1 then 'set fliken_fastigheter to kir
					query = query & ressultArray(1) & qM & ",besöksadress_huvudfastighet = " & qM & ressultArray(1) 
				else
					query = query & "Update sammanfogadtabell Set fliken_fastigheter = " & qM & " " 
				end if
				
				query = query & qM & " Where ROWID = " & iProgress-2 'iprogress doesn't start att rowid 1 but at 3 if no sub
				
				onError goto queryError
					run command query
				onError goto 0
			end if
	end case
	
	call increment(iProgress,iProgressRange,starttime)
exit sub
	
queryError:
		print "er: " & error$() & TableOfChoiseKir.kir
		print query
Resume next

End Sub

sub flerAnslutningarenSigSjalv(ressultArray() as string)
		'set fliken_fastigheter to ressultArray + kir
	
	dim query as string
	,x as integer

	
	query = "Update sammanfogadtabell Set fliken_fastigheter = " & qM & arrayAsStringIgnoreEmpty(ressultArray) & qM & ",besöksadress_huvudfastighet = " & qM & ressultArray(1) & qM & " Where ROWID = " & iProgress
	
	onError goto queryError
		run command query
	onError goto 0
	
	select * from sammanfogadTabell where rowid = Iprogress into rowWithID
	'x = 1 is to be compared with
	for x = 2 to ubound(ressultArray)	
		query = "Insert Into sammanfogadTabell ( COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8, COL9, COL10, COL11, COL12, COL13, COL14, COL15, COL16, COL17, COL18, COL19, COL20, COL21, COL22, COL23, COL24, COL25, COL26, COL27, COL28, COL29, COL30, COL31, COL32, COL33) Select  COL1," & qM & ressultArray(x) & qM & ", COL3, COL4, COL5, COL6, COL7, COL8, COL9, COL10, COL11, COL12, COL13, COL14, COL15, COL16, COL17, COL18, COL19, COL20, COL21, COL22, COL23, COL24, COL25, COL26, COL27, COL28, COL29, COL30, COL31, COL32, COL33 From rowWithID DropIndex Auto"
		onError goto queryError	
			run command query
		onError goto 0	
	next
	
exit sub
	queryError:
		print "er: " & error$() & TableOfChoiseKir.kir
		print query
	Resume next
end sub


Function SplitStringAtCharacter(ByVal sInput As String, ByVal sSplitChar As String, sPartsArray() As String) As Integer

	OnError Goto HandleError
	
	Dim iPos, iEnd, iCount As Integer
	
	If Len(sInput) = 0 Then
	SplitStringAtCharacter = 0
	Exit Function
	End If
	    
	Do While iEnd <= Len(sInput)
	iPos = iEnd + 1
	iEnd = InStr(iPos, sInput, sSplitChar)
	If iEnd = 0 Then
	iEnd = Len(sInput) + 1
	End If
	
	iCount = iCount + 1
	ReDim sPartsArray(iCount)
	sPartsArray(iCount) = Mid$(sInput, iPos, iEnd - iPos)
	Loop
	
	SplitStringAtCharacter = UBound(sPartsArray)
	
	Exit Function
	'---------------------------
	HandleError:
	Note Error$()

End Function
