Include "MapBasic.def"
Include "tabellInsammlare.def"

declare sub attemptSlowInsert(påPlatts() as string,värde() as string,er as string)
declare sub flerAnslutningarenSigSjalv(ressultArray() as string,Iprogressx as integer)
declare Function SplitStringAtCharacter(ByVal sInput As String, ByVal sSplitChar As String, sPartsArray() As String) As Integer
declare sub extraheraAnslutningar(ressultArray() as string,anslutningar as string)
declare function mixedDateToUnion(datumString as string) as string
declare sub AnslutningOchDatumStandardisering(iprogress as integer)
declare function doTheDateStandardisation(tempstring as string,tempstring2 as string) as string

Dim iProgress,iProgressRange,starttime as integer
,qm as string

sub doReningFirst()
	iProgress = 1
	
	startTime = Timer()
	call openSingleTable("reningIhopslagen")
	
	iProgressRange = tableinfo(reningihopslagen, 8)+1
	
	ProgressBar "Processing...." & iProgressRange & " items"
	      Calling StepProgressAnslutningarNDatum
	Range iProgressRange
	
	'call tidsSummering(iProgress,iProgressRange,starttime)
	call SilenttidsSummering(iProgress,iProgressRange,starttime)
end sub

sub extraheraAnslutningar(ressultArray() as string,anslutningar as string)
	
	dim tempInteger,Y,i as integer
	,sPartsArray() as string
	
	tempInteger = SplitStringAtCharacter(anslutningar, ",", sPartsArray())
	y = 0
	
	for i = 1 to ubound(spartsArray)
		if y = 0 then	
			if(spartsArray(i) <> "" ) then
				y = y+1
				redim ressultArray(y)
				ressultArray(y) = spartsArray(i)
			end if
		else 
			if(spartsArray(i) <> "" AND spartsArray(i) <> spartsArray(1)) then
				y = y+1
				redim ressultArray(y)
				ressultArray(y) = spartsArray(i)
			end if
		end if
	next
		
End Sub

Sub StepProgressAnslutningarNDatum

	dim currentId as integer
	,värde(),påPlatts() as string
	do case iprogress
		case 1
			onError goto stepError
				redim värde(0)
				redim påPlatts(0)
				call knytRening(värde,påPlatts)
				
				call sqlPopulateTableWithTable(värde,påPlatts,"sammanfogadTabell","ReningIhopSlagen")
			onError goto 0
		case else
			call AnslutningOchDatumStandardisering(iProgress)
	end case
	
	call increment(iProgress,iProgressRange,starttime)
exit sub

StepError:
		print "er: " & error$() & TableOfChoiseKir.kir
		print query
Resume next
End Sub

function mixedDateToUnion(datumString as string) as string
	dim tempInteger,i,theYear,theMonth,theDay as integer
	,sPartsArray(),cleanedNumber,ressultString,PaddedMonth,PaddedDay,tempstring as string
	
	tempInteger = SplitStringAtCharacter(datumString & "", "-", sPartsArray())
	
	if tempInteger > 1 then	
			if(tempInteger = 3) then
				cleanedNumber = spartsArray(1) & spartsArray(2) & spartsArray(3)
			else
				for i = 1 to tempInteger		
					cleanedNumber = cleanedNumber & spartsArray(i)
				next
			end if	
	else
		cleanedNumber = datumString
	end if
	
	tempInteger = len(cleanedNumber)
		
	if (tempinteger = 8) then
			TheYear = val(left$(cleanedNumber, 4))
			theDay = val(right$(cleanedNumber,2))
			
			if theDay < 10 then
				PaddedDay = "0" & theDay
			else
				PaddedDay = theDay & ""
			end if
			
'			if TheMonth < 10 then ' didn't work for some damn reason, 
'				TheMonth = "0" & TheMonth
'			else
'				PaddedMonth = TheMonth & ""
'			end if
			tempstring = right$(cleanedNumber,4)
			tempstring = left$(tempString,2)			
			
			ressultString = theYear & "-" & tempstring & "-" & PaddedDay
	else
			ressultString = ""
	end if
		
	mixedDateToUnion = ressultString
End function

function doTheDateStandardisation(beslutsDatum as string,besiktningsDatum as string) as string
		qM = chr$(34)											
		doTheDateStandardisation =  "flik_Avloppsa_Besiktningsdatum = " & qM & mixedDateToUnion(beslutsDatum) & qM & ",flik_Avloppsa_Besiktningsdatum = " & qM & mixedDateToUnion(besiktningsDatum) & qM
end function

sub AnslutningOchDatumStandardisering(iprogress as integer)
	qM = chr$(34)
	dim query,ressultArray(0),tempstring,beslutsDatum,besiktningsDatum,kopplingar,kopplingsString,datumString as string
	,tempinteger as integer 
	,merÄnEnKoppling as logical
	
	Fetch rec iProgress From sammanfogadTabell
	
	tempinteger = iProgress-1 'iprogress doesn't start att rowid 1 but at 2 if no sub
	
	tempstring = sammanfogadTabell.fliken_fastigheter
	beslutsDatum = sammanfogadTabell.flik_Avloppsanläg_Beslutsdatum
	besiktningsDatum = sammanfogadTabell.flik_Avloppsa_Besiktningsdatum
		
	call extraheraAnslutningar(ressultArray,tempstring)
		
	merÄnEnKoppling = ubound(ressultArray) > 1
		
	if ubound(ressultArray) >= 1 then 'set fliken_fastigheter to kir
			
'		if (merÄnEnKoppling) then 'fler anslutningar än sig själv
'			kopplingar = arrayAsStringIgnoreEmpty(ressultArray)
'		else
'			kopplingar = ressultArray(1)
'		end if	
			
		kopplingsString = qM & arrayAsStringIgnoreEmpty(ressultArray) & qM & ",besöksadress_huvudfastighet = " & qM & ressultArray(1) & qM
	
	else
		kopplingsString = qM & " " & qM
	end if	
	
	datumString = doTheDateStandardisation(beslutsDatum,besiktningsDatum)
					
	query = "Update sammanfogadtabell Set fliken_fastigheter = " & kopplingsString & "," & datumString & " Where ROWID = " & tempinteger

	onError goto queryError
		'print query
		run command query
	onError goto 0
	
	if (merÄnEnKoppling) then 'fler anslutningar än sig själv
		call flerAnslutningarenSigSjalv(ressultArray,tempinteger)
	end if

exit sub

stepError:
		print "er: " & iProgress & "|" & error$()
		end program
		resume next
queryError:
	print "er: " & error$() & TableOfChoiseKir.kir
	print query
	Resume next
end sub

sub flerAnslutningarenSigSjalv(ressultArray() as string,Iprogressx as integer)
		'set fliken_fastigheter to ressultArray + kir
	
	dim query as string
	,x as integer

	select * from sammanfogadTabell where rowid = Iprogress into rowWithID
	'x = 1 is to be compared with
	for x = 2 to ubound(ressultArray)	
		'query = "Insert Into sammanfogadTabell ( COL1, COL2, COL3, COL4, COL5, COL6, COL7, COL8, COL9, COL10, COL11, COL12, COL13, COL14, COL15, COL16, COL17, COL18, COL19, COL20, COL21, COL22, COL23, COL24, COL25, COL26, COL27, COL28, COL29, COL30, COL31, COL32, COL33) Select  COL1," & qM & ressultArray(x) & qM & ", COL3, COL4, COL5, COL6, COL7, COL8, COL9, COL10, COL11, COL12, COL13, COL14, COL15, COL16, COL17, COL18, COL19, COL20, COL21, COL22, COL23, COL24, COL25, COL26, COL27, COL28, COL29, COL30, COL31, COL32, COL33 From rowWithID DropIndex Auto"
		
		
		
		
		
		query = "Insert Into sammanfogadTabell Select Anteckning," & qM & ressultArray(x) & qM & ", Besöksadress_Adress,Besöksadress_Postnr,Besöksadress_Ort,Verksamhetsutövare_Namn,Verksamhetsutöv_Person_orgnr,Fakturamottagare_NAMN,Fakturamottagare_Faktura_ADRESS,Fakturamottagare_Faktura_POSTNR,Fakturamottagare_Faktura_POSTOR,flik_Avloppsänlaggni_Boendetyp,flik_Avloppsa_Avrinningsområde,Anläggning_för_S_Anläggningstyp,Anläggning_för_Slam_Toaletttyp,AnlförEfterR_Anläggningstyp,Anläggning_för_EfTR_Toaletttyp,Anläggning_fö_SCertifieringstyp,Anläggning_för_Slamav_Volym_m3,flik_Avloppsanläg_Beslutsdatum,flik_Avloppsa_Besiktningsdatum,flik_Avloppsanläggn_Byggnadsår,Fliken_Koordinater,PunkttypAB,Inventeringsinformation_Status,Inventeringsinformation_Datum,Anl_för_EftR_TöInterv_mån,fliken_Fastigheter,Anläggning_för_EfterföljRText,AnlF_efR_Koordinater_X_o_Y,PunkttypER,FNR,ObjectNamn From rowWithID DropIndex Auto"
		onError goto queryError	
			run command query
		onError goto 0	
	next
exit sub
	queryError:
		print "er: " & error$() & TableOfChoiseKir.kir
		print query
	Resume next
end sub

Function SplitStringAtCharacter(ByVal sInput As String, ByVal sSplitChar As String, sPartsArray() As String) As Integer

	OnError Goto HandleError
	
	Dim iPos, iEnd, iCount As Integer
	
	If Len(sInput) = 0 Then
	SplitStringAtCharacter = 0
	Exit Function
	End If
	    
	Do While iEnd <= Len(sInput)
	iPos = iEnd + 1
	iEnd = InStr(iPos, sInput, sSplitChar)
	If iEnd = 0 Then
	iEnd = Len(sInput) + 1
	End If
	
	iCount = iCount + 1
	ReDim sPartsArray(iCount)
	sPartsArray(iCount) = Mid$(sInput, iPos, iEnd - iPos)
	Loop
	
	SplitStringAtCharacter = UBound(sPartsArray)
	
	Exit Function
	'---------------------------
	HandleError:
	Note Error$()

End Function
