Include "MapBasic.def"
Include "tabellInsammlare.def"

Dim iProgress,iProgressRange,starttime as integer
,qm as string


sub stepProgressEnskiljt

	dim t1,t2 as date
	,rowIdX,x,Y,begränsningsvariabel,statTime,tidsbegränsning,tempInteger,currentId as integer
	,avslutsvariabel as logical
	,tempString,query,påPlatts(),värde(),anslutna(),kir as string
	
	fetch rec iProgress from HarReningTabel
	rowIdx = iProgress
	
	onError goto printError
	
		select * from HarReningTabel where rowId = rowIdX into nuvarandeRad
			
		t1 = nuvarandeRad.beslut_datum 
		t2 = nuvarandeRad.utförd_Datum	
		kir = nuvarandeRad.kir
		
		call doEnskiljt(värde,påPLatts)
		
		select * from sammanfogadTabell where flik_Avloppsanläg_Beslutsdatum=t1 AND flik_Avloppsa_Besiktningsdatum=t2 AND kir=Besöksadress_Huvudfastighet into sammanfogadTabellMatch
	onError goto 0
	
	if(tableInfo(sammanfogadTabellMatch,8) > 0) then
		for x = 1 to ubound(påPlatts)
			onError goto queryError
				query = "Add Column " & qM & sammanfogadTabellMatch & qM & " (" & påPlatts(x) & ") "  & "From nuvarandeRad Set To " & värde(x) & " where flik_Avloppsanläg_Beslutsdatum=beslut_datum"
				run command query
			onError goto 0
		next
	end if
	
	redim värde(0)
	redim påPlatts(0)
	
	iProgress = iProgress + 1

	If iProgress <= iProgressRange Then
		if iProgress mod 100 = 0 then
			dim totaltid,tidperEnhet as integer
			totaltid = 0
			tidPerEnhet = 0
			
			
			totaltid = timer() - starttime
			tidperEnhet = totaltid/iprogress
			
			
			print iProgress & "upskattat: " & ((iprogressRange-iprogress)*tidPerEnhet)\360 & " timmar kvar. " & totaltid/360 & " timmar passerade"
		End If
		
		ProgressBar = iProgress
		Else
		ProgressBar = -1
	End If
	
exit sub
	
queryError:
		print "Qer: " & error$() & TableOfChoiseKir.kir
		print query
printError:
		print "Per: " & error$() & TableOfChoiseKir.kir
		print query
end sub


sub doEnskiljtSecond()

	dim Y,begränsningsvariabel,tidsbegränsning,endtime,totalTid as integer
	,avslutsvariabel as logical
	,qM,tempString,query,värde(), påPlatts(),kir,tidsöversikt,canceledString as string
	
	
	qM = chr$(34)
	avslutsvariabel = false
	tidsbegränsning = Timer() +1
	qM = chr$(34)
	iProgress = 1
	startTime = 0
	
	call openSingleTable("enskiljtIhopslagen")
	startTime = Timer()
				
	query = "select * from EnskiljtIhopSlagen where kir = any(select Besöksadress_Huvudfastighet from sammanfogadTabell) into HarReningTabel"	
	run command query
	
	iProgressRange = tableInfo(HarReningTabel,8)
	
	
	ProgressBar "ProcessingEnskiljt...." & iProgressRange & " items"
	      Calling StepProgressEnskiljt
	Range iProgressRange
	
	endTime = Timer()		
	totalTid = endTime-startTime
	tidsÖversikt = totalTid & " | " & ((totalTid)/iProgress) & " sec/step"
	canceledString = iProgress & "total: " & tidsÖversikt
		
	If CommandInfo(CMD_INFO_STATUS) then
		If iProgress <= iProgressRange then
			Note "ended early, got to step: " & canceledString
		Else
			Note "Complete! total time: " & tidsÖversikt
		End If
	Else
	      Note "cancel, got to step: " & canceledString
	End If	
	
	select * from EnskiljtIhopSlagen where not(kir = any (select Besöksadress_Huvudfastighet from sammanfogadTabell)) into noReningTabel
exit sub

erro1:
	print "Error1:" & rowIdX & ":row " & error$()
	print query
resume exitSub


ContinueError:
	print "ContinueError:" & x & "/" & rowIdX & ":row " & error$()
	print query
	resume exitSub

printError3:
	print 3 & error$()
	print query
	resume exitSub
	
printError2:
	print 2 & error$() 
	print query
	resume exitSub
	
printError4:
	print 4 & error$()
	print query
	resume exitSub

printError5:
	print 3 & error$()
	print query
resume exitSub


queryError:
		tempstring = TableOfChoiseKir.kir
		insert into errorTable (t1,f1,p1) values ("queryError", tempString, query)
		print "error commited"
		commit table errorTable
Resume continueError

exitSub:
end sub


sub DoEnskiljt(värde() as string,påPlatts() as string)
	dim qM as string
	qM = chr$(34)


	onError goto knytningsFel
		call knyt_sColumn_TillRessultatTabellsColumn_(qM & "[" & qM &"& Col1 & " & qM & "] " & qM & " & Col16","Anteckning",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("col18","Besöksadress_Huvudfastighet",värde,påPlatts)'kir
		call knyt_sColumn_TillRessultatTabellsColumn_("Col3","flik_Avloppsänlaggni_Boendetyp",värde,påPlatts)'typ_byggnad
		call knyt_sColumn_TillRessultatTabellsColumn_("Col4","flik_Avloppsa_Avrinningsområde",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col6","Anläggning_för_S_Anläggningstyp",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col7","Anläggning_för_Slam_Toaletttyp",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col8","AnlförEfterR_Anläggningstyp",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col9","Anläggning_för_EfTR_Toaletttyp",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col10","Anläggning_fö_SCertifieringstyp",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col11","Anläggning_för_Slamav_Volym_m3",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col12","flik_Avloppsanläg_Beslutsdatum",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col13","flik_Avloppsa_Besiktningsdatum",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col15","flik_Avloppsanläggn_Byggnadsår",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col5","Anläggning_för_EfterföljRText",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col17","Fliken_Koordinater",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_(qM & "Ansluten byggnad"& qM,"PunkttypAB",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("col19","Besöksadress_Adress",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("col20","Besöksadress_Postnr",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("col21","Besöksadress_Ort",värde,påPlatts)
		call knyt_sColumn_TillRessultatTabellsColumn_("Col22","FNR",värde,påPlatts)
	onError goto 0

exit sub

	knytningsFel:
	print "knytningsFel" & error$()
	end program
	
end sub
